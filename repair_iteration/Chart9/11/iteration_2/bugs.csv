bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  endIndex  =  getEndIndex(start);  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  endIndex  =  getEndIndex(start);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  endIndex  =  getEndIndex(start);	  int    endIndex    =    getIndex(start);    	non-compiled	[CE]  ')'  expected	5	None	replace
2	[BUG]  [BUGGY]  int  periodIndex  =  getSeriesIndex(startIndex);  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  periodIndex  =  getSeriesIndex(startIndex);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  periodIndex  =  getSeriesIndex(startIndex);	      int    periodIndex    =    getSeriesIndex(period);    	non-compiled	[CE]  ')'  expected	9	None	replace
3	[BUG]  [BUGGY]  int  periodIndex  =  getSeriesIndex(start);  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  periodIndex  =  getSeriesIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  periodIndex  =  getSeriesIndex(start);	      int    periodIndex    =    getSeriesIndex(period);    	non-compiled	[CE]  ')'  expected	9	None	replace
4	[BUG]  [BUGGY]  int  periodIndex  =  getIndex(end);  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  periodIndex  =  getIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  periodIndex  =  getIndex(end);	      int    periodIndex    =    getIndex(period);    	non-compiled	[CE]  ')'  expected	8	None	replace
5	[BUG]  [BUGGY]  int  periodIndex  =  getIndex(start);  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  periodIndex  =  getIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  periodIndex  =  getIndex(start);	      int    periodIndex    =    getIndex(period);    	non-compiled	[CE]  ')'  expected	8	None	replace
6	[BUG]  [BUGGY]  int  seriesCount  =  this.data.size()  -  1;  [CE]  [FE]          IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  seriesCount  =  this.data.size()  -  1;  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  seriesCount  =  this.data.size()  -  1;	      int    seriesCount    =    this.data.size();    	non-compiled	[CE]  	2	None	replace
7	[BUG]  [BUGGY]  int  seriesIndex  =  getSeriesIndex(startIndex);  [CE]  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  seriesIndex  =  getSeriesIndex(startIndex);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  seriesIndex  =  getSeriesIndex(startIndex);	      int    seriesIndex    =    getSeriesIndex(endIndex);    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  int  startIndex  =  getIndex(end);  [CE]  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  startIndex  =  getIndex(end);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  startIndex  =  getIndex(end);	  int    startIndex    =    getIndex(start);    	non-compiled	[CE]  	6	None	replace
9	[BUG]  [BUGGY]  int  startIndex  =  getIndex(endIndex);  [CE]  [FE]          IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  startIndex  =  getIndex(endIndex);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  startIndex  =  getIndex(endIndex);	  int    startIndex    =    getIndex(start);    	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  int  endIndex  =  getIndex(end  -  1);  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  endIndex  =  getIndex(end  -  1);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  endIndex  =  getIndex(end  -  1);	  int    endIndex    =    getIndex(end);    	non-compiled	[CE]  ')'  expected	4	None	replace
11	[BUG]  [BUGGY]  if(endIndex  >=  0)  {  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  >=  0)  {  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  >=  0)  {	  if(endIndex    <    0)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
12	[BUG]  [BUGGY]  int  seriesIndex  =  getSeriesIndex(series,  startIndex);  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  seriesIndex  =  getSeriesIndex(series,  startIndex);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  seriesIndex  =  getSeriesIndex(series,  startIndex);	      int    seriesIndex    =    getSeriesIndex(series);    	non-compiled	[CE]  ')'  expected	1	None	replace
13	[BUG]  [BUGGY]  int  endIndex  =  getIndex(start  +  1);  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  endIndex  =  getIndex(start  +  1);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  endIndex  =  getIndex(start  +  1);	  int    endIndex    =    getIndex(start);    	non-compiled	[CE]  ')'  expected	5	None	replace
14	[BUG]  [BUGGY]  int  seriesIndex  =  getSeriesIndex(start);  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  seriesIndex  =  getSeriesIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  seriesIndex  =  getSeriesIndex(start);	      int    seriesIndex    =    getSeriesIndex(endIndex);    	non-compiled	[CE]  ')'  expected	7	None	replace
15	[BUG]  [BUGGY]  int  startIndex  =  getIndex(start  +  1);  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  startIndex  =  getIndex(start  +  1);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  startIndex  =  getIndex(start  +  1);	  int    startIndex    =    getIndex(start);    	non-compiled	[CE]  ')'  expected	6	None	replace
16	[BUG]  [BUGGY]  int  endIndex  =  getSeriesIndex(start);  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  endIndex  =  getSeriesIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  endIndex  =  getSeriesIndex(start);	      int    seriesIndex    =    getSeriesIndex(endIndex);    	non-compiled	[CE]  ')'  expected	7	None	replace
17	[BUG]  [BUGGY]  int  periodIndex  =  getSeriesIndex(end);  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  periodIndex  =  getSeriesIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  periodIndex  =  getSeriesIndex(end);	      int    periodIndex    =    getSeriesIndex(period);    	non-compiled	[CE]  ')'  expected	9	None	replace
18	[BUG]  [BUGGY]  if(endIndex  >  0)  {  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  >  0)  {  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  >  0)  {	  if(endIndex    <    0)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
19	[BUG]  [BUGGY]  int  endIndex  =  getSeriesIndex(end);  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  endIndex  =  getSeriesIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  endIndex  =  getSeriesIndex(end);	      int    periodIndex    =    getSeriesIndex(endIndex);    	non-compiled	[CE]  ')'  expected	3	None	replace
20	[BUG]  [BUGGY]  int  periodIndex  =  getIndex(periodClass);  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  int  periodIndex  =  getIndex(periodClass);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	int  periodIndex  =  getIndex(periodClass);	      int    periodIndex    =    getIndex(period);    	non-compiled	[CE]  ')'  expected	8	None	replace
