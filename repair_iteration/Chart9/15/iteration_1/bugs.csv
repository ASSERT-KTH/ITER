bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    TimeSeries  copy  =(TimeSeries)this.data.get(startIndex);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    TimeSeries  copy  =(TimeSeries)this.data.get(startIndex);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    TimeSeries  copy  =(TimeSeries)this.data.get(startIndex);		non-compiled	[CE]  illegal  start  of  type	30	None	add
2	[BUG]  [BUGGY]    TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  +  1);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  +  1);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  +  1);		non-compiled	[CE]  illegal  start  of  type	30	None	add
3	[BUG]  [BUGGY]    int  startIndex  =  getIndex(startIndex);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    int  startIndex  =  getIndex(startIndex);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    int  startIndex  =  getIndex(startIndex);		non-compiled	[CE]  illegal  start  of  type	30	None	add
4	[BUG]  [BUGGY]  if(!emptyRange)  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]  if(!emptyRange)  {  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)  {	if  (emptyRange)  {  	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  if(this.emptyRange)  {  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]  if(this.emptyRange)  {  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(this.emptyRange)  {	if  (emptyRange)  {  	non-compiled	[CE]  illegal  start  of  type	29	None	replace
6	[BUG]  [BUGGY]  if(emptyRange  &&  startIndex  <  getSeriesCount())  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]  if(emptyRange  &&  startIndex  <  getSeriesCount())  {  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(emptyRange  &&  startIndex  <  getSeriesCount())  {	if  (emptyRange)  {  	non-compiled	[CE]  illegal  start  of  type	29	None	replace
7	[BUG]  [BUGGY]    TimeSeries  start  =(TimeSeries)this.data.get(startIndex);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    TimeSeries  start  =(TimeSeries)this.data.get(startIndex);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    TimeSeries  start  =(TimeSeries)this.data.get(startIndex);		non-compiled	[CE]  illegal  start  of  type	30	None	add
8	[BUG]  [BUGGY]    int  startIndex  =  getIndex(start);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    int  startIndex  =  getIndex(start);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    int  startIndex  =  getIndex(start);		non-compiled	[CE]  illegal  start  of  type	30	None	add
9	[BUG]  [BUGGY]    long  startIndex  =  getIndex(start);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    long  startIndex  =  getIndex(start);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    long  startIndex  =  getIndex(start);		non-compiled	[CE]  illegal  start  of  type	30	None	add
10	[BUG]  [BUGGY]  if(emptyRange  &&  super.isSeriesVisible())  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]  if(emptyRange  &&  super.isSeriesVisible())  {  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(emptyRange  &&  super.isSeriesVisible())  {	if  (emptyRange)  {  	non-compiled	[CE]  illegal  start  of  type	29	None	replace
