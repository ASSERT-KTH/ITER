bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(endIndex);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(endIndex);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	TimeSeries  start  =(TimeSeries)this.data.get(endIndex);	      TimeSeries    start    =(TimeSeries)this.data.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(endIndex  +  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(endIndex  +  1);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(endIndex  +  1);	      TimeSeries    copy    =(TimeSeries)this.data.get(startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  if(!emptyRange  &&  super.isSeriesVisible())  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange  &&  super.isSeriesVisible())  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange  &&  super.isSeriesVisible())  {	  if(emptyRange    &&    super.isSeriesVisible())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  if(isSeriesVisible()  &&  super.isSeriesVisible())  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(isSeriesVisible()  &&  super.isSeriesVisible())  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(isSeriesVisible()  &&  super.isSeriesVisible())  {	  if(emptyRange    &&    super.isSeriesVisible())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(endIndex);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(endIndex);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(endIndex);	      TimeSeries    copy    =(TimeSeries)this.data.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  long  startIndex  =  getIndex(endIndex);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  long  startIndex  =  getIndex(endIndex);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	long  startIndex  =  getIndex(endIndex);	      long    startIndex    =    getIndex(start);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  if(emptyRange  &&  startIndex  <  getSeriesCount()  -  1)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(emptyRange  &&  startIndex  <  getSeriesCount()  -  1)  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(emptyRange  &&  startIndex  <  getSeriesCount()  -  1)  {	  if(emptyRange    &&    startIndex    <    getSeriesCount())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  if(emptyRange  &&  endIndex  <  getSeriesCount())  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(emptyRange  &&  endIndex  <  getSeriesCount())  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(emptyRange  &&  endIndex  <  getSeriesCount())  {	  if(emptyRange    &&    startIndex    <    getSeriesCount())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  if(!emptyRange  &&  startIndex  <  =  endIndex)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange  &&  startIndex  <  =  endIndex)  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange  &&  startIndex  <  =  endIndex)  {	  if(!emptyRange)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  if(!emptyRange  &&  startIndex  >=  endIndex)  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange  &&  startIndex  >=  endIndex)  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange  &&  startIndex  >=  endIndex)  {	  if(!emptyRange)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  int  startIndex  =  getIndex(endIndex);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  int  startIndex  =  getIndex(endIndex);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	int  startIndex  =  getIndex(endIndex);	      int    startIndex    =    getIndex(start);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  int  startIndex  =  getIndex(startIndex  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  int  startIndex  =  getIndex(startIndex  +  1);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	int  startIndex  =  getIndex(startIndex  +  1);	      int    startIndex    =    getIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  if(this.emptyRange  ||  this.data.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(this.emptyRange  ||  this.data.size()  ==  0)  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(this.emptyRange  ||  this.data.size()  ==  0)  {	  if(this.emptyRange)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  if(emptyRange  &&  super.isSeriesVisibleInLegend())  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(emptyRange  &&  super.isSeriesVisibleInLegend())  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(emptyRange  &&  super.isSeriesVisibleInLegend())  {	  if(emptyRange    &&    super.isSeriesVisible())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  if(!emptyRange  &&  startIndex  >  endIndex)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange  &&  startIndex  >  endIndex)  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange  &&  startIndex  >  endIndex)  {	  if(!emptyRange)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  int  startIndex  =  getIndex(end);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  int  startIndex  =  getIndex(end);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	int  startIndex  =  getIndex(end);	      int    startIndex    =    getIndex(start);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  if(!emptyRange  &&  startIndex  <  =  period)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange  &&  startIndex  <  =  period)  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange  &&  startIndex  <  =  period)  {	  if(!emptyRange)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  if(emptyRange  ||  super.isSeriesVisible())  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(emptyRange  ||  super.isSeriesVisible())  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(emptyRange  ||  super.isSeriesVisible())  {	  if(emptyRange    &&    super.isSeriesVisible())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
