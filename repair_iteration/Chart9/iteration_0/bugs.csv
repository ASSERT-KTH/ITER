bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new IllegalArgumentException("Requires start <= end."); [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { [BUGGY] throw new IllegalArgumentException("Requires start <= end."); [BUGGY] } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	
2	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { [BUGGY] [BUGGY] throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	
3	[BUG] [BUGGY] if (start == null) { [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { [BUGGY] if (start == null) { [BUGGY] throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	
4	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { [BUGGY] [BUGGY] if (start == null) { throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	add	
5	[BUG] [BUGGY] if (end == null) { [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start == null) { throw new IllegalArgumentException("Null 'start' argument."); } [BUGGY] if (end == null) { [BUGGY] throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	
6	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start == null) { throw new IllegalArgumentException("Null 'start' argument."); } [BUGGY] [BUGGY] if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	
7	[BUG] [BUGGY] if (start.compareTo(end) > 0) { [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start == null) { throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } [BUGGY] if (start.compareTo(end) > 0) { [BUGGY] throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	replace	
8	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start == null) { throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } [BUGGY] [BUGGY] if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	add	
9	[BUG] [BUGGY] boolean emptyRange = false; [FE] IllegalArgumentException [CONTEXT] if (start == null) { throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } [BUGGY] boolean emptyRange = false; [BUGGY] int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	
10	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (start == null) { throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } [BUGGY] [BUGGY] boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	add	
11	[BUG] [BUGGY] int startIndex = getIndex(start); [FE] IllegalArgumentException [CONTEXT] throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; [BUGGY] int startIndex = getIndex(start); [BUGGY] if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	
12	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throw new IllegalArgumentException("Null 'start' argument."); } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; [BUGGY] [BUGGY] int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	add	
13	[BUG] [BUGGY] if (startIndex < 0) { [FE] IllegalArgumentException [CONTEXT] } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); [BUGGY] if (startIndex < 0) { [BUGGY] startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	
14	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] } if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); [BUGGY] [BUGGY] if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	add	
15	[BUG] [BUGGY] startIndex = -(startIndex + 1); [FE] IllegalArgumentException [CONTEXT] if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { [BUGGY] startIndex = -(startIndex + 1); [BUGGY] if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	
16	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (end == null) { throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { [BUGGY] [BUGGY] startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	add	
17	[BUG] [BUGGY] if (startIndex == this.data.size()) { [FE] IllegalArgumentException [CONTEXT] throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); [BUGGY] if (startIndex == this.data.size()) { [BUGGY] emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	
18	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throw new IllegalArgumentException("Null 'end' argument."); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); [BUGGY] [BUGGY] if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	add	
19	[BUG] [BUGGY] int endIndex = getIndex(end); [FE] IllegalArgumentException [CONTEXT] "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } [BUGGY] int endIndex = getIndex(end); [BUGGY] if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	
20	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] "Requires start on or before end."); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } [BUGGY] [BUGGY] int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	add	
21	[BUG] [BUGGY] if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period  endIndex = endIndex - 1; // so this is last item BEFORE end [FE] IllegalArgumentException [CONTEXT] } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); [BUGGY] if (endIndex < 0) { // end period is not in original series   endIndex = -(endIndex + 1); // this is first item AFTER end period      endIndex = endIndex - 1;  // so this is last item BEFORE end [BUGGY] endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	
22	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); [BUGGY] [BUGGY] if (endIndex < 0) { // end period is not in original series   endIndex = -(endIndex + 1); // this is first item AFTER end period      endIndex = endIndex - 1;  // so this is last item BEFORE end endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	
23	[BUG] [BUGGY] endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1; // so this is last item BEFORE end } [FE] IllegalArgumentException [CONTEXT] boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series [BUGGY] endIndex = -(endIndex + 1); // this is first item AFTER end period   endIndex = endIndex - 1; // so this is last item BEFORE end    } [BUGGY] endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	
24	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series [BUGGY] [BUGGY] endIndex = -(endIndex + 1); // this is first item AFTER end period   endIndex = endIndex - 1; // so this is last item BEFORE end    } endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	add	
25	[BUG] [BUGGY] endIndex = endIndex - 1;// so this is last item BEFORE end } [FE] IllegalArgumentException [CONTEXT] int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period [BUGGY] endIndex = endIndex - 1;// so this is last item BEFORE end  } [BUGGY] } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	
26	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period [BUGGY] [BUGGY] endIndex = endIndex - 1;// so this is last item BEFORE end  } } if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	add	
27	[BUG] [BUGGY] if (endIndex < 0) { [FE] IllegalArgumentException [CONTEXT] startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } [BUGGY] if (endIndex < 0) { [BUGGY] emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { return createCopy(startIndex, endIndex); } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	
28	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true;// start is after last data item } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } [BUGGY] [BUGGY] if (endIndex < 0) { emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { return createCopy(startIndex, endIndex); } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	add	
29	[BUG] [BUGGY] if (emptyRange) { [FE] IllegalArgumentException [CONTEXT] } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } [BUGGY] if (emptyRange) { [BUGGY] TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { return createCopy(startIndex, endIndex); } } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	
30	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] } } int endIndex = getIndex(end); if (endIndex < 0) { // end period is not in original series endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;// so this is last item BEFORE end } if (endIndex < 0) { emptyRange = true; } [BUGGY] [BUGGY] if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { return createCopy(startIndex, endIndex); } } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	add	
31	[BUG] [BUGGY] return createCopy(startIndex, endIndex); [FE] IllegalArgumentException [CONTEXT] if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { [BUGGY] return createCopy(startIndex, endIndex); [BUGGY] } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	
32	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { [BUGGY] [BUGGY] return createCopy(startIndex, endIndex); } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  RegularTimePeriod start RegularTimePeriod end [VARIABLES] boolean emptyRange TimeSeries copy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod end start long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount start startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	add	
33	[BUG] [BUGGY] if (start < 0) { [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { [BUGGY] if (start < 0) { [BUGGY] throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	
34	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { [BUGGY] [BUGGY] if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	add	
35	[BUG] [BUGGY] if (end < start) { [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } [BUGGY] if (end < start) { [BUGGY] throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	
36	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } [BUGGY] [BUGGY] if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	add	
37	[BUG] [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, Day.class); [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name) { [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,    Day.class); [BUGGY] Day.class); } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	
38	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name) { [BUGGY] [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,    Day.class); Day.class); } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	add	
39	[BUG] [BUGGY] } [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name) { this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, Day.class); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	
40	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name) { this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, Day.class); [BUGGY] [BUGGY] } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	add	
41	[BUG] [BUGGY] if (period == null) { [FE] IllegalArgumentException [CONTEXT] public int getIndex(RegularTimePeriod period) { [BUGGY] if (period == null) { [BUGGY] throw new IllegalArgumentException("Null 'period' argument."); } TimeSeriesDataItem dummy = new TimeSeriesDataItem( period, Integer.MIN_VALUE); return Collections.binarySearch(this.data, dummy); } [CLASS] TimeSeries [METHOD] getIndex [RETURN_TYPE] int  RegularTimePeriod period [VARIABLES] boolean TimeSeriesDataItem dummy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	
42	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public int getIndex(RegularTimePeriod period) { [BUGGY] [BUGGY] if (period == null) { throw new IllegalArgumentException("Null 'period' argument."); } TimeSeriesDataItem dummy = new TimeSeriesDataItem( period, Integer.MIN_VALUE); return Collections.binarySearch(this.data, dummy); } [CLASS] TimeSeries [METHOD] getIndex [RETURN_TYPE] int  RegularTimePeriod period [VARIABLES] boolean TimeSeriesDataItem dummy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	add	
43	[BUG] [BUGGY] TimeSeriesDataItem dummy = new TimeSeriesDataItem( period, Integer.MIN_VALUE); [FE] IllegalArgumentException [CONTEXT] public int getIndex(RegularTimePeriod period) { if (period == null) { throw new IllegalArgumentException("Null 'period' argument."); } [BUGGY] TimeSeriesDataItem dummy = new TimeSeriesDataItem(    period, Integer.MIN_VALUE); [BUGGY] period, Integer.MIN_VALUE); return Collections.binarySearch(this.data, dummy); } [CLASS] TimeSeries [METHOD] getIndex [RETURN_TYPE] int  RegularTimePeriod period [VARIABLES] boolean TimeSeriesDataItem dummy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	
44	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public int getIndex(RegularTimePeriod period) { if (period == null) { throw new IllegalArgumentException("Null 'period' argument."); } [BUGGY] [BUGGY] TimeSeriesDataItem dummy = new TimeSeriesDataItem(    period, Integer.MIN_VALUE); period, Integer.MIN_VALUE); return Collections.binarySearch(this.data, dummy); } [CLASS] TimeSeries [METHOD] getIndex [RETURN_TYPE] int  RegularTimePeriod period [VARIABLES] boolean TimeSeriesDataItem dummy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	add	
45	[BUG] [BUGGY] return Collections.binarySearch(this.data, dummy); [FE] IllegalArgumentException [CONTEXT] public int getIndex(RegularTimePeriod period) { if (period == null) { throw new IllegalArgumentException("Null 'period' argument."); } TimeSeriesDataItem dummy = new TimeSeriesDataItem( period, Integer.MIN_VALUE); [BUGGY] return Collections.binarySearch(this.data, dummy); [BUGGY] } [CLASS] TimeSeries [METHOD] getIndex [RETURN_TYPE] int  RegularTimePeriod period [VARIABLES] boolean TimeSeriesDataItem dummy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	
46	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public int getIndex(RegularTimePeriod period) { if (period == null) { throw new IllegalArgumentException("Null 'period' argument."); } TimeSeriesDataItem dummy = new TimeSeriesDataItem( period, Integer.MIN_VALUE); [BUGGY] [BUGGY] return Collections.binarySearch(this.data, dummy); } [CLASS] TimeSeries [METHOD] getIndex [RETURN_TYPE] int  RegularTimePeriod period [VARIABLES] boolean TimeSeriesDataItem dummy Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	add	
47	[BUG] [BUGGY] add(period, value, true); [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, double value) {  [BUGGY] add(period, value, true); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value [VARIABLES] boolean double value Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	
48	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, double value) {  [BUGGY] [BUGGY] add(period, value, true); } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value [VARIABLES] boolean double value Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	add	
49	[BUG] [BUGGY] } [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, double value) {  add(period, value, true); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value [VARIABLES] boolean double value Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	
50	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, double value) {  add(period, value, true); [BUGGY] [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value [VARIABLES] boolean double value Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	add	
