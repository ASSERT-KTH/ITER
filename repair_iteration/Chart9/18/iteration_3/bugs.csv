bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timePeriodClass);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timePeriodClass);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Thread.currentThread().setContextClassLoader(this,  timePeriodClass);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if  (start  <  =  end.length)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if  (start  <  =  end.length)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if  (start  <  =  end.length)  {	  if    (end    <    =    start.length)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  if  (end  <  =  end.length)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if  (end  <  =  end.length)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if  (end  <  =  end.length)  {	  if    (end    <    =    start.length)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  if  (start  <  =  end. ")  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if  (start  <  =  end. ")  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if  (start  <  =  end. ")  {	  if    (end    <    =    end.       ")    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  if  (end  <  =  start. ")  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if  (end  <  =  start. ")  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if  (end  <  =  start. ")  {	  if    (end    <    =    end.       ")    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  if  (start  <  =  end.   ");  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if  (start  <  =  end.   ");  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if  (start  <  =  end.   ");	  if    (end    <    =    end.       ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  if  (end  <  =  0.   ");  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if  (end  <  =  0.   ");  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if  (end  <  =  0.   ");	  if    (end    <    =    end.       ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  if  (start  <  =  end.)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if  (start  <  =  end.)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if  (start  <  =  end.)  {	  if    (start    <    =    end)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  Integer  start  =  getItemCount(start  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Integer  start  =  getItemCount(start  +  1);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Integer  start  =  getItemCount(start  +  1);	  Integer    start    =    getItemCount(start);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  Integer  start  =  getItemCount(start,  end);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Integer  start  =  getItemCount(start,  end);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Integer  start  =  getItemCount(start,  end);	  Integer    start    =    getItemCount(start);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  Iterator  <  TimeSeries>  it  =  this.data.values().iterator();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Iterator  <  TimeSeries>  it  =  this.data.values().iterator();  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Iterator  <  TimeSeries>  it  =  this.data.values().iterator();	  Iterator    <    TimeSeries>    it    =    this.data.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  Integer  start  =  getItemCount()  -  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Integer  start  =  getItemCount()  -  1;  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Integer  start  =  getItemCount()  -  1;	  Integer    start    =    getItemCount();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Integer  start  =  getItemCount()  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Integer  start  =  getItemCount()  +  1;  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Integer  start  =  getItemCount()  +  1;	  Integer    start    =    getItemCount();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  Integer  start  =  getItemCount(start  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Integer  start  =  getItemCount(start  -  1);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Integer  start  =  getItemCount(start  -  1);	  Integer    start    =    getItemCount(start);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  int  start  =  this.data.get(start  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  int  start  =  this.data.get(start  -  1);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	int  start  =  this.data.get(start  -  1);	  int    end    =    this.data.get(start    -    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  int  end  =  getItemCount(start  /  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  int  end  =  getItemCount(start  /  1);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	int  end  =  getItemCount(start  /  1);	  int    end    =    getItemCount(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  int  end  =  getItemCount(end  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  int  end  =  getItemCount(end  -  1);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	int  end  =  getItemCount(end  -  1);	  int    end    =    getItemCount(start    -    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	Thread.currentThread().intermediateThread().setContextClassLoader(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  if(end  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  if(end  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if(end  <  =  0)  {	  if    (end    <    =    end.       ")    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
