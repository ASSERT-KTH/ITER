bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TimeSeries  start  =  getSeries(start,  end  +  1);  [CE]  package  org.jfree.data.event  does  not  exist  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =  getSeries(start,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =  getSeries(start,  end  +  1);	  TimeSeries    start    =    getSeries(start    +    1);    	non-compiled	[CE]  package  org.jfree.data.event  does  not  exist	11	None	replace
2	[BUG]  [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(end  -  1);  [CE]  package  org.jfree.data.event  does  not  exist  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =(TimeSeries)this.data.get(end  -  1);	  TimeSeries    start    =(TimeSeries)this.data.get(start    -    1);    	non-compiled	[CE]  package  org.jfree.data.event  does  not  exist	12	None	replace
3	[BUG]  [BUGGY]  aughtInvalidRequires( "Requires  start  <  >  end.n ");  [CE]  package  org.jfree.data.event  does  not  exist  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  aughtInvalidRequires( "Requires  start  <  >  end.n ");  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	aughtInvalidRequires( "Requires  start  <  >  end.n ");	  aughtInvalidRequires(   "Requires    start    <    >    end.   ");    	non-compiled	[CE]  package  org.jfree.data.event  does  not  exist	14	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requires  start  <  0. ");  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requires  start  <  0. ");  [BUGGY]      }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Throwables.throw  new  IllegalArgumentException( "Requires  start  <  0. ");	  throw    new    IllegalArgumentException(   "Requires    start    <    0.       ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requires  start  <  0.5 ");  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requires  start  <  0.5 ");  [BUGGY]      }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Throwables.throw  new  IllegalArgumentException( "Requires  start  <  0.5 ");	  throw    new    IllegalArgumentException(   "Requires    start    <    0.       ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requires  start  <  =  end.   ");  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requires  start  <  =  end.   ");  [BUGGY]      }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Throwables.throw  new  IllegalArgumentException( "Requires  start  <  =  end.   ");	  Throwables.throw    new    IllegalArgumentException(   "Requires    start    <    =    start.       ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  throw  new  SeriesException( "Requires  start  <  =  start.   ");  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  throw  new  SeriesException( "Requires  start  <  =  start.   ");  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw  new  SeriesException( "Requires  start  <  =  start.   ");	  throw    new    SeriesException(   "Requires    start    <    =    end.       ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  TimeSeries  start  =  getSeries(start,  end  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =  getSeries(start,  end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =  getSeries(start,  end  -  1);	  TimeSeries    start    =    getSeries(start,    end);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  start);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().setContextClassLoader(this,  start);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  if(start  <  =  end)  {  aughtException( "Requires  start  <  =  end.   ");  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  if(start  <  =  end)  {  aughtException( "Requires  start  <  =  end.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	if(start  <  =  end)  {  aughtException( "Requires  start  <  =  end.   ");  }	  aughtException(   "Requires    start    <    =    end.       ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  if(start  <  =  end)  {  throw  new  IllegalArgumentException( "Requires  start  >  end.   ");  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  if(start  <  =  end)  {  throw  new  IllegalArgumentException( "Requires  start  >  end.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	if(start  <  =  end)  {  throw  new  IllegalArgumentException( "Requires  start  >  end.   ");  }	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getPeriodClass(),  end);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getPeriodClass(),  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().setContextClassLoader(getPeriodClass(),  end);	  Thread.currentThread().setContextClassLoader(getPeriodClass());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getPeriodClass(),  start);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getPeriodClass(),  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().setContextClassLoader(getPeriodClass(),  start);	  Thread.currentThread().setContextClassLoader(getPeriodClass());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(0);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =(TimeSeries)this.data.get(0);	  TimeSeries    start    =(TimeSeries)this.data.get(end);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  aughtInvalidRequires( "Requires  start  <  =  start.   ");  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  aughtInvalidRequires( "Requires  start  <  =  start.   ");  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	aughtInvalidRequires( "Requires  start  <  =  start.   ");	  aughtInvalidRequires(   "Requires    start    <    =    end.   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  TimeSeries  clone  =(TimeSeries)this.data.get(start);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  clone  =(TimeSeries)this.data.get(start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  clone  =(TimeSeries)this.data.get(start);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  TimeSeries  clone  =(TimeSeries)super.clone();  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  clone  =(TimeSeries)super.clone();  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  clone  =(TimeSeries)super.clone();	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  if(start  >  end)  {  aughtException( "Requires  start  <  =  end.   ");  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  if(start  >  end)  {  aughtException( "Requires  start  <  =  end.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	if(start  >  end)  {  aughtException( "Requires  start  <  =  end.   ");  }	  aughtException(   "Requires    start    <    =    end.       ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  if(start  <  =  end)  {  aughtInvalidRequires( "Requires  start  <  =  end.   ");  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  if(start  <  =  end)  {  aughtInvalidRequires( "Requires  start  <  =  end.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	if(start  <  =  end)  {  aughtInvalidRequires( "Requires  start  <  =  end.   ");  }	  aughtInvalidRequires(   "Requires    start    <    =    end.   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  SeriesException( "Requires  start  <  =  start. "));  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().setContext(new  SeriesException( "Requires  start  <  =  start. "));  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().setContext(new  SeriesException( "Requires  start  <  =  start. "));	  Thread.currentThread().setContext(new    SeriesException(   "Requires    start    <    =    end.   "));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  TimeSeries  start  =  getSeries(start  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =  getSeries(start  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =  getSeries(start  -  1);	  TimeSeries    start    =    getSeries(start    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  TimeSeries  start  =(start  <  getSeriesCount())?  getSeries(start):  getSeries(end);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =(start  <  getSeriesCount())?  getSeries(start):  getSeries(end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =(start  <  getSeriesCount())?  getSeries(start):  getSeries(end);	  TimeSeries    start    =    getSeries(end);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <  0.0 ");  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <  0.0 ");  [BUGGY]      }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw  new  IllegalArgumentException( "Requires  start  <  0.0 ");	  throw    new    IllegalArgumentException(   "Requires    start    <    0.       ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  Throwables.throw  new  SeriesException( "Requires  start  <  =  end.   ");  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Throwables.throw  new  SeriesException( "Requires  start  <  =  end.   ");  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Throwables.throw  new  SeriesException( "Requires  start  <  =  end.   ");	  throw    new    SeriesException(   "Requires    start    <    =    end.       ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
26	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.data.getPeriodClass());  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this.data.getPeriodClass());  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().setContextClassLoader(this.data.getPeriodClass());	  Thread.currentThread().setContextClassLoader(getPeriodClass());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  Thread.currentThread().interrupt(start);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().interrupt(start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().interrupt(start);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  long  end  =  getPeriodClass().getIndexedField(this,  start);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  long  end  =  getPeriodClass().getIndexedField(this,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	long  end  =  getPeriodClass().getIndexedField(this,  start);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  long  end  =  getPeriodClass().getIndexedField(start);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  long  end  =  getPeriodClass().getIndexedField(start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	long  end  =  getPeriodClass().getIndexedField(start);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(end  -  start);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(end  -  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =(TimeSeries)this.data.get(end  -  start);	  TimeSeries    start    =(TimeSeries)this.data.get(end);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	Thread.currentThread().intermediateThread().setContextClassLoader(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  TimeSeries  start  =  getSeries(start  /  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =  getSeries(start  /  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =  getSeries(start  /  1);	  TimeSeries    start    =    getSeries(start    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  TimeSeries  start  =  createCopy(start);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  TimeSeries  start  =  createCopy(start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	TimeSeries  start  =  createCopy(start);	  TimeSeries    start    =    getSeries(end);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  long  end  =  getPeriodClass().getIndexedField(this,  start  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {      [BUGGY]  long  end  =  getPeriodClass().getIndexedField(this,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	long  end  =  getPeriodClass().getIndexedField(this,  start  +  1);	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
