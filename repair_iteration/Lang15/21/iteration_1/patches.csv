bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
2	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
3	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  types.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
4	[BUG]  [BUGGY]  Class  <?>  bound  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Class  <?>  bound  =  type.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  type.getRawClass();	      Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
5	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  toComponentType.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  toComponentType.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGenericArrayType,  toComponentType.getRawClass();	      Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	16	None	replace
6	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  type.getRawClass();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  type.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGenericArrayType,  type.getRawClass();	      Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	16	None	replace
7	[BUG]  [BUGGY]  Type  bound  =  cls.getboundType();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  cls.getboundType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls.getboundType();	      Type    bound    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
8	[BUG]  [BUGGY]  Type  bound  =  type.getboundType();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  type.getboundType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  type.getboundType();	      Type    bound    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
9	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getboundType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getboundType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getboundType();	      Type    bound    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
10	[BUG]  [BUGGY]  Type  bound  toComponentType  =  cls.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  toComponentType  =  cls.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  toComponentType  =  cls.getRawClass();	      Type    bound    toComponentType    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	2	None	replace
11	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getRawClass();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  cls.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getRawClass();	      Type    bound    toComponentType    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
12	[BUG]  [BUGGY]  Type  bound  toComponentType  =  type.getRawClass();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  toComponentType  =  type.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  toComponentType  =  type.getRawClass();	      Type    bound    toComponentType    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	2	None	replace
13	[BUG]  [BUGGY]  Type  bound  =  cls.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  cls.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls.getRawClass();	      Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
14	[BUG]  [BUGGY]  Type  bound  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  type.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  type.getRawClass();	      Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
15	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getRawClass();	      Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
16	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
17	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
18	[BUG]  [BUGGY]  return  cls.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
19	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType();	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
20	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  type.getGenericComponentType();	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
21	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  cls);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  cls);  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  cls);	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	13	None	replace
22	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
23	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
24	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
25	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class  <?>  bound  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
26	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
27	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	21	None	replace
28	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	21	2	replace
30	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	21	2	replace
31	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGeneric();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
32	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  type.getGeneric();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
33	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
34	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
35	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
36	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
37	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericConstructor();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
38	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
39	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  types.getGenericConstructor();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  types.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
40	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  not  a  statement	8	None	add
41	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class  <?>  cls  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	add
42	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	add
43	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type  bound  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
44	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class  <?>  cls  =  toGenericArrayType.getClass();	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	add
45	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Constructor  <?>  bound  =  toGenericArrayType.getRawClass();	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
47	[BUG]  [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
48	[BUG]  [BUGGY]  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
52	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
53	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
54	[BUG]  [BUGGY]  Type  bound  =  cls.getBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  cls.getBounds();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls.getBounds();	      Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
55	[BUG]  [BUGGY]  Type  bound  =  type.getBounds();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  type.getBounds();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  type.getBounds();	      Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
56	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getBounds();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getBounds();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getBounds();	      Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	18	None	replace
57	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
58	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
59	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(1);  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(1);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
60	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
61	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	10	2	add
63	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	10	2	add
64	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  If(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  If(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    If(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	non-compiled	[CE]  ';'  expected	10	None	add
65	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
66	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  types);  }  [CE]  cannot  find  symbol  types  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  types);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  types);  }	  	non-compiled	[CE]  cannot  find  symbol  types	10	None	add
67	[BUG]  [BUGGY]  return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
68	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getRawClass();	      Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
69	[BUG]  [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
71	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
72	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	add
73	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
74	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
75	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(cls))  {  return  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(cls))  {  return  true;  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  toGenericArrayType.equals(cls))  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
76	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	add
77	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	add
78	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	add
79	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
80	[BUG]  [BUGGY]  Class  <?>  bound  =  this.toGenericArrayType.getRawClass();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Class  <?>  bound  =  this.toGenericArrayType.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  this.toGenericArrayType.getRawClass();	      Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	16	None	replace
81	[BUG]  [BUGGY]  Class  <?>  bound  =  fromGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  fromGenericArrayType  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Class  <?>  bound  =  fromGenericArrayType.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  fromGenericArrayType.getRawClass();	      Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  fromGenericArrayType	16	None	replace
82	[BUG]  [BUGGY]  Type  bound  =  fromGenericArrayType.getboundType();  [CE]  cannot  find  symbol  fromGenericArrayType  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  fromGenericArrayType.getboundType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  fromGenericArrayType.getboundType();	      Type    bound    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  cannot  find  symbol  fromGenericArrayType	19	None	replace
83	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
84	[BUG]  [BUGGY]  if(cls!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  if(cls!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  ')'  expected	11	None	replace
87	[BUG]  [BUGGY]  Type  toComponentType  =  types.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  types.getGenericComponentType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  types.getGenericComponentType();	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
88	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
89	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
90	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
91	[BUG]  [BUGGY]  if(cls!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
92	[BUG]  [BUGGY]  Class  <?>  bound  =  cls.getRawClass();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Class  <?>  bound  =  cls.getRawClass();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  cls.getRawClass();	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
93	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
94	[BUG]  [BUGGY]  Type  bound  =  this.toGenericArrayType.getBounds();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  this.toGenericArrayType.getBounds();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  this.toGenericArrayType.getBounds();	      Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	18	None	replace
95	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  Type  bound  =  toGenericArrayType,  cls.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  toGenericArrayType,  cls.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toGenericArrayType,  cls.getRawClass();	      Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	17	None	replace
97	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  cls.getRawClass();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  cls.getRawClass();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGenericArrayType,  cls.getRawClass();	      Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	16	None	replace
98	[BUG]  [BUGGY]  return  cls.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
99	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class  <?>  bound  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
100	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  not  a  statement	8	None	add
101	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type  bound  =  toGenericArrayType.getBounds();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
102	[BUG]  [BUGGY]  Type  bound  =  this.toGenericArrayType.getboundType();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  bound  =  this.toGenericArrayType.getboundType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  this.toGenericArrayType.getboundType();	      Type    bound    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	19	None	replace
103	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
104	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
105	[BUG]  [BUGGY]  return  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	21	2	replace
107	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	21	2	replace
108	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
109	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssigned(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssigned(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssigned(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
110	[BUG]  [BUGGY]  Type  toComponentType  =(toGenericArrayType  ==  null)?  cls.getGenericComponentType()  :  type;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toComponentType  =(toGenericArrayType  ==  null)?  cls.getGenericComponentType()  :  type;  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =(toGenericArrayType  ==  null)?  cls.getGenericComponentType()  :  type;	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
111	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;      [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType();  [BUGGY]    return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericArrayType();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
