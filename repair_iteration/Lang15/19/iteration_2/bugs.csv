bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
2	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
3	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
4	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
6	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
8	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
9	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isArray())  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isArray())  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isArray())  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
10	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type.isArray())  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type.isArray())  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  type.isArray())  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
11	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(toComponentType))  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(toComponentType))  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(toComponentType))  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
13	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
15	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
17	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
18	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  toComponentType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Class  <?>  toComponentType  =  toComponentType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  toComponentType  =  toComponentType.getGenericComponentType();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  types.getGenericComponentType();	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  type.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericParameterType();	      Type    toComponentType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericParameterType();	      Type    toComponentType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  cls.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  cls.getGenericParameterType();	      Type    toComponentType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericComponentType();	      Type    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentType();	      Type    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  cls.getGenericComponentType();	      Type    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  Type  toComponentType  =  types.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  types.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  types.getGenericComponentType();	      Type    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericContainerType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  type.getGenericContainerType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericContainerType();	      Type    toComponentType    =    toComponentType.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericContainerType();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericContainerType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericContainerType();	      Type    toComponentType    =    toComponentType.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericContainerType();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  cls.getGenericContainerType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  cls.getGenericContainerType();	      Type    toComponentType    =    toComponentType.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  Type  toComponentType  =  types.getGenericContainerType();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  types.getGenericContainerType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  types.getGenericContainerType();	      Type    toComponentType    =    toComponentType.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
35	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	6	2	replace
37	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	6	2	replace
38	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterTypes();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getGenericParameterTypes();	      Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
39	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterTypes();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericParameterTypes();	      Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
40	[BUG]  [BUGGY]  Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type);  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type);	      Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
41	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType();	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  types.getGenericParameterType();	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
44	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType();	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  type.getGenericParameterType(0);  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericParameterType(0);	      Type    toComponentType    =    toComponentType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  type.getGenericParameterType(1);  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericParameterType(1);	      Type    toComponentType    =    toComponentType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
47	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getRawClass();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toComponentType.getRawClass();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getRawClass();	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
48	[BUG]  [BUGGY]  Type  bound  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  bound  =  type.getRawClass();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  type.getRawClass();	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
49	[BUG]  [BUGGY]  Type  toComponentType  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  type.getRawClass();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getRawClass();	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
50	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getBounds();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toComponentType.getBounds();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getBounds();	      Type    bound    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  Type  bound  =  type.getBounds();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  bound  =  type.getBounds();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  type.getBounds();	      Type    bound    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  Type  bounds  =  toComponentType.getBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  bounds  =  toComponentType.getBounds();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bounds  =  toComponentType.getBounds();	      Type    bound    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
53	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
54	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>)    {    If(toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
55	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
56	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(0);	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
57	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(1);  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(1);	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  type.getGenericConstructor();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericConstructor();	      Type    toComponentType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
60	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericConstructor();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericConstructor();	      Type    toComponentType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
61	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  cls.getGenericConstructor();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  cls.getGenericConstructor();	      Type    toComponentType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  Type  toComponentType  =  types.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  types.getGenericConstructor();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  types.getGenericConstructor();	      Type    toComponentType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  typeVarAssigns.contains(toComponentType))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  typeVarAssigns.contains(toComponentType))  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  typeVarAssigns.contains(toComponentType))  {	  if(toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
64	[BUG]  [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericConstructor();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  typeVarAssigns.getGenericConstructor();	      Type    toComponentType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
65	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericConstructor();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericConstructor();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  typeVarAssigns.getGenericParameterType();	      Type    toComponentType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  typeVarAssigns.getGenericComponentType();	      Type    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
68	[BUG]  [BUGGY]  Type  bound  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  bound  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
69	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();	      Type    toGenericArrayType    =    toComponentType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes();	      Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericContainerType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  toComponentType  =  typeVarAssigns.getGenericContainerType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  typeVarAssigns.getGenericContainerType();	      Type    toComponentType    =    toComponentType.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  Type  bound  =  toComponentType!=  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  bound  =  toComponentType!=  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType!=  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;	      Type    bound    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	6	2	replace
74	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	6	2	replace
75	[BUG]  [BUGGY]  Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(toComponentType);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(toComponentType);  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(toComponentType);	      Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
76	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>)  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>)    {    if(ToComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
77	[BUG]  [BUGGY]  Type  bound  =  toComponentType,  type.getBounds();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Type  bound  =  toComponentType,  type.getBounds();  [BUGGY]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType,  type.getBounds();	      Type    bound    =    toComponentType.getBounds();    	non-compiled	[CE]  ';'  expected	18	None	replace
78	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getParameterTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getParameterTypes();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getParameterTypes();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getVarAssigns();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getVarAssigns();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getVarAssigns();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();    [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type))  {  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type))  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
