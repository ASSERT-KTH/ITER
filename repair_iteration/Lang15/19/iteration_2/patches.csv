bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	35	None	replace
2	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	35	None	replace
3	[BUG]  [BUGGY]  If(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  If(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	If(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
4	[BUG]  [BUGGY]  If(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  If(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	If(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
5	[BUG]  [BUGGY]  Type  bound  =  toComponentType  ==  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType  ==  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType  ==  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;	  Type    bound    =    toComponentType!=    null?    toComponentType.getBounds()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
6	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType!=  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType!=  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType!=  null?  toComponentType.getBounds()  :  Collections.EMPTY_LIST;	  Type    bound    =    toComponentType!=    null?    toComponentType.getBounds()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
7	[BUG]  [BUGGY]  Type  bound  =  toComponentType!=  null?  type.getBounds()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType!=  null?  type.getBounds()  :  Collections.EMPTY_LIST;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType!=  null?  type.getBounds()  :  Collections.EMPTY_LIST;	  Type    bound    =    toComponentType!=    null?    toComponentType.getBounds()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
8	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type))  {	  if(toComponentType    instanceof    Class    <?>    &&    toComponentType.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
9	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isInterface())  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isInterface())  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isInterface())  {	  if(toComponentType    instanceof    Class    <?>    &&    toComponentType.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
10	[BUG]  [BUGGY]  Type  toComponentType  =  type.getBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  type.getBounds();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getBounds();	  Type    toComponentType    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
11	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getBounds();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getBounds();	  Type    toComponentType    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
12	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  types.getGenericParameterType(0);	  Type    toGenericArrayType    =    types.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
13	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  type);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  type);	  Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	27	None	replace
14	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterTypes(toComponentType);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterTypes(toComponentType);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getGenericParameterTypes(toComponentType);	  Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes(toComponentType);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
15	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterTypes(type);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterTypes(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getGenericParameterTypes(type);	  Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes(toComponentType);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
16	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
17	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    If(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
18	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  >=?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
19	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
20	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
21	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
22	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
23	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  type.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  toComponentType  =  type.getGenericComponentType();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  toComponentType  =  type.getGenericComponentType();	  Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterType(1);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getGenericParameterType(1);	  Type    toComponentType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
25	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericParameterType(0);	  Type    toComponentType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
26	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType(1);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericParameterType(1);	  Type    toComponentType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
27	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>)    {    If(toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
28	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);	  Type    toGenericArrayType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
29	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
30	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
31	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  type.getGenericConstructor();	  Type    toGenericArrayType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
32	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();	  Type    toGenericArrayType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
33	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
34	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    If(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
35	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
36	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
37	[BUG]  [BUGGY]  If(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  If(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	If(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
38	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
39	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();	  Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	37	2	replace
41	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	37	2	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	37	2	replace
43	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	37	2	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	37	2	replace
45	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	37	2	replace
46	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
47	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
48	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(ToComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
49	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
50	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getGenericParameterTypes();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getGenericParameterTypes();	  Class    <?>    typeVarAssigns    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
51	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getParameterTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getParameterTypes();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getParameterTypes();	  Class    <?>    typeVarAssigns    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
52	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getRawParameterTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getRawParameterTypes();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getRawParameterTypes();	  Class    <?>    typeVarAssigns    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
53	[BUG]  [BUGGY]  Type  toComponentType  =  types!=  null?  types.getGenericComponentType()  :  type;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  types!=  null?  types.getGenericComponentType()  :  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  types!=  null?  types.getGenericComponentType()  :  type;	  Type    toComponentType    =    types.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
54	[BUG]  [BUGGY]  Type[]  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type[]  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type[]  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();	  Type[]    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
55	[BUG]  [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type);	  Type[]    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
56	[BUG]  [BUGGY]  Type[]  toComponentTypeVarAssigns  =  toComponentType.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type[]  toComponentTypeVarAssigns  =  toComponentType.getGenericParameterTypes();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type[]  toComponentTypeVarAssigns  =  toComponentType.getGenericParameterTypes();	  Type[]    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
57	[BUG]  [BUGGY]  Type  bound  =  toComponentType,  typeVarAssigns.getBounds();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType,  typeVarAssigns.getBounds();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType,  typeVarAssigns.getBounds();	  Type    bound    =    toComponentType,    type.getBounds();    	non-compiled	[CE]  ';'  expected	77	None	replace
58	[BUG]  [BUGGY]  Type  bound  =  toComponentType,  type.getVarAssigns();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType,  type.getVarAssigns();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType,  type.getVarAssigns();	  Type    bound    =    toComponentType,    type.getBounds();    	non-compiled	[CE]  ';'  expected	77	None	replace
59	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericParameterTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  type.getGenericParameterTypes();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericParameterTypes();	  Type    toComponentType    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
60	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterType(type);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterType(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getGenericParameterType(type);	  Type    toComponentType    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
61	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getGenericVarAssigns();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getGenericVarAssigns();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getGenericVarAssigns();	  Class    <?>    typeVarAssigns    =    toComponentType.getVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
62	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getVarAssigns(type);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getVarAssigns(type);  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getVarAssigns(type);	  Class    <?>    typeVarAssigns    =    toComponentType.getVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
63	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getVarAssigns();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getVarAssigns();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getVarAssigns();	  Class    <?>    typeVarAssigns    =    toComponentType.getVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
64	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType(1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  type.getGenericComponentType(1);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  type.getGenericComponentType(1);	  Type    toComponentType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
65	[BUG]  [BUGGY]  Type  bound  =  toComponentType  ==  null?  toComponentType.getRawClass()  :  type;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType  ==  null?  toComponentType.getRawClass()  :  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType  ==  null?  toComponentType.getRawClass()  :  type;	  Type    bound    =    toComponentType!=    null?    toComponentType.getRawClass()    :    type;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
66	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;	  Type    bound    =    toComponentType!=    null?    toComponentType.getRawClass()    :    type;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
67	[BUG]  [BUGGY]  Type  bound  =  toComponentType!=  null?  type.getRawClass()  :  toComponentType;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType!=  null?  type.getRawClass()  :  toComponentType;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType!=  null?  type.getRawClass()  :  toComponentType;	  Type    bound    =    toComponentType!=    null?    toComponentType.getRawClass()    :    type;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
68	[BUG]  [BUGGY]  Type  bound  =  toGenericArrayType.getRawClass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toGenericArrayType.getRawClass();	  Type    bound    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
69	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.contains(typeVarAssigns))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType.contains(typeVarAssigns))  {	  if(toComponentType    instanceof    Class    <?>    &&    typeVarAssigns.contains(toComponentType))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
70	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.contains(typeVarAssigns))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  toComponentType.contains(typeVarAssigns))  {	  if(toComponentType    instanceof    Class    <?>    &&    typeVarAssigns.contains(toComponentType))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
71	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isArray()  &&  typeVarAssigns.contains(toComponentType))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isArray()  &&  typeVarAssigns.contains(toComponentType))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isArray()  &&  typeVarAssigns.contains(toComponentType))  {	  if(toComponentType    instanceof    Class    <?>    &&    typeVarAssigns.contains(toComponentType))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
72	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType(type);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericParameterType(type);	  Type    toComponentType    =    toGenericArrayType.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
73	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getRawClass();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getRawClass();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getRawClass();	  Type    toComponentType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
75	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
77	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
78	[BUG]  [BUGGY]  Type  bound  =  toGenericArrayType.getBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toGenericArrayType.getBounds();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toGenericArrayType.getBounds();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
79	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType(0);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
80	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
81	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
82	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(1);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericParameterType(1);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
83	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
84	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
85	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  If(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    If(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
86	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
87	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type.isAssignableFrom(toComponentType))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type.isAssignableFrom(toComponentType))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  type.isAssignableFrom(toComponentType))  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isAssignableFrom(toComponentType))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
88	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentTypes();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentTypes();	  Type    toComponentType    =    toGenericArrayType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
89	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type.isAssignableFrom(type))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  type.isAssignableFrom(type))  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
90	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
91	[BUG]  [BUGGY]  Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type,  toComponentType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type,  toComponentType);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  typeVarAssigns  =  toComponentType.getGenericParameterTypes(type,  toComponentType);	  Type    typeVarAssigns    =    toComponentType.getGenericParameterTypes(type);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
92	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  >=?>  &&  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
93	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentType(type);	  Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
94	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Type  <?>)  {  [CE]  type  Type  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Type  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Type  <?>)  {	  if(toComponentType    instanceof    Class    <?>)    {    if(toComponentType    instanceof    Class    >=?>)    {    	non-compiled	[CE]  type  Type  does  not  take  parameters	55	None	replace
95	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  typeVarAssigns.isArray())  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  typeVarAssigns.isArray())  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  typeVarAssigns.isArray())  {	  if(toComponentType    instanceof    Class    <?>    &&    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
96	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGeneric();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getGeneric();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getGeneric();	  Type    toComponentType    =    toComponentType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
97	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(2);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(2);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
98	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	15	2	replace
100	[BUG]  [BUGGY]  if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	15	2	replace
101	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericAssigns.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericAssigns.getGenericConstructor();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericAssigns.getGenericConstructor();	  Type    toComponentType    =    typeVarAssigns.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
102	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterType(2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getGenericParameterType(2);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getGenericParameterType(2);	  Type    toComponentType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
103	[BUG]  [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterArrayTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterArrayTypes();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type[]  typeVarAssigns  =  toComponentType.getGenericParameterArrayTypes();	  Type[]    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType!=  null)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType!=  null)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	3	2	replace
105	[BUG]  [BUGGY]  if(toComponentType!=  null)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType!=  null)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType!=  null)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	3	2	replace
106	[BUG]  [BUGGY]  if(toComponentType!=  null)  {  If(toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType!=  null)  {  If(toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType!=  null)  {  If(toComponentType  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>)    {    If(toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
107	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toAssigns.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toAssigns.getGenericParameterType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toAssigns.getGenericParameterType();	  Type    toGenericArrayType    =    typeVarAssigns.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
108	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type);  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type);	  Type    toGenericArrayType    =    toComponentType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
109	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	35	None	replace
110	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericAssigns.getGenericContainerType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericAssigns.getGenericContainerType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericAssigns.getGenericContainerType();	  Type    toComponentType    =    typeVarAssigns.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
111	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getGenericArrayType(type.getGenericComponentType());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  getGenericArrayType(type.getGenericComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  getGenericArrayType(type.getGenericComponentType());	  Type    toGenericArrayType    =    type.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
112	[BUG]  [BUGGY]  Type  toComponentType  =  getGenericComponentType(type);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  getGenericComponentType(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  getGenericComponentType(type);	  Type    toComponentType    =    type.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
113	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(2);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericParameterType(2);	  Type    toGenericArrayType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
114	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  >=?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
115	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toGenericArrayType.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toGenericArrayType.contains(typeVarAssigns))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toGenericArrayType.contains(typeVarAssigns))  {	  if(toComponentType    instanceof    Class    <?>    &&    typeVarAssigns.contains(toComponentType))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
116	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  toComponentType.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  toComponentType  =  toComponentType.getGenericParameterType(0);  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  toComponentType  =  toComponentType.getGenericParameterType(0);	  Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
117	[BUG]  [BUGGY]  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	If(type  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
118	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  &&  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(toComponentType  instanceof  Class  >=?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    if(toComponentType  instanceof  Class  >=?>  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
119	[BUG]  [BUGGY]  Type  bound  =  fromComponentType.getRawClass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  fromComponentType.getRawClass();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  fromComponentType.getRawClass();	  Type    bound    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
120	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericAssigns.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericAssigns.getGenericComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericAssigns.getGenericComponentType();	  Type    toComponentType    =    typeVarAssigns.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
121	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getGenericAssigns();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getGenericAssigns();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getGenericAssigns();	  Class    <?>    typeVarAssigns    =    toComponentType.getVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
122	[BUG]  [BUGGY]  Type  bound  =  toComponentType,  type.getBounds()  -  1;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType,  type.getBounds()  -  1;  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType,  type.getBounds()  -  1;	  Type    bound    =    toComponentType,    type.getBounds();    	non-compiled	[CE]  ';'  expected	77	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	13	2	replace
124	[BUG]  [BUGGY]  if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType!=  null  &&  toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	13	2	replace
125	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type)||  toComponentType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type)||  toComponentType.isAssignableFrom(type))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(type)||  toComponentType.isAssignableFrom(type))  {	  if(type    instanceof    Class    <?>    &&    toComponentType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
126	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericReferenceType.getGenericContainerType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericReferenceType.getGenericContainerType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericReferenceType.getGenericContainerType();	  Type    toComponentType    =    type.getGenericContainerType();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
127	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    if(ToComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
128	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toComponentType);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toComponentType);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toComponentType);	  Type    toGenericArrayType    =    typeVarAssigns.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
129	[BUG]  [BUGGY]  Type  toComponentType  =  fromComponentType.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  fromComponentType.getGenericConstructor();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  fromComponentType.getGenericConstructor();	  Type    toComponentType    =    type.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
130	[BUG]  [BUGGY]  Type  bound  =  toComponentType,  toComponentType.getBounds();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bound  =  toComponentType,  toComponentType.getBounds();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bound  =  toComponentType,  toComponentType.getBounds();	  Type    bound    =    toComponentType,    type.getBounds();    	non-compiled	[CE]  ';'  expected	77	None	replace
131	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericParameterType.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericParameterType.getGenericParameterType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericParameterType.getGenericParameterType();	  Type    toComponentType    =    type.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
132	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getConstructor();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toComponentType.getConstructor();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toComponentType.getConstructor();	  Type    toComponentType    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
133	[BUG]  [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes(toComponentType);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes(toComponentType);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type[]  typeVarAssigns  =  toComponentType.getGenericParameterTypes(toComponentType);	  Type[]    typeVarAssigns    =    toComponentType.getGenericParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
134	[BUG]  [BUGGY]  Type  toComponentType  =  fromComponentType.getRawClass();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  fromComponentType.getRawClass();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  fromComponentType.getRawClass();	  Type    toComponentType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
135	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentType(0);	  Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
136	[BUG]  [BUGGY]  If(toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  If(toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	If(toComponentType  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>)    {    If(toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
137	[BUG]  [BUGGY]  If(type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  If(type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	If(type  instanceof  Class  <?>)  {	  if(toComponentType    instanceof    Class    <?>)    {    If(toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
138	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>)    {    if(ToComponentType  instanceof  Class  <?>  &&  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
139	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  type  =  toComponentType.getGenericComponentType();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  type  =  toComponentType.getGenericComponentType();	  Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType!=  null  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	add	if(type  instanceof  Class  <?>  &&  toComponentType!=  null  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
141	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType!=  null  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(type  instanceof  Class  <?>  &&  toComponentType!=  null  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(type  instanceof  Class  <?>  &&  toComponentType!=  null  ||  toComponentType  instanceof  Class  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toComponentType    instanceof    Class    <?>    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	17	2	replace
142	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getRawClass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Class  <?>  typeVarAssigns  =  toComponentType.getRawClass();  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Class  <?>  typeVarAssigns  =  toComponentType.getRawClass();	  Class    <?>    typeVarAssigns    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
143	[BUG]  [BUGGY]  Type  bounds  =  toComponentType.getLines();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bounds  =  toComponentType.getLines();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bounds  =  toComponentType.getLines();	  Type    bounds    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
144	[BUG]  [BUGGY]  Type  bounds  =  toComponentType.getConstructors();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  bounds  =  toComponentType.getConstructors();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  bounds  =  toComponentType.getConstructors();	  Type    bounds    =    toComponentType.getBounds();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
145	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericReferenceType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toComponentType  =  toGenericReferenceType.getGenericComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toComponentType  =  toGenericReferenceType.getGenericComponentType();	  Type    toComponentType    =    type.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
146	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(typeVarAssigns))  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType  instanceof  Class  <?>  &&  toComponentType.isAssignableFrom(typeVarAssigns))  {	  if(toComponentType    instanceof    Class    <?>    &&    typeVarAssigns.contains(toComponentType))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
147	[BUG]  [BUGGY]  Type  toGenericArrayType  =  fromComponentType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  Type  toGenericArrayType  =  fromComponentType.getGenericComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	Type  toGenericArrayType  =  fromComponentType.getGenericComponentType();	  Type    toGenericArrayType    =    type.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
148	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  false;  }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();      [BUGGY]  if(toComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  if(ToComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	279	279	2	replace	if(toComponentType    instanceof    Class    <?>    &&    type    instanceof    Class    <?>)    {    if(ToComponentType  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
