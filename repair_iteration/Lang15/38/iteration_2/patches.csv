bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  type[0]  =  toBound.getType();  [CE]  array  required,  but  Type  found  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  type[0]  =  toBound.getType();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	type[0]  =  toBound.getType();	  result[0]    =    toBound.getType();    	non-compiled	[CE]  array  required,  but  Type  found	25	None	replace
2	[BUG]  [BUGGY]  toBound  =  toBound.getType();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound  =  toBound.getType();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound  =  toBound.getType();	  result[0]    =    toBound.getType();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
3	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns)  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns)  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
4	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
6	[BUG]  [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
7	[BUG]  [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
8	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType  =  Constructor.createConstructor(toBound,  toWildcardType);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType  =  Constructor.createConstructor(toBound,  toWildcardType);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType  =  Constructor.createConstructor(toBound,  toWildcardType);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
11	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType  =  constructor(toBound,  toWildcardType);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType  =  constructor(toBound,  toWildcardType);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType  =  constructor(toBound,  toWildcardType);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
12	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType  =  constructor(toBound,  toWildcardType.getRawClass());  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType  =  constructor(toBound,  toWildcardType.getRawClass());  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType  =  constructor(toBound,  toWildcardType.getRawClass());	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
13	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType  =  Constructor.createConstructor(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType  =  Constructor.createConstructor(toBound,  toUpperBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType  =  Constructor.createConstructor(toBound,  toUpperBounds);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
14	[BUG]  [BUGGY]  Annotation  toWildcardType  =  toBound.getAnnotation();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Annotation  toWildcardType  =  toBound.getAnnotation();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Annotation  toWildcardType  =  toBound.getAnnotation();	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
15	[BUG]  [BUGGY]  Annotation  toWildcardType  =  toBound.getAnnotation(JacksonConstants.class);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Annotation  toWildcardType  =  toBound.getAnnotation(JacksonConstants.class);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Annotation  toWildcardType  =  toBound.getAnnotation(JacksonConstants.class);	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
16	[BUG]  [BUGGY]  parent  ==  null  &&  toBound.getParent()!=  null)  {  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&  toBound.getParent()!=  null)  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&  toBound.getParent()!=  null)  {	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	70	None	replace
17	[BUG]  [BUGGY]  Annotation  toWildcardType  =  toBound.getAnnotation(JacksonImpl.class);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Annotation  toWildcardType  =  toBound.getAnnotation(JacksonImpl.class);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Annotation  toWildcardType  =  toBound.getAnnotation(JacksonImpl.class);	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
18	[BUG]  [BUGGY]  ||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  return    true;    if(isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
19	[BUG]  [BUGGY]  ||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  return    true;    if(isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
20	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
21	[BUG]  [BUGGY]  handleMissingClass(toBound,  toLowerBounds,  type);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingClass(toBound,  toLowerBounds,  type);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingClass(toBound,  toLowerBounds,  type);	  aughtExceptionHandler.handleMissingClass(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
22	[BUG]  [BUGGY]  toBound.handleMissingClass(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound.handleMissingClass(type,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound.handleMissingClass(type,  toLowerBounds);	  aughtExceptionHandler.handleMissingClass(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
23	[BUG]  [BUGGY]  wildcardType.handleMissingClass(toBound,  type,  toLowerBounds);  [CE]  cannot  find  symbol  wildcardType  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleMissingClass(toBound,  type,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleMissingClass(toBound,  type,  toLowerBounds);	  aughtExceptionHandler.handleMissingClass(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	196	None	replace
24	[BUG]  [BUGGY]  handleMissingClass(toBound,  toWildcardType,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingClass(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingClass(toBound,  toWildcardType,  toLowerBounds);	  aughtExceptionHandler.handleMissingClass(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
25	[BUG]  [BUGGY]  tryOffsets(toBound,  toUpperBounds,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toUpperBounds,  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toUpperBounds,  toLowerBounds))  {  return  false;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
26	[BUG]  [BUGGY]  tryOffsets(toBound,  toWildcardType,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toWildcardType,  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toWildcardType,  toLowerBounds))  {  return  false;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
27	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toUpperBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toUpperBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  toUpperBounds))  {  return  false;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
28	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
29	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	76	None	add
30	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowestBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowestBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	76	None	add
31	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowestBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowestBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	76	None	add
32	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	76	None	add
33	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	160	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	160	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  type,  toWildcardType))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	160	None	replace
36	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
37	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
38	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nss)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nss)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	try  {  [Delete]  catch(NoSuchElementException  nss)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
39	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
40	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
41	[BUG]  [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.getClass()!=  typeVarAssigns.getClass())  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns)  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.getClass()!=  typeVarAssigns)  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  ||  toBound.getClass()  ==  typeVarAssigns.getClass())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.getClass()  ==  typeVarAssigns.getClass())  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.getClass()  ==  typeVarAssigns.getClass())  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAll())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAll())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAll())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
45	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
46	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type,  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type,  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignable(type,  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	138	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	138	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	138	None	replace
50	[BUG]  [BUGGY]  ||  toWildcardType!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType!=  null)  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType!=  null)  {	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
51	[BUG]  [BUGGY]  safeToWildcard(toBound,  toWildcardType))  {  return  false;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToWildcard(toBound,  toWildcardType))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToWildcard(toBound,  toWildcardType))  {  return  false;	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
52	[BUG]  [BUGGY]  safeToWildcard(toBound,  toWildcardType))  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToWildcard(toBound,  toWildcardType))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToWildcard(toBound,  toWildcardType))  {	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
53	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toWildcardType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toWildcardType);	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
54	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  parent    ==    null    ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	169	None	replace
55	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
56	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
57	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  	non-compiled	[CE]  ';'  expected	6	None	add
58	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
59	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  	non-compiled	[CE]  ';'  expected	6	None	add
60	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
61	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
62	[BUG]  [BUGGY]  ||!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
63	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getLowerBounds();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound,  toUpperBounds.getLowerBounds();	  Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  ';'  expected	128	None	replace
64	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getLowerBounds();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound,  toLowerBounds.getLowerBounds();	  Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  ';'  expected	128	None	replace
65	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();	  Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
66	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  ||    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
67	[BUG]  [BUGGY]  ||  toWildcardType.isSubtype(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isSubtype(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isSubtype(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  ||    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
68	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  ||    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
69	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toUpperBounds.getRangeBounds();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toUpperBounds.getRangeBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType,  toUpperBounds.getRangeBounds();	  Type[]    lowerBounds    =    toWildcardType,    toLowerBounds.getRangeBounds();    	non-compiled	[CE]  ';'  expected	102	None	replace
70	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getLeftBounds();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getLeftBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getLeftBounds();	  Type[]    lowerBounds    =    toWildcardType,    toLowerBounds.getRangeBounds();    	non-compiled	[CE]  ';'  expected	102	None	replace
71	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.toUpperBounds();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.toUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.toUpperBounds();	  Type[]    lowerBounds    =    toWildcardType,    toLowerBounds.getRangeBounds();    	non-compiled	[CE]  ';'  expected	102	None	replace
72	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  e)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  e)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	try  {  [Delete]  catch(NoSuchElementException  e)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound    ==    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
73	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  e)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  e)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	try  {  [Delete]  catch(NoSuchElementException  e)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound    ==    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
74	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	182	None	replace
75	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcard),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toWildcard  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcard),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcard),  type,  typeVarAssigns))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toWildcard	182	None	replace
76	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  substituteTypeVars),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  substituteTypeVars  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  substituteTypeVars),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  substituteTypeVars),  type,  typeVarAssigns))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  substituteTypeVars	182	None	replace
77	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	164	None	replace
78	[BUG]  [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
79	[BUG]  [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
80	[BUG]  [BUGGY]  handleMissingDependency(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingDependency(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingDependency(toBound,  toLowerBounds);	  aughtExceptionHandler.handleMissingDependency(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
81	[BUG]  [BUGGY]  toBound.handleMissingDependency(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound.handleMissingDependency(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound.handleMissingDependency(toBound,  toLowerBounds);	  aughtExceptionHandler.handleMissingDependency(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
82	[BUG]  [BUGGY]  wildcardType.handleMissingDependency(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  wildcardType  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleMissingDependency(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleMissingDependency(toBound,  toLowerBounds);	  aughtExceptionHandler.handleMissingDependency(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	200	None	replace
83	[BUG]  [BUGGY]  safeHandler.handleMissingDependency(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  safeHandler  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeHandler.handleMissingDependency(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeHandler.handleMissingDependency(toBound,  toLowerBounds);	  aughtExceptionHandler.handleMissingDependency(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  safeHandler	200	None	replace
84	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,<null>)  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,<null>)	152	None	replace
85	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
86	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
87	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
88	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
89	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
90	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	155	None	replace
91	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	155	None	replace
92	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  parent!=    null    ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
93	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  parent!=    null    ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
94	[BUG]  [BUGGY]  handleMissingException( " ");  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
95	[BUG]  [BUGGY]  wildcardType.handleMissingException( " ");  [CE]  cannot  find  symbol  wildcardType  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleMissingException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  wildcardType	197	None	replace
96	[BUG]  [BUGGY]  handleMissingException( " ",  toBound);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingException( " ",  toBound);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingException( " ",  toBound);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
97	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
98	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns)  {  return  true;  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns)  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns)  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
99	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType.substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType.substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType.substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	135	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	135	None	replace
102	[BUG]  [BUGGY]  Context.checkState(!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
103	[BUG]  [BUGGY]  Context.checkState(!isAssignable(toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
104	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  wildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(type,  wildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  wildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	150	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	150	None	replace
107	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  parent    ==    null    ||!isAssignable(parent,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
108	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	215	None	replace
109	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	215	None	replace
110	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	215	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	39	2	add
112	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	39	2	add
113	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	39	None	add
114	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substitute  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substitute  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substitute	  	non-compiled	[CE]  ')'  expected	39	None	add
115	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeV  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeV  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeV	  	non-compiled	[CE]  ')'  expected	39	None	add
116	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
117	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
118	[BUG]  [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	143	None	replace
119	[BUG]  [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	143	None	replace
120	[BUG]  [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	143	None	replace
121	[BUG]  [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	143	None	replace
122	[BUG]  [BUGGY]  Type[]  toWildcardTypes  =  toWildcardType.getRangeBounds();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  toWildcardTypes  =  toWildcardType.getRangeBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  toWildcardTypes  =  toWildcardType.getRangeBounds();	  Type[]    lowBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  Type[]    lowBounds    =    toWildcardType.getRangeBounds();    	compilable	  [FE]  AssertionError  	101	2	replace
124	[BUG]  [BUGGY]  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  Type[]    lowBounds    =    toWildcardType.getRangeBounds();    	compilable	  [FE]  AssertionError  	101	2	replace
125	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
126	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
127	[BUG]  [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	132	None	replace
128	[BUG]  [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	132	None	replace
129	[BUG]  [BUGGY]  While(toBound  ==  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound  ==  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound  ==  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound    ==    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	11	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	124	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	124	None	replace
132	[BUG]  [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
133	[BUG]  [BUGGY]  if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
134	[BUG]  [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	179	2	add
136	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	179	2	add
137	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	179	None	add
138	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeV  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeV  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeV	  	non-compiled	[CE]  ')'  expected	179	None	add
139	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	179	None	add
140	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVar  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVar  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVar	  	non-compiled	[CE]  ')'  expected	179	None	add
141	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])	53	None	replace
142	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
143	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
144	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Map<TypeVariable<?>,Type>)	53	None	replace
145	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
146	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
147	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
148	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type)  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type)	216	None	replace
149	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  ';'  expected	52	None	replace
150	[BUG]  [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	117	None	replace
151	[BUG]  [BUGGY]  if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	117	None	replace
152	[BUG]  [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
153	[BUG]  [BUGGY]  Type[]  toWildcardTypes  =  toWildcardType.getLeadingBounds();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  toWildcardTypes  =  toWildcardType.getLeadingBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  toWildcardTypes  =  toWildcardType.getLeadingBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
154	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getLeadingBounds();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getLeadingBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getLeadingBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  ';'  expected	129	None	replace
155	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(),  toLowerBounds;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(),  toLowerBounds;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(),  toLowerBounds;	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
156	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    upperBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	add
157	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    upperBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	add
158	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    upperBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	add
159	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    upperBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	add
160	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  not  a  statement	192	None	replace
161	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
162	[BUG]  [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  not  a  statement	192	None	replace
163	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
164	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  return    true;    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
165	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  return    true;    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
166	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  lowerBounds  =  toWildcardType.getUpperBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	1	None	add
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  lowBounds  =  toWildcardType.getUpperBounds();	  	compilable	  [FE]  AssertionError  	1	2	add
168	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  lowBounds  =  toWildcardType.getUpperBounds();	  	compilable	  [FE]  AssertionError  	1	2	add
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  upperBounds  =  toWildcardType.getUpperBounds();	  	compilable	  [FE]  AssertionError  	1	2	add
170	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  upperBounds  =  toWildcardType.getUpperBounds();	  	compilable	  [FE]  AssertionError  	1	2	add
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  lowestBounds  =  toWildcardType.getUpperBounds();	  	compilable	  [FE]  AssertionError  	1	2	add
172	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  lowestBounds  =  toWildcardType.getUpperBounds();	  	compilable	  [FE]  AssertionError  	1	2	add
173	[BUG]  [BUGGY]  parent  <!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	191	None	replace
174	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
175	[BUG]  [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
176	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toLowerBounds),  type,  null))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	151	None	replace
178	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol  Preconditions	140	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [CE]  cannot  find  symbol  Preconditions  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol  Preconditions	140	None	replace
180	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns));  [CE]  cannot  find  symbol  Preconditions  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns));	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol  Preconditions	140	None	replace
181	[BUG]  [BUGGY]  if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substitutionTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
182	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  toLowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(),    toLowerBounds;    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	103	None	replace
183	[BUG]  [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  toWildcardType  =  toWildcardType.getRangeBounds(),  toLowerBounds;	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(),    toLowerBounds;    	non-compiled	[CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	103	None	replace
184	[BUG]  [BUGGY]  Type[]  lowBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(),    toLowerBounds;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
185	[BUG]  [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
186	[BUG]  [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	32	None	replace
187	[BUG]  [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
188	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toBound)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(toBound.getClass()!=  toBound)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=    toBound)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	219	2	replace
190	[BUG]  [BUGGY]  if(toBound.getClass()!=  toBound)  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toBound)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toBound)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=    toBound)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	219	2	replace
191	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
192	[BUG]  [BUGGY]  ||!isAssignable(toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
193	[BUG]  [BUGGY]  ||!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
194	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
195	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.construct(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.construct(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.construct(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
196	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type,  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type,  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignable(type,  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
197	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type)||  isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
198	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    this))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	193	None	replace
199	[BUG]  [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    this))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	193	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	18	2	add
201	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	18	2	add
202	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA	  	non-compiled	[CE]  ')'  expected	18	None	add
203	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
204	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	18	None	add
205	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeV  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeV  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeV	  	non-compiled	[CE]  ')'  expected	18	None	add
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	73	2	replace
207	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	73	2	replace
208	[BUG]  [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
209	[BUG]  [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
210	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
211	[BUG]  [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
212	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Map<TypeVariable<?>,Type>)	29	None	replace
213	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
214	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	199	None	replace
215	[BUG]  [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	199	None	replace
216	[BUG]  [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	145	None	replace
217	[BUG]  [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	145	None	replace
218	[BUG]  [BUGGY]  if(toBound.isAssignable()  ||  toBound.isLowerBound())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.isAssignable()  ||  toBound.isLowerBound())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignable()  ||  toBound.isLowerBound())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	145	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	123	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	123	None	replace
221	[BUG]  [BUGGY]  safelyBounds(toBound,  toLowerBounds))  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safelyBounds(toBound,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safelyBounds(toBound,  toLowerBounds))  {	  if(toBound    ==    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
222	[BUG]  [BUGGY]  safelyBounds(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safelyBounds(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safelyBounds(toBound,  toLowerBounds);	  if(toBound    ==    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
223	[BUG]  [BUGGY]  safelyBounds(toBound,  toLowerBounds)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safelyBounds(toBound,  toLowerBounds)  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safelyBounds(toBound,  toLowerBounds)  {	  if(toBound    ==    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  upperBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	71	2	replace
225	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  upperBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	71	2	replace
226	[BUG]  [BUGGY]  []  lowerBounds  =  toWildcardType.getLowerBounds();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  []  lowerBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	[]  lowerBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
227	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Type[])  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Type[])	198	None	replace
228	[BUG]  [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
229	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toUpperBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toUpperBounds);	  Constructor    <?>    toBound    =    Constructor.createConstructor(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
230	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds,  type);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds,  type);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds,  type);	  Constructor    <?>    toBound    =    Constructor.createConstructor(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
231	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toLowerBounds);	  Constructor    <?>    toBound    =    Constructor.createConstructor(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
232	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  ConstructorUtils.createConstructor(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toBound  =  ConstructorUtils.createConstructor(toBound,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  ConstructorUtils.createConstructor(toBound,  toLowerBounds);	  Constructor    <?>    toBound    =    Constructor.createConstructor(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
233	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	147	3	add
235	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	147	3	add
236	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  	non-compiled	[CE]  ';'  expected	147	None	add
237	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
238	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  else  if(toBound.getClass()!=  typeVarAssigns)  {  return  false;  }  [CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  else  if(toBound.getClass()!=  typeVarAssigns)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  else  if(toBound.getClass()!=  typeVarAssigns)  {  return  false;  }	  	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>	147	None	add
239	[BUG]  [BUGGY]  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
240	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType.substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType.substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType.substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
241	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
242	[BUG]  [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
243	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
244	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
245	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
246	[BUG]  [BUGGY]  tryOffsets(toBound,  toUpperBounds,  toLowerBounds)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toUpperBounds,  toLowerBounds)  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toUpperBounds,  toLowerBounds)  {	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
247	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  lowerBounds)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toLowerBounds,  lowerBounds)  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  lowerBounds)  {	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
248	[BUG]  [BUGGY]  tryOffsets(toBound,  toWildcardType,  toLowerBounds)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toWildcardType,  toLowerBounds)  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toWildcardType,  toLowerBounds)  {	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
249	[BUG]  [BUGGY]  tryOffsets(toBound,  lowerBounds,  toLowerBounds)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  lowerBounds,  toLowerBounds)  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  lowerBounds,  toLowerBounds)  {	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
250	[BUG]  [BUGGY]  result.put(type,  toBound);  [CE]  cannot  find  symbol  result  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  result.put(type,  toBound);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	result.put(type,  toBound);	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  result	7	None	replace
251	[BUG]  [BUGGY]  tryOffsets(toBound,  toWildcardType,  toLowerBounds))  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toWildcardType,  toLowerBounds))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toWildcardType,  toLowerBounds))  {  return  true;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
252	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  lowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toLowerBounds,  lowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  lowerBounds))  {  return  false;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
253	[BUG]  [BUGGY]  parent!=  null;  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null;  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null;  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	209	None	replace
254	[BUG]  [BUGGY]  parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	209	None	replace
255	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
256	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
257	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toLowerBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
258	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType)  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType)	178	None	replace
259	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
260	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
261	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,WildcardType)  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,WildcardType)	178	None	replace
262	[BUG]  [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()    ==    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
263	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	165	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	56	2	add
265	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	56	2	add
266	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	56	None	add
267	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
268	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeV  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeV  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeV	  	non-compiled	[CE]  ')'  expected	56	None	add
269	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables	  	non-compiled	[CE]  ')'  expected	56	None	add
270	[BUG]  [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
271	[BUG]  [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
272	[BUG]  [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
273	[BUG]  [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
274	[BUG]  [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	98	None	replace
275	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
276	[BUG]  [BUGGY]  Context.checkState(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [CE]  cannot  find  symbol  Context  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol  Context	98	None	replace
277	[BUG]  [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type!=  toWildcardType.isAssignableFrom(toBound)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  ';'  expected	130	None	replace
278	[BUG]  [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  ';'  expected	130	None	replace
279	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
280	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
281	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	90	None	replace
282	[BUG]  [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
283	[BUG]  [BUGGY]  if(!isAssignable(type,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    replacementTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
284	[BUG]  [BUGGY]  ||!isAssignable(type,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    replacementTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
285	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
287	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
288	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  toLowerBounds))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
289	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
290	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
291	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
292	[BUG]  [BUGGY]  tryOffsets(toBound,  toWildcardType,  typeVarAssigns))  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toWildcardType,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toWildcardType,  typeVarAssigns))  {  return  true;  }	  tryOffsets(toBound,    toLowerBounds,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
293	[BUG]  [BUGGY]  tryOffsets(toBound,  toUpperBounds,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toUpperBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toUpperBounds,  typeVarAssigns))  {  return  false;  }	  tryOffsets(toBound,    toLowerBounds,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
294	[BUG]  [BUGGY]  tryOffsets(toBound,  toUpperBounds,  typeVarAssigns))  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toUpperBounds,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toUpperBounds,  typeVarAssigns))  {  return  true;  }	  tryOffsets(toBound,    toLowerBounds,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	21	2	add
296	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	21	2	add
297	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA	  	non-compiled	[CE]  ')'  expected	21	None	add
298	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
299	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
300	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	21	None	add
301	[BUG]  [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
302	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  parent!=    null    ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  not  a  statement	47	None	replace
303	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  parent!=    null    ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  not  a  statement	47	None	replace
304	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,WildcardType)  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,WildcardType)	63	None	replace
305	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	63	None	replace
306	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
307	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
308	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertion( "msg.bad.substitute.type ",  toBound,  typeVarAssigns));  [CE]  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  aughtExceptionHandler.throwAssertion( "msg.bad.substitute.type ",  toBound,  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.throwAssertion( "msg.bad.substitute.type ",  toBound,  typeVarAssigns));	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    	non-compiled	[CE]  	148	None	replace
309	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.substitute.type ",  toBound,  typeVarAssigns));  [CE]  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.substitute.type ",  toBound,  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.throwAssertionError( "msg.bad.substitute.type ",  toBound,  typeVarAssigns));	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    	non-compiled	[CE]  	148	None	replace
310	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
311	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
312	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarA  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarA  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarA	  	non-compiled	[CE]  ')'  expected	89	None	add
313	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAs  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAs  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAs	  	non-compiled	[CE]  ')'  expected	89	None	add
314	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false	  	non-compiled	[CE]  ';'  expected	89	None	add
315	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	compilable	  [FE]  AssertionError  	62	2	replace
316	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	compilable	  [FE]  AssertionError  	62	2	replace
317	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Map<TypeVariable<?>,Type>)	62	None	replace
318	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
319	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
320	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
321	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
322	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
323	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  toLowerBounds),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toLowerBounds),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
324	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toBound,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toBound,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toBound,  toLowerBounds),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toLowerBounds),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
325	[BUG]  [BUGGY]  While(toWildcardType!=  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toWildcardType!=  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toWildcardType!=  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
326	[BUG]  [BUGGY]  While(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
327	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	50	None	replace
328	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAll())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAll())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAll())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	50	None	replace
329	[BUG]  [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
330	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    type),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	163	None	replace
331	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  wildcardType  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    type),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  wildcardType	163	None	replace
332	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	72	None	add
333	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	72	None	add
334	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	72	None	add
335	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	72	None	add
336	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toLowerBounds();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.toLowerBounds();	  Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
338	[BUG]  [BUGGY]  if(!isAssignable(type,  toLowerBounds,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
339	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
340	[BUG]  [BUGGY]  if(!isAssignable(type,  toLowerBounds),  typeVarAssigns)  {  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toLowerBounds),  typeVarAssigns)  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toLowerBounds),  typeVarAssigns)  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds))    {    	non-compiled	[CE]  ')'  expected	115	None	replace
341	[BUG]  [BUGGY]  wildcardType.handleMissingDependency(toBound,  toWildcardType);  [CE]  cannot  find  symbol  wildcardType  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleMissingDependency(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleMissingDependency(toBound,  toWildcardType);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	201	None	replace
342	[BUG]  [BUGGY]  WildcardType  toWildcardType.handleMissingDependency(toBound,  toWildcardType);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType.handleMissingDependency(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType.handleMissingDependency(toBound,  toWildcardType);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  ';'  expected	201	None	replace
343	[BUG]  [BUGGY]  safeHandler.handleMissingDependency(toBound,  toWildcardType);  [CE]  cannot  find  symbol  safeHandler  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeHandler.handleMissingDependency(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeHandler.handleMissingDependency(toBound,  toWildcardType);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  cannot  find  symbol  safeHandler	201	None	replace
344	[BUG]  [BUGGY]  handleMissingDependency(toBound,  toWildcardType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingDependency(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingDependency(toBound,  toWildcardType);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
345	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
346	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
347	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
348	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds(),  toLowerBounds;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds(),  toLowerBounds;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeftBounds(),  toLowerBounds;	  Type[]    lowerBounds    =    toWildcardType.getLeftBounds();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
349	[BUG]  [BUGGY]  Type[]  lowBounds  =  toWildcardType.getLeftBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowBounds  =  toWildcardType.getLeftBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowBounds  =  toWildcardType.getLeftBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeftBounds();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
350	[BUG]  [BUGGY]  type[0]  =  toBound.getClass();  [CE]  array  required,  but  Type  found  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  type[0]  =  toBound.getClass();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	type[0]  =  toBound.getClass();	  result[0]    =    toBound.getClass();    	non-compiled	[CE]  array  required,  but  Type  found	26	None	replace
351	[BUG]  [BUGGY]  toBound[0]  =  toBound.getClass();  [CE]  array  required,  but  Type  found  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound[0]  =  toBound.getClass();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound[0]  =  toBound.getClass();	  result[0]    =    toBound.getClass();    	non-compiled	[CE]  array  required,  but  Type  found	26	None	replace
352	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound  =  toBound.getClass();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	toBound  =  toBound.getClass();	  result[0]    =    toBound.getClass();    	compilable	  [FE]  AssertionError  	26	2	replace
353	[BUG]  [BUGGY]  toBound  =  toBound.getClass();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound  =  toBound.getClass();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound  =  toBound.getClass();	  result[0]    =    toBound.getClass();    	compilable	  [FE]  AssertionError  	26	2	replace
354	[BUG]  [BUGGY]  While(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	126	None	replace
355	[BUG]  [BUGGY]  While(toWildcardType!=  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toWildcardType!=  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toWildcardType!=  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	126	None	replace
356	[BUG]  [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
357	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	34	2	replace
358	[BUG]  [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	while(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  return    true;    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	34	2	replace
359	[BUG]  [BUGGY]  wildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  wildcardType  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	187	None	replace
360	[BUG]  [BUGGY]  WildcardType  toWildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	187	None	replace
361	[BUG]  [BUGGY]  handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleAssignment(toBound,  toWildcardType,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
362	[BUG]  [BUGGY]  mandExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  mandExceptionHandler  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  mandExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	mandExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  mandExceptionHandler	187	None	replace
363	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	23	None	add
364	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	23	None	add
365	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	23	None	add
366	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	194	None	replace
367	[BUG]  [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	194	None	replace
368	[BUG]  [BUGGY]  ||!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substitutionTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
369	[BUG]  [BUGGY]  ||!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substitutionTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
370	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	158	2	add
371	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	158	2	add
372	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  If(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  If(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    If(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	158	None	add
373	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
374	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  upperBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    	compilable	  [FE]  AssertionError  	78	2	replace
375	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  upperBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    	compilable	  [FE]  AssertionError  	78	2	replace
376	[BUG]  [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	142	None	replace
377	[BUG]  [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound.isAssignable()  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	142	None	replace
378	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	142	None	replace
379	[BUG]  [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToLowerBounds(toBound,  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToLowerBounds(toBound,  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	142	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	79	2	add
381	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	79	2	add
382	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
383	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
384	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	79	2	add
386	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	79	2	add
387	[BUG]  [BUGGY]  if(!isAssignable(type,  toBound,  typeVarAssigns),  type,  typeVarAssigns)  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toBound,  typeVarAssigns),  type,  typeVarAssigns)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toBound,  typeVarAssigns),  type,  typeVarAssigns)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	149	None	replace
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(toBound.getClass()!=  typeVarAssigns.getClass())  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	149	2	replace
389	[BUG]  [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  return  false;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  typeVarAssigns.getClass())  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	149	2	replace
390	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
391	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
392	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
393	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
394	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	40	None	replace
395	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
396	[BUG]  [BUGGY]  parent  ==  parent.getParent();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  parent.getParent();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  parent.getParent();	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
397	[BUG]  [BUGGY]  result.add(type);  [CE]  cannot  find  symbol  result  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  result.add(type);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	result.add(type);	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  result	8	None	replace
398	[BUG]  [BUGGY]  parent!=  parent.getParent();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  parent.getParent();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  parent.getParent();	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
399	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  substituteTypeVariables(toBound,  typeVarAssigns))  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  substituteTypeVariables(toBound,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  substituteTypeVariables(toBound,  typeVarAssigns))  {	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  ')'  expected	45	None	replace
400	[BUG]  [BUGGY]  if(isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
401	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
402	[BUG]  [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
403	[BUG]  [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
404	[BUG]  [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
405	[BUG]  [BUGGY]  if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
406	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	for(Type  toBound  :  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
407	[BUG]  [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
408	[BUG]  [BUGGY]  toBound.handleAssignment(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound.handleAssignment(type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound.handleAssignment(type,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
409	[BUG]  [BUGGY]  wildcardType.handleAssignment(toBound,  type,  toLowerBounds);  [CE]  cannot  find  symbol  wildcardType  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleAssignment(toBound,  type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleAssignment(toBound,  type,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	188	None	replace
410	[BUG]  [BUGGY]  assistExceptionHandler.handleAssignment(toBound,  type,  toLowerBounds);  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  assistExceptionHandler.handleAssignment(toBound,  type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	assistExceptionHandler.handleAssignment(toBound,  type,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	188	None	replace
411	[BUG]  [BUGGY]  handleAssignment(toBound,  toLowerBounds,  type);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleAssignment(toBound,  toLowerBounds,  type);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleAssignment(toBound,  toLowerBounds,  type);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
412	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
413	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }	  if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	compilable	  [FE]  AssertionError  	167	2	replace
414	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }	  if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	compilable	  [FE]  AssertionError  	167	2	replace
415	[BUG]  [BUGGY]  Context.checkState(type.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
416	[BUG]  [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
417	[BUG]  [BUGGY]  Context.checkState(toWildcardType.isAssignable()  &&  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toWildcardType.isAssignable()  &&  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toWildcardType.isAssignable()  &&  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
418	[BUG]  [BUGGY]  if(toBound.getClass()!=  typeVarAssigns)  {  return  false;  }  [CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  typeVarAssigns)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  typeVarAssigns)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=    typeVarAssigns)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>	218	None	replace
419	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])	166	None	replace
420	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Type[])  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Type[])	166	None	replace
421	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	35	2	add
422	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	35	2	add
423	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
424	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarA	  	non-compiled	[CE]  ')'  expected	35	None	add
425	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	35	None	add
426	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVar  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVar  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVar	  	non-compiled	[CE]  ')'  expected	35	None	add
427	[BUG]  [BUGGY]  ||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
428	[BUG]  [BUGGY]  Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
429	[BUG]  [BUGGY]  Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  type  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  type  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  type	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
430	[BUG]  [BUGGY]  Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
431	[BUG]  [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	144	None	replace
432	[BUG]  [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	144	None	replace
433	[BUG]  [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound.isAssignable())  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	144	None	replace
434	[BUG]  [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	While(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	144	None	replace
435	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
436	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(toBound));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(toBound));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw  new  IllegalArgumentException( " ".equals(toBound));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	24	None	replace
437	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(toBound.getType()));  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(toBound.getType()));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw  new  IllegalArgumentException( " ".equals(toBound.getType()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
438	[BUG]  [BUGGY]  handleMissingName(toBound,  type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingName(toBound,  type,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingName(toBound,  type,  typeVarAssigns);	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
439	[BUG]  [BUGGY]  wildcardType.handleMissingName(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  wildcardType  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleMissingName(type,  toBound,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleMissingName(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	186	None	replace
440	[BUG]  [BUGGY]  toWildcardType.handleMissingName(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toWildcardType.handleMissingName(type,  toBound,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toWildcardType.handleMissingName(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
441	[BUG]  [BUGGY]  toBound.handleMissingName(type,  type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound.handleMissingName(type,  type,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound.handleMissingName(type,  type,  typeVarAssigns);	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
442	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
443	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
444	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	85	3	add
445	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	85	3	add
446	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  	non-compiled	[CE]  ';'  expected	85	None	add
447	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
448	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
449	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	77	2	replace
450	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	77	2	replace
451	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeftBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
452	[BUG]  [BUGGY]  parent  ==  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  parent    ==    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	125	None	replace
453	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  parent    ==    null    &&!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	176	None	replace
454	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.construct(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.construct(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.construct(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	96	None	replace
455	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	96	None	replace
456	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignableTo(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignableTo(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignableTo(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	96	None	replace
457	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	96	None	replace
458	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    upperBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	75	2	replace
459	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    upperBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	75	2	replace
460	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    upperBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	75	2	replace
461	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    upperBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	75	2	replace
462	[BUG]  [BUGGY]  ';'  expected  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ';'  expected  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	';'  expected	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	92	None	replace
463	[BUG]  [BUGGY]  ';'  expected  =  toWildcardType.isStatic();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ';'  expected  =  toWildcardType.isStatic();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	';'  expected  =  toWildcardType.isStatic();	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	92	None	replace
464	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(type))  {	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
465	[BUG]  [BUGGY]  ';'  expected  =  toWildcardType.getRawClass();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ';'  expected  =  toWildcardType.getRawClass();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	';'  expected  =  toWildcardType.getRawClass();	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	92	None	replace
466	[BUG]  [BUGGY]  wildcardType.handleMissingClass(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  wildcardType  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleMissingClass(type,  toBound,  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleMissingClass(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	195	None	replace
467	[BUG]  [BUGGY]  handleMissingClass(toBound,  type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingClass(toBound,  type,  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingClass(toBound,  type,  typeVarAssigns);	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
468	[BUG]  [BUGGY]  WildcardType  toWildcardType.handleMissingClass(type,  toBound,  typeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType.handleMissingClass(type,  toBound,  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType.handleMissingClass(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	195	None	replace
469	[BUG]  [BUGGY]  handleMissingClass(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingClass(type,  toBound,  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingClass(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
470	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    type),    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>)	172	None	replace
471	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  null))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    null))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	207	None	replace
472	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  null))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    null))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	207	None	replace
473	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	207	None	replace
474	[BUG]  [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
475	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	127	None	replace
476	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	127	None	replace
477	[BUG]  [BUGGY]  if(!isAssignedable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignedable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignedable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
478	[BUG]  [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true    	non-compiled	[CE]  ';'  expected	133	None	replace
479	[BUG]  [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toWildcardType.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
480	[BUG]  [BUGGY]  toLowerBounds.handleAssignment(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toLowerBounds.handleAssignment(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toLowerBounds.handleAssignment(toBound,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
481	[BUG]  [BUGGY]  toBound.handleAssignment(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBound.handleAssignment(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBound.handleAssignment(toBound,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
482	[BUG]  [BUGGY]  handleAssignment(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleAssignment(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleAssignment(toBound,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
483	[BUG]  [BUGGY]  wildcardType.handleAssignment(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  wildcardType  [FE]                            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleAssignment(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleAssignment(toBound,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	189	None	replace
484	[BUG]  [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
485	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(type,  toBound);  [CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(type,  toBound);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(type,  toBound);	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds(toBound);    	non-compiled	[CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;	210	None	replace
486	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  type);  [CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  type);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  type);	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds(toBound);    	non-compiled	[CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;	210	None	replace
487	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(type);  [CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(type);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(type);	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds(toBound);    	non-compiled	[CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;	210	None	replace
488	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  typeVarAssigns);  [CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds(toBound);    	non-compiled	[CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;	210	None	replace
489	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toLowerBounds);	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(type);    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
490	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(toBound);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(toBound);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(toBound);	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(type);    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
491	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toUpperBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toUpperBounds);	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(type);    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
492	[BUG]  [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType.equals(type))  {  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
493	[BUG]  [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
494	[BUG]  [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  fromWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  fromWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType.equals(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  fromWildcardType))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
495	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Type[])  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type,Type[])	104	None	replace
496	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
497	[BUG]  [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
498	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toUpperBounds),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toUpperBounds),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toUpperBounds),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toLowerBounds),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
499	[BUG]  [BUGGY]  parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  return    true;    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
500	[BUG]  [BUGGY]  parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  return    true;    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
501	[BUG]  [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
502	[BUG]  [BUGGY]  parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
503	[BUG]  [BUGGY]  if(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
504	[BUG]  [BUGGY]  parent  ==  toBound.isAssignable()  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound.isAssignable()  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound.isAssignable()  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
505	[BUG]  [BUGGY]  parent  ==  }  else  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  }  else  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  }  else  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
506	[BUG]  [BUGGY]  parent  ==  }  else  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  }  else  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  }  else  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
507	[BUG]  [BUGGY]  parent  ==  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
508	[BUG]  [BUGGY]  if(toBound!=  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
509	[BUG]  [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
510	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
511	[BUG]  [BUGGY]  Preconditions.checkState(toBound!=  toBound);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(toBound!=  toBound);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(toBound!=  toBound);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	19	None	replace
512	[BUG]  [BUGGY]  Preconditions.checkState(toBound  ==  toBound);  [CE]  cannot  find  symbol  Preconditions  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(toBound  ==  toBound);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(toBound  ==  toBound);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	19	None	replace
513	[BUG]  [BUGGY]  Preconditions.checkNotNull(toBound);  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkNotNull(toBound);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkNotNull(toBound);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	19	None	replace
514	[BUG]  [BUGGY]  Context.checkNotNull(toBound);  [CE]  cannot  find  symbol  Context  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkNotNull(toBound);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkNotNull(toBound);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  Context	19	None	replace
515	[BUG]  [BUGGY]  parent  <!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
516	[BUG]  [BUGGY]  toBounds.handleMissingClass(type,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBounds.handleMissingClass(type,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBounds.handleMissingClass(type,  toLowerBounds);	  aughtExceptionHandler.handleMissingClass(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	196	None	replace
517	[BUG]  [BUGGY]  handleMissingClass(toBound,  type,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingClass(toBound,  type,  toUpperBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingClass(toBound,  type,  toUpperBounds);	  aughtExceptionHandler.handleMissingClass(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
518	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true    	non-compiled	[CE]  ';'  expected	156	None	replace
519	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true    	non-compiled	[CE]  ';'  expected	156	None	replace
520	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type[])  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type[])	202	None	replace
521	[BUG]  [BUGGY]  safely(toBound)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safely(toBound)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safely(toBound)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
522	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	68	None	replace
523	[BUG]  [BUGGY]  parent  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	68	None	replace
524	[BUG]  [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	68	None	replace
525	[BUG]  [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  ';'  expected	130	None	replace
526	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds),  type,  null))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    null))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	207	None	replace
527	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type[])  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigneds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type[])	42	None	replace
528	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigneds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
529	[BUG]  [BUGGY]  parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
530	[BUG]  [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
531	[BUG]  [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
532	[BUG]  [BUGGY]  parent!=  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
533	[BUG]  [BUGGY]  if(!isAssignedable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignedable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignedable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
534	[BUG]  [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns)  {  return  false;  }  [CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  typeVarAssigns)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()    ==    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>	84	None	replace
535	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()    ==    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	84	None	replace
536	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  wildcardType))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  wildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  wildcardType))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	63	None	replace
537	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  type,  substituteTypeVariables)  {  return  false;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  type,  substituteTypeVariables)  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  type,  substituteTypeVariables)  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
538	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns);	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	180	None	replace
539	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns));  [CE]  cannot  find  symbol  Preconditions  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns));	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	180	None	replace
540	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  toLowerBounds));  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  toLowerBounds));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  toLowerBounds));	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])	180	None	replace
541	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  toWildcardType))  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  toWildcardType))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  toWildcardType))  {	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	180	None	replace
542	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
543	[BUG]  [BUGGY]  parent  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	119	None	replace
544	[BUG]  [BUGGY]  safely(toBound,  toWildcardType))  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safely(toBound,  toWildcardType))  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safely(toBound,  toWildcardType))  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
545	[BUG]  [BUGGY]  safely(toBound)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safely(toBound)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safely(toBound)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
546	[BUG]  [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
547	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	60	None	replace
548	[BUG]  [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
549	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	73	2	replace
550	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	73	2	replace
551	[BUG]  [BUGGY]  taskHandler.handleAssignment(toBound,  type,  toLowerBounds);  [CE]  cannot  find  symbol  taskHandler  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  taskHandler.handleAssignment(toBound,  type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	taskHandler.handleAssignment(toBound,  type,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  taskHandler	188	None	replace
552	[BUG]  [BUGGY]  toBounds.handleAssignment(type,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBounds.handleAssignment(type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBounds.handleAssignment(type,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	188	None	replace
553	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  not  a  statement	192	None	replace
554	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
555	[BUG]  [BUGGY]  Preconditions.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(toBound.isAssignableFrom(type)||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
556	[BUG]  [BUGGY]  Preconditions.checkState(toBound.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(toBound.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(toBound.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
557	[BUG]  [BUGGY]  Preconditions.checkState(!toBound.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!toBound.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!toBound.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
558	[BUG]  [BUGGY]  Preconditions.checkState(!typeVarAssigns.contains(toBound));  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!typeVarAssigns.contains(toBound));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!typeVarAssigns.contains(toBound));	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
559	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns)  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType),  typeVarAssigns)  {	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
560	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
561	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }	  	compilable	  [FE]  AssertionError  	147	3	add
562	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }	  	compilable	  [FE]  AssertionError  	147	3	add
563	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getUpperBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	72	None	add
564	[BUG]  [BUGGY]  if(toBound.isLowerBound())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.isLowerBound())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isLowerBound())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	145	None	replace
565	[BUG]  [BUGGY]  if(toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	145	None	replace
566	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	145	None	replace
567	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.clear())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.clear())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.clear())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
568	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignable(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
569	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
570	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	89	None	add
571	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substitute  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substitute  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substitute	  	non-compiled	[CE]  ')'  expected	89	None	add
572	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssign  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssign  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssign	  	non-compiled	[CE]  ')'  expected	89	None	add
573	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
574	[BUG]  [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleMissingClass(type,  toBound,  typeVarAssigns);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleMissingClass(type,  toBound,  typeVarAssigns);  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  aughtExceptionHandler.handleMissingClass(type,  toBound,  typeVarAssigns);  }	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	195	None	replace
575	[BUG]  [BUGGY]  WildcardType  toWildcardType  =  toBound.handleMissingClass(type,  toBound,  typeVarAssigns);  [CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType  =  toBound.handleMissingClass(type,  toBound,  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType  =  toBound.handleMissingClass(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	195	None	replace
576	[BUG]  [BUGGY]  parent  ==  parent.replaceChild(toBound,  type);  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  parent.replaceChild(toBound,  type);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  parent.replaceChild(toBound,  type);	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	216	None	replace
577	[BUG]  [BUGGY]  parent  ==  parent.replaceChild(toBound,  new  MemberType(typeVarAssigns),  type);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  parent.replaceChild(toBound,  new  MemberType(typeVarAssigns),  type);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  parent.replaceChild(toBound,  new  MemberType(typeVarAssigns),  type);	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	216	None	replace
578	[BUG]  [BUGGY]  parent  ==  parent.replaceChild(toBound,  new  Member(typeVarAssigns));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  parent.replaceChild(toBound,  new  Member(typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  parent.replaceChild(toBound,  new  Member(typeVarAssigns));	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	216	None	replace
579	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	77	2	replace
580	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();	          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	77	2	replace
581	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
582	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	21	None	add
583	[BUG]  [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  toUpperBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  toUpperBounds))  {  return  false;  }	  parent    ==    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	125	None	replace
584	[BUG]  [BUGGY]  Parent  <?>  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Parent  <?>  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Parent  <?>  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  parent    ==    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	125	None	replace
585	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
586	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  ';'  expected	52	None	replace
587	[BUG]  [BUGGY]  if(!isAssignable(toWildcardType,  toLowerBounds),  type,  toLowerBounds))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toWildcardType,  toLowerBounds),  type,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toWildcardType,  toLowerBounds),  type,  toLowerBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    	non-compiled	[CE]  ')'  expected	170	None	replace
588	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  parent    ==    null    &&!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	168	None	replace
589	[BUG]  [BUGGY]  toWildcardType.handleMissingDependency(toBound,  toWildcardType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toWildcardType.handleMissingDependency(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toWildcardType.handleMissingDependency(toBound,  toWildcardType);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
590	[BUG]  [BUGGY]  taskHandler.handleMissingDependency(toBound,  toWildcardType);  [CE]  cannot  find  symbol  taskHandler  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  taskHandler.handleMissingDependency(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	taskHandler.handleMissingDependency(toBound,  toWildcardType);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  cannot  find  symbol  taskHandler	201	None	replace
591	[BUG]  [BUGGY]  if(toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
592	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
593	[BUG]  [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType))  {  return  false;  }	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
594	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Throwable  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionError  	24	2	replace
595	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Throwable  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionError  	24	2	replace
596	[BUG]  [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
597	[BUG]  [BUGGY]  Context.checkState(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
598	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	165	None	replace
599	[BUG]  [BUGGY]  &&  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  &&  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	&&  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  ||    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
600	[BUG]  [BUGGY]  ||  wildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||  wildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  wildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  ||    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
601	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssign  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssign  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssign	  	non-compiled	[CE]  ')'  expected	18	None	add
602	[BUG]  [BUGGY]  if(toBound!=  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
603	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	179	2	add
604	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	179	2	add
605	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	179	None	add
606	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
607	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
608	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
609	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
610	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
611	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	70	None	replace
612	[BUG]  [BUGGY]  parent  ==  null  &&  toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&  toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&  toBound!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	70	None	replace
613	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	70	None	replace
614	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toBound,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toBound,  toLowerBounds);	  Constructor    <?>    toBound    =    Constructor.createConstructor(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
615	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  lowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  lowerBounds);	  Constructor    <?>    toBound    =    Constructor.createConstructor(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
616	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ')'  expected	155	None	replace
617	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	90	None	replace
618	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	90	None	replace
619	[BUG]  [BUGGY]  tryOffsets(toBound,  lowerBounds,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  lowerBounds,  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  lowerBounds,  toLowerBounds))  {  return  false;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
620	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.clear())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.clear())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.clear())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	50	None	replace
621	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignable(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	50	None	replace
622	[BUG]  [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
623	[BUG]  [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
624	[BUG]  [BUGGY]  if(typeVarAssigns.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(typeVarAssigns.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(typeVarAssigns.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
625	[BUG]  [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
626	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
627	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
628	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  toWildcardType),  toWildcardType))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	160	None	replace
629	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	62	None	replace
630	[BUG]  [BUGGY]  if(!isAssignable(type,  toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)	62	None	replace
631	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getUpperBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	76	None	add
632	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Map<TypeVariable<?>,Type>)	98	None	replace
633	[BUG]  [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  typeVarAssigns));  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  typeVarAssigns));	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  ')'  expected	98	None	replace
634	[BUG]  [BUGGY]  taskHandler.handleMissingDependency(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  taskHandler  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  taskHandler.handleMissingDependency(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	taskHandler.handleMissingDependency(toBound,  toLowerBounds);	  aughtExceptionHandler.handleMissingDependency(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  taskHandler	200	None	replace
635	[BUG]  [BUGGY]  toBounds.handleMissingDependency(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  toBounds.handleMissingDependency(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	toBounds.handleMissingDependency(toBound,  toLowerBounds);	  aughtExceptionHandler.handleMissingDependency(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	200	None	replace
636	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  if(toBound    ==    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
637	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound    ==    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
638	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,WildcardType,Type[])  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,WildcardType,Type[])	198	None	replace
639	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	198	None	replace
640	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	29	None	replace
641	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	127	None	replace
642	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toUpperBounds;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toUpperBounds;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toUpperBounds;	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(),    toLowerBounds;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
643	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	173	None	replace
644	[BUG]  [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	117	None	replace
645	[BUG]  [BUGGY]  if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	117	None	replace
646	[BUG]  [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substitutionTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
647	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substitutionTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	162	None	replace
648	[BUG]  [BUGGY]  parent!=  null  &&  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
649	[BUG]  [BUGGY]  parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
650	[BUG]  [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
651	[BUG]  [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
652	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds,  typeVarAssigns))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
653	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  toUpperBounds))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  toUpperBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
654	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns));  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns));	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	140	None	replace
655	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
656	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound))  {  return  false;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound))  {  return  false;	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
657	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	96	None	replace
658	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignable(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	96	None	replace
659	[BUG]  [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleMissingName(type,  toBound,  typeVarAssigns);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleMissingName(type,  toBound,  typeVarAssigns);  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  aughtExceptionHandler.handleMissingName(type,  toBound,  typeVarAssigns);  }	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	186	None	replace
660	[BUG]  [BUGGY]  WildcardType  toWildcardType.handleMissingName(type,  toBound,  typeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType.handleMissingName(type,  toBound,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType.handleMissingName(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	186	None	replace
661	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	151	None	replace
662	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toLowerBounds),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toLowerBounds),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  toLowerBounds),  type,  null))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	151	None	replace
663	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
664	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignable(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignable(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
665	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.setAssignableTo(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.setAssignableTo(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.setAssignableTo(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
666	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
667	[BUG]  [BUGGY]  Class  <?>  toWildcardType  =  toWildcardType.getRawClass();  [CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Class  <?>  toWildcardType  =  toWildcardType.getRawClass();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Class  <?>  toWildcardType  =  toWildcardType.getRawClass();	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
668	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLeftBounds();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLeftBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  upperBounds  =  toWildcardType.getLeftBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeftBounds();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
669	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toBound.getLeftBounds();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toBound.getLeftBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType,  toBound.getLeftBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeftBounds();    	non-compiled	[CE]  ';'  expected	3	None	replace
670	[BUG]  [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
671	[BUG]  [BUGGY]  if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
672	[BUG]  [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
673	[BUG]  [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true    	non-compiled	[CE]  ';'  expected	133	None	replace
674	[BUG]  [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(typeVarAssigns.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true    	non-compiled	[CE]  ';'  expected	133	None	replace
675	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    type),    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	172	None	replace
676	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	35	None	add
677	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getType();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  toBounds  =  toBound.getType();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  toBounds  =  toBound.getType();	  result[0]    =    toBound.getType();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
678	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
679	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	56	None	add
680	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substitute  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substitute  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substitute	  	non-compiled	[CE]  ')'  expected	56	None	add
681	[BUG]  [BUGGY]  tryOffsets(toBound,  lowerBounds,  typeVarAssigns))  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  lowerBounds,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  lowerBounds,  typeVarAssigns))  {  return  true;  }	  tryOffsets(toBound,    toLowerBounds,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
682	[BUG]  [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
683	[BUG]  [BUGGY]  if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
684	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toBound);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toBound);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type,  toBound);	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(type);    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
685	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
686	[BUG]  [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
687	[BUG]  [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  type  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  type  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  type	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
688	[BUG]  [BUGGY]  Context.checkState(type.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(type.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(type.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
689	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(type  ==  null)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(type  ==  null)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()    ==    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	5	2	replace
690	[BUG]  [BUGGY]  if(type  ==  null)  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(type  ==  null)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(type  ==  null)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()    ==    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	5	2	replace
691	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(type!=  null)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(type!=  null)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()    ==    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	5	2	replace
692	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(type!=  null)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(type!=  null)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()    ==    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	5	2	replace
693	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  toWildcardType,  typeVarAssigneds))  {  return  false;  }  [CE]  cannot  find  symbol  typeVarAssigneds  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  toWildcardType,  typeVarAssigneds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  toWildcardType,  typeVarAssigneds))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigneds	158	None	add
694	[BUG]  [BUGGY]  Type[]  lowBounds  =  toWildcardType.getLeadingBounds();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowBounds  =  toWildcardType.getLeadingBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowBounds  =  toWildcardType.getLeadingBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
695	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLeadingBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLeadingBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  upperBounds  =  toWildcardType.getLeadingBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
696	[BUG]  [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getLeadingBounds();  [CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getLeadingBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  toWildcardType  =  toWildcardType.getLeadingBounds();	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	129	None	replace
697	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	23	None	add
698	[BUG]  [BUGGY]  parent  ==  parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns));  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns));	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
699	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	123	None	replace
700	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
701	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
702	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
703	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    this))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	193	None	replace
704	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]    lowerBounds    =    toWildcardType.getUpperBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	1	None	add
705	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  type.getLowerBounds();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound,  type.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound,  type.getLowerBounds();	  Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  ';'  expected	128	None	replace
706	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTree();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTree();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound.cloneTree();	  Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
707	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
708	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType),  toWildcardType)  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	215	None	replace
709	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  toWildcardType))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType)  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType)	215	None	replace
710	[BUG]  [BUGGY]  taskHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  taskHandler  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  taskHandler.handleMissingException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	taskHandler.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  taskHandler	197	None	replace
711	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	159	None	replace
712	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	159	None	replace
713	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	159	None	replace
714	[BUG]  [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  aughtExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  }	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	187	None	replace
715	[BUG]  [BUGGY]  WildcardType  toWildcardType.handleAssignment(toBound,  type,  typeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType.handleAssignment(toBound,  type,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType.handleAssignment(toBound,  type,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	187	None	replace
716	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  toLowerBounds))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toLowerBounds),  toLowerBounds))  {	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
717	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
718	[BUG]  [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleAssignment(toBound,  toLowerBounds);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  null)  {  aughtExceptionHandler.handleAssignment(toBound,  toLowerBounds);  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  aughtExceptionHandler.handleAssignment(toBound,  toLowerBounds);  }	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	189	None	replace
719	[BUG]  [BUGGY]  taskHandler.handleAssignment(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  taskHandler  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  taskHandler.handleAssignment(toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	taskHandler.handleAssignment(toBound,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  taskHandler	189	None	replace
720	[BUG]  [BUGGY]  tryOffsets(toBound,  lowerBounds,  toLowerBounds))  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  lowerBounds,  toLowerBounds))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  lowerBounds,  toLowerBounds))  {  return  true;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
721	[BUG]  [BUGGY]  tryOffsets(toBound,  toUpperBounds,  toLowerBounds))  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toUpperBounds,  toLowerBounds))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toUpperBounds,  toLowerBounds))  {  return  true;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
722	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  lowerBounds))  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toLowerBounds,  lowerBounds))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  lowerBounds))  {  return  true;  }	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
723	[BUG]  [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Context.checkState(toBound!=    toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	132	None	replace
724	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getClass();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  toBounds  =  toBound.getClass();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  toBounds  =  toBound.getClass();	  result[0]    =    toBound.getClass();    	non-compiled	[CE]  incompatible  types	26	None	replace
725	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	135	None	replace
726	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toLowerBounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	135	None	replace
727	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
728	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound	  	non-compiled	[CE]  ')'  expected	39	None	add
729	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	150	None	replace
730	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  type	  	non-compiled	[CE]  ')'  expected	79	None	add
731	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substitute  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substitute  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substitute	  	non-compiled	[CE]  ')'  expected	79	None	add
732	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssign  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssign  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssign	  	non-compiled	[CE]  ')'  expected	79	None	add
733	[BUG]  [BUGGY]  if(toWildcardType  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
734	[BUG]  [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  toWildcardType)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
735	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
736	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	152	None	replace
737	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,  toBound,  typeVarAssigns))  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	149	2	replace
738	[BUG]  [BUGGY]  if(!isAssignable(type,  toBound,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toBound,  typeVarAssigns))  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	149	2	replace
739	[BUG]  [BUGGY]  if(!isAssignable(type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toLowerBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
740	[BUG]  [BUGGY]  if(toBound!=  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound!=  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  toWildcardType)  {  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
741	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
742	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
743	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  substituteTypeVariables))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
744	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigned))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigned))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigned))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
745	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	6	3	add
746	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	6	3	add
747	[BUG]  [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
748	[BUG]  [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
749	[BUG]  [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
750	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  upperBounds);  [CE]  cannot  find  symbol  upperBounds  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  upperBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound,  upperBounds);	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds(toBound);    	non-compiled	[CE]  cannot  find  symbol  upperBounds	210	None	replace
751	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
752	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
753	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  type,  null);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  type,  null);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType),  type,  null);	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	80	None	replace
754	[BUG]  [BUGGY]  Preconditions.checkState(typeVarAssigns.contains(toBound));  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(typeVarAssigns.contains(toBound));  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(typeVarAssigns.contains(toBound));	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
755	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	104	None	replace
756	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	104	None	replace
757	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.getRangeBounds();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.getRangeBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toLowerBounds.getRangeBounds();	  Type[]    lowerBounds    =    toWildcardType,    toLowerBounds.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
758	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type)  {  return  false;  }  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type)  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type)  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
759	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  typeVarAssigns))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
760	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns));  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns));	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns));    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)	140	None	replace
761	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toBounds);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(type,  toBounds);	  Constructor    <?>    toBound    =    Constructor.createConstructor(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
762	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
763	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
764	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
765	[BUG]  [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
766	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowestBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowestBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowestBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	76	None	add
767	[BUG]  [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
768	[BUG]  [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  toBound  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
769	[BUG]  [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
770	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	164	None	replace
771	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    replacementTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	120	None	replace
772	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(type,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(type,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(type,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    replacementTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	120	None	replace
773	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  [Delete]  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	[Delete]	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
774	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  toBound,  toLowerBounds);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  toBound,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingClass(type,  toBound,  toLowerBounds);	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	118	None	replace
775	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
776	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
777	[BUG]  [BUGGY]  if(!isAssignable(type,  lowerBounds,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  lowerBounds,  typeVarAssigns))  {	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
778	[BUG]  [BUGGY]  assistExceptionHandler( " ");  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  assistExceptionHandler( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	assistExceptionHandler( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
779	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  wildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  wildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  wildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
780	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns);  [CE]  cannot  find  symbol  Preconditions  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns);	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	136	None	replace
781	[BUG]  [BUGGY]  Preconditions.checkArgument(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkArgument(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkArgument(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
782	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(),  toLowerBounds);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(),  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(),  toLowerBounds);	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  ';'  expected	129	None	replace
783	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(toBound);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(toBound);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeadingBounds(toBound);	  Type[]    lowerBounds    =    toWildcardType.getLeadingBounds();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
784	[BUG]  [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }	  Context.checkState(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
785	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
786	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        true;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
787	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&  parent!=  toWildcardType.getParent())  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	22	None	replace
788	[BUG]  [BUGGY]  parent  ==  null  ||!parent.isAssignable(type,  toWildcardType);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||!parent.isAssignable(type,  toWildcardType);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!parent.isAssignable(type,  toWildcardType);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	22	None	replace
789	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  return  true;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  return  true;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  return  true;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	22	None	replace
790	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	124	None	replace
791	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  null))  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	207	None	replace
792	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  typeVarAssigneds  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigneds	216	None	replace
793	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType),  type,  null))  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	80	None	replace
794	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toWildcardType),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	160	None	replace
795	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType);  [CE]  cannot  find  symbol  Preconditions  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType);	  Preconditions.checkState(!isAssignable(type,    toWildcardType),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	160	None	replace
796	[BUG]  [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	117	None	replace
797	[BUG]  [BUGGY]  if(type.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(type.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(type.getClass()!=  toBound.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	117	None	replace
798	[BUG]  [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
799	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    replaceTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
800	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    }    if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }	  	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  Map<TypeVariable<?>,Type>	147	None	add
801	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds();	  Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
802	[BUG]  [BUGGY]  WildcardType  wildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  wildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  wildcardType.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	187	None	replace
803	[BUG]  [BUGGY]  WildcardType  toWildcardType  =  toWildcardType.handleAssignment(toBound,  type,  typeVarAssigns);  [CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType  =  toWildcardType.handleAssignment(toBound,  type,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType  =  toWildcardType.handleAssignment(toBound,  type,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	187	None	replace
804	[BUG]  [BUGGY]  wildcardType.handleAssignment(toBound,  type,  typeVarAssigns);  [CE]  cannot  find  symbol  wildcardType  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  wildcardType.handleAssignment(toBound,  type,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	wildcardType.handleAssignment(toBound,  type,  typeVarAssigns);	  aughtExceptionHandler.handleAssignment(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	187	None	replace
805	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
806	[BUG]  [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType!=  null)  {  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
807	[BUG]  [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
808	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  null))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	151	None	replace
809	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getType();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getType();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound.getType();	  result[0]    =    toBound.getType();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
810	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  toLowerBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  toLowerBounds))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigned),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	182	None	replace
811	[BUG]  [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
812	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds(),  toLowerBounds);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds(),  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeftBounds(),  toLowerBounds);	  Type[]    lowerBounds    =    toWildcardType.getLeftBounds();    	non-compiled	[CE]  ';'  expected	3	None	replace
813	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds(toBound);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds(toBound);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeftBounds(toBound);	  Type[]    lowerBounds    =    toWildcardType.getLeftBounds();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
814	[BUG]  [BUGGY]  if(!isAssigned(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	155	None	replace
815	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
816	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
817	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
818	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  type,  typeVarAssigns))  {  return  true;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  type,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
819	[BUG]  [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
820	[BUG]  [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
821	[BUG]  [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||  toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
822	[BUG]  [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  not  a  statement	192	None	replace
823	[BUG]  [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  not  a  statement	192	None	replace
824	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
825	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  toWildcardType,  wildcardType);  [CE]  cannot  find  symbol  compiler  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  toWildcardType,  wildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	AnnotationTraversal.traverse(compiler,  toWildcardType,  wildcardType);	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  compiler	66	None	replace
826	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(type,  toWildcardType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  aughtExceptionHandler.handleMissingName(type,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingName(type,  toWildcardType);	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	66	None	replace
827	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  toWildcardType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingClass(type,  toWildcardType);	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	66	None	replace
828	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  toWildcardType,  wildcardType))  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  toWildcardType,  wildcardType))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	AnnotationTraversal.traverse(compiler,  toWildcardType,  wildcardType))  {	  if(toWildcardType!=    null)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
829	[BUG]  [BUGGY]  Type[]  lowBounds  =  toWildcardType.lowerBounds.getRangeBounds();  [CE]  cannot  find  symbol  lowerBounds  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowBounds  =  toWildcardType.lowerBounds.getRangeBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowBounds  =  toWildcardType.lowerBounds.getRangeBounds();	  Type[]    lowBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol  lowerBounds	101	None	replace
830	[BUG]  [BUGGY]  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
831	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
832	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
833	[BUG]  [BUGGY]  handleMissingDependency(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingDependency(toBound,  toUpperBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingDependency(toBound,  toUpperBounds);	  aughtExceptionHandler.handleMissingDependency(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
834	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  wildcardType  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    type),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  wildcardType	163	None	replace
835	[BUG]  [BUGGY]  Annotation  <?>  bounds  =  toWildcardType.getRawClass();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Annotation  <?>  bounds  =  toWildcardType.getRawClass();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Annotation  <?>  bounds  =  toWildcardType.getRawClass();	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
836	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  toWildcardType.getParent())  {  return  true;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&  parent  ==  toWildcardType.getParent())  {  return  true;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&  parent  ==  toWildcardType.getParent())  {  return  true;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
837	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  if(toBound    ==    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
838	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
839	[BUG]  [BUGGY]  WildcardType  wildcardType.handleMissingDependency(toBound,  toWildcardType);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  wildcardType.handleMissingDependency(toBound,  toWildcardType);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  wildcardType.handleMissingDependency(toBound,  toWildcardType);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  ';'  expected	201	None	replace
840	[BUG]  [BUGGY]  handleMissingDependency(toBound,  toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingDependency(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingDependency(toBound,  toWildcardType,  typeVarAssigns);	  aughtExceptionHandler.handleMissingDependency(toBound,    toWildcardType);    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
841	[BUG]  [BUGGY]  if(!isAssigned(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
842	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;	  ||!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
843	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
844	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
845	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
846	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType  =  toWildcardType.isAssignable();  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType  =  toWildcardType.isAssignable();  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType  =  toWildcardType.isAssignable();  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	50	None	replace
847	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  wildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  wildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  wildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	63	None	replace
848	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	63	None	replace
849	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	179	None	add
850	[BUG]  [BUGGY]  [Delete]  else  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  [Delete]  else  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	[Delete]  else  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
851	[BUG]  [BUGGY]  [Delete]  else  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  [Delete]  else  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	[Delete]  else  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
852	[BUG]  [BUGGY]  [Delete]  else  if(!isAssignable(type,  toLowerBounds),  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  [Delete]  else  if(!isAssignable(type,  toLowerBounds),  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	[Delete]  else  if(!isAssignable(type,  toLowerBounds),  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
853	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  return  false;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&  parent!=  toWildcardType.getParent())  {  return  false;	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	180	None	replace
854	[BUG]  [BUGGY]  safelyBounds.put(type,  toBound);  [CE]  cannot  find  symbol  safelyBounds  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safelyBounds.put(type,  toBound);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safelyBounds.put(type,  toBound);	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  safelyBounds	180	None	replace
855	[BUG]  [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
856	[BUG]  [BUGGY]  parent  ==  null  ||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||  toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
857	[BUG]  [BUGGY]  parent  ==  null  ||  toBound.isAssignableFrom(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||  toBound.isAssignableFrom(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||  toBound.isAssignableFrom(type)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
858	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
859	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
860	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  if(toBound!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
861	[BUG]  [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
862	[BUG]  [BUGGY]  if(toBound.getClass()!=  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
863	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    type),    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	172	None	replace
864	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    type),    toWildcardType,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	172	2	replace
865	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    type),    toWildcardType,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	172	2	replace
866	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
867	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  parent    <!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
868	[BUG]  [BUGGY]  [Delete]  else  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  [Delete]  else  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	[Delete]  else  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(toBound    ==    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
869	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  if(toBound    ==    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
870	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns,  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
871	[BUG]  [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  ||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
872	[BUG]  [BUGGY]  [Delete]  else  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  [Delete]  else  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	[Delete]  else  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
873	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(toBound!=    null)    {    if    (!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	70	None	replace
874	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  bounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Preconditions.checkState(!isAssignable(type,  bounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  bounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Preconditions.checkState(!isAssignable(type,    toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	135	None	replace
875	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarA  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarA  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        null))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarA	  	non-compiled	[CE]  ')'  expected	79	None	add
876	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  return  true;  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
877	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,    substitututeTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
878	[BUG]  [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true    	non-compiled	[CE]  ';'  expected	133	None	replace
879	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	89	2	add
880	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        toWildcardType))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	89	2	add
881	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType),  type,  null))  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,  toWildcardType),  type,  null))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType),  type,  null))  {	          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
882	[BUG]  [BUGGY]  parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns),  toLowerBounds));  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns),  toLowerBounds));  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns),  toLowerBounds));	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
883	[BUG]  [BUGGY]  parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns),  toLowerBounds);  [CE]  WildcardType  is  abstract;  cannot  be  instantiated  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns),  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent.replaceChild(toBound,  new  WildcardType(typeVarAssigns),  toLowerBounds);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  WildcardType  is  abstract;  cannot  be  instantiated	36	None	replace
884	[BUG]  [BUGGY]  parent.replaceChild(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  parent  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent.replaceChild(toBound,  toLowerBounds);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent.replaceChild(toBound,  toLowerBounds);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  parent	36	None	replace
885	[BUG]  [BUGGY]  safeToSubstitutes(toBound,  toLowerBounds,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToSubstitutes(toBound,  toLowerBounds,  toLowerBounds))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToSubstitutes(toBound,  toLowerBounds,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
886	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	56	None	add
887	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	56	2	add
888	[BUG]  [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        false;        }        if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	56	2	add
889	[BUG]  [BUGGY]  handleAssignment(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleAssignment(toBound,  toUpperBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleAssignment(toBound,  toUpperBounds);	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
890	[BUG]  [BUGGY]  handleAssignment(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleAssignment(type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleAssignment(type,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
891	[BUG]  [BUGGY]  if(toLowerBounds  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toLowerBounds  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toLowerBounds  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  if(toBound.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	145	None	replace
892	[BUG]  [BUGGY]  availingExceptionHandlers.handleMissingClass(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  availingExceptionHandlers  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  availingExceptionHandlers.handleMissingClass(type,  toBound,  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	availingExceptionHandlers.handleMissingClass(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  availingExceptionHandlers	195	None	replace
893	[BUG]  [BUGGY]  safeHandler.handleMissingClass(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  safeHandler  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeHandler.handleMissingClass(type,  toBound,  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeHandler.handleMissingClass(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingClass(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  safeHandler	195	None	replace
894	[BUG]  [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return        true;        }        else        if(toBound.getClass()!=        typeVarAssigns.getClass())        {        if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
895	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns);  [CE]  cannot  find  symbol  Context  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns);  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns);	  Context.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Context	100	None	replace
896	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  bounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(!isAssignable(type,  bounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  bounds,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  Context.checkState(!isAssignable(type,    toWildcardType,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
897	[BUG]  [BUGGY]  handleMissingName(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleMissingName(type,  toBound,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleMissingName(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
898	[BUG]  [BUGGY]  assistExceptionHandler(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  assistExceptionHandler(type,  toBound,  typeVarAssigns);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	assistExceptionHandler(type,  toBound,  typeVarAssigns);	  aughtExceptionHandler.handleMissingName(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
899	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  parent!=    null    &&!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	183	None	replace
900	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
901	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
902	[BUG]  [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,        substituteTypeVariables(toBound,        typeVarAssigns),        typeVarAssigns))        {        return        true;        }        if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
903	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  ')'  expected	43	None	replace
904	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns)||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns)||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns)||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  ')'  expected	43	None	replace
905	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.contains(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.contains(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.contains(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  Constructor    <?>    toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false    	non-compiled	[CE]  ';'  expected	96	None	replace
906	[BUG]  [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarA  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarA  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarA	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
907	[BUG]  [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVar  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVar  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVar	  Context.checkState(toWildcardType.isAssignable()    ||    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
908	[BUG]  [BUGGY]  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	&&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
909	[BUG]  [BUGGY]  if(toBound.getClass()!=  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()!=  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  toLowerBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
910	[BUG]  [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
911	[BUG]  [BUGGY]  safeToSubstitutes(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToSubstitutes(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToSubstitutes(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
912	[BUG]  [BUGGY]  safeToSubstitutes(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToSubstitutes(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToSubstitutes(toBound,  toWildcardType,  typeVarAssigns))  {  return  false;	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
913	[BUG]  [BUGGY]  safeToSubstitutes(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToSubstitutes(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToSubstitutes(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
914	[BUG]  [BUGGY]  safeToSubstitutes(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  safeToSubstitutes(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	safeToSubstitutes(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
915	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	  Constructor    <?>    toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    	non-compiled	[CE]  ';'  expected	52	None	replace
916	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionError  	24	2	replace
917	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionError  	24	2	replace
918	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds);	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(),    toLowerBounds;    	non-compiled	[CE]  ';'  expected	103	None	replace
919	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  upperBounds;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  upperBounds;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  upperBounds;	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds(),    toLowerBounds;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
920	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	159	None	replace
921	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	159	None	replace
922	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	159	None	replace
923	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  parent  ==  null  &&!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	159	None	replace
924	[BUG]  [BUGGY]  WildcardType  toWildcardType.handleAssignment(toBound,  type,  toLowerBounds);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  WildcardType  toWildcardType.handleAssignment(toBound,  type,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	WildcardType  toWildcardType.handleAssignment(toBound,  type,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  ';'  expected	188	None	replace
925	[BUG]  [BUGGY]  handleAssignment(toBound,  toWildcardType,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleAssignment(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleAssignment(toBound,  toWildcardType,  toLowerBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
926	[BUG]  [BUGGY]  handleAssignment(toBound,  type,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  handleAssignment(toBound,  type,  toUpperBounds);  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	handleAssignment(toBound,  type,  toUpperBounds);	  aughtExceptionHandler.handleAssignment(toBound,    type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
927	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getClass();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getClass();  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound.getClass();	  result[0]    =    toBound.getClass();    	non-compiled	[CE]  incompatible  types	26	None	replace
928	[BUG]  [BUGGY]  if(typeVarAssigns  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(typeVarAssigns  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(typeVarAssigns  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
929	[BUG]  [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
930	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns))  {	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  ')'  expected	45	None	replace
931	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),	  if(!isAssignable(type,    toWildcardType,    typeVarAssigns))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
932	[BUG]  [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                Type[]        lowerBounds        =        toWildcardType.getLowerBounds();        Type[]    lowBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	72	None	add
933	[BUG]  [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]          if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]      return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	                if(!isAssignable(substituteTypeVariables(toBound,        typeVarAssigns),        type,        typeVarAssigns))        {        return        false;        }        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
934	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  typeVarAssigns)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {      [BUGGY]  tryOffsets(toBound,  toLowerBounds,  typeVarAssigns)  {  [BUGGY]      }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  typeVarAssigns)  {	  tryOffsets(toBound,    toLowerBounds,    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
