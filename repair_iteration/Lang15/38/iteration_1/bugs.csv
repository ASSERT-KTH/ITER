bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }		compilable	  [FE]  AssertionError  	76	2	add
2	[BUG]  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }		compilable	  [FE]  AssertionError  	76	2	add
3	[BUG]  [BUGGY]    Type[]  lowerBounds  =  toWildcardType.getRangeBounds();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    Type[]  lowerBounds  =  toWildcardType.getRangeBounds();  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    Type[]  lowerBounds  =  toWildcardType.getRangeBounds();		non-compiled	[CE]  cannot  find  symbol	76	None	add
4	[BUG]  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[])  [FE]        AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }		non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[])	76	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();		compilable	  [FE]  AssertionError  	76	2	add
6	[BUG]  [BUGGY]    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();		compilable	  [FE]  AssertionError  	76	2	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }		compilable	  [FE]  AssertionError  	76	2	add
8	[BUG]  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }		compilable	  [FE]  AssertionError  	76	2	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  return  true;  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return  true;	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
10	[BUG]  [BUGGY]  return  true;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  return  true;  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return  true;	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
12	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
14	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
15	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	return  false;  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	75	None	replace
16	[BUG]  [BUGGY]    if(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	76	None	add
17	[BUG]  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  false;  }		non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	76	None	add
18	[BUG]  [BUGGY]    if(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(toWildcardType!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }		non-compiled	[CE]  ')'  expected	76	None	add
19	[BUG]  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])  [FE]          AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }		non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])	76	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
21	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
22	[BUG]  [BUGGY]    if(toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	76	None	add
23	[BUG]  [BUGGY]    if(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	76	None	add
24	[BUG]  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {		non-compiled	[CE]  illegal  start  of  expression	76	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }		compilable	  [FE]  AssertionError  	76	2	add
26	[BUG]  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }		compilable	  [FE]  AssertionError  	76	2	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	return  false;  	compilable	  [FE]  AssertionError  	75	3	replace
28	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	return  false;  	compilable	  [FE]  AssertionError  	75	3	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
30	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	return  false;  	compilable	  [FE]  AssertionError  	75	2	replace
31	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	return  false;  	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
