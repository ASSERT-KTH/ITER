bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();	      Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	6	2	replace
2	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();	      Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	compilable	  [FE]  AssertionError  	6	2	replace
3	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeftBounds();	      Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
4	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
5	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	29	3	add
7	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	29	3	add
8	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
9	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
10	[BUG]  [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound  ==  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds);  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds);	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
15	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds)  {  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  toLowerBounds)  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
16	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds))  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  toLowerBounds))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
17	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  typeVarAssigns))  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  tryOffsets(toBound,  toLowerBounds,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	20	2	add
19	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	20	2	add
20	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	20	2	add
22	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	20	2	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	throw  new  IllegalArgumentException( " ");	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	compilable	  [FE]  AssertionError  	30	2	replace
24	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	throw  new  IllegalArgumentException( " ");	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	compilable	  [FE]  AssertionError  	30	2	replace
25	[BUG]  [BUGGY]  result[0]  =  toBound.getType();  [CE]  cannot  find  symbol  result  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  result[0]  =  toBound.getType();  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	result[0]  =  toBound.getType();	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
26	[BUG]  [BUGGY]  result[0]  =  toBound.getClass();  [CE]  cannot  find  symbol  result  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  result[0]  =  toBound.getClass();  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	result[0]  =  toBound.getClass();	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
27	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	2	None	replace
30	[BUG]  [BUGGY]  return  true;  return  false;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  return  false;  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    return  false;	  	non-compiled	[CE]  unreachable  statement	9	None	add
31	[BUG]  [BUGGY]  return  true;  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
32	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
33	[BUG]  [BUGGY]  return  true;  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
34	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	11	2	add
36	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	11	2	add
37	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
38	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	1	2	add
40	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	1	2	add
41	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
42	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  typeVarAssigneds  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigneds	1	None	add
43	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
44	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
45	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
46	[BUG]  [BUGGY]  parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
47	[BUG]  [BUGGY]  parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
48	[BUG]  [BUGGY]  parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
49	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
50	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
51	[BUG]  [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toWildcardType.isAssignable()  ||  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
52	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
53	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])	4	None	replace
54	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	13	2	add
57	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	13	2	add
58	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
59	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
60	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
61	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
62	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	31	None	replace
63	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    type),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	17	None	replace
64	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toWildcardType!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
69	[BUG]  [BUGGY]  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound  ==  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
70	[BUG]  [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
71	[BUG]  [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getLowerBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	5	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  	compilable	  [FE]  AssertionError  	5	2	add
73	[BUG]  [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowBounds  =  toWildcardType.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowBounds  =  toWildcardType.getLowerBounds();	  	compilable	  [FE]  AssertionError  	5	2	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();	  	compilable	  [FE]  AssertionError  	5	2	add
75	[BUG]  [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  upperBounds  =  toWildcardType.getLowerBounds();	  	compilable	  [FE]  AssertionError  	5	2	add
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	  	compilable	  [FE]  AssertionError  	5	2	add
77	[BUG]  [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowestBounds  =  toWildcardType.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowestBounds  =  toWildcardType.getLowerBounds();	  	compilable	  [FE]  AssertionError  	5	2	add
78	[BUG]  [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    Type[]  lowerBounds  =  toWildcardType.getUpperBounds();	  	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	5	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	25	2	add
80	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	25	2	add
81	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
82	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  If(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  If(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	25	None	add
83	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
84	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	27	3	add
86	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	27	3	add
87	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  	non-compiled	[CE]  ';'  expected	27	None	add
88	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()  ==  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  	non-compiled	[CE]  ';'  expected	27	None	add
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	7	2	add
90	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	7	2	add
91	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
92	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  If(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  If(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    If(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
93	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
94	[BUG]  [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
95	[BUG]  [BUGGY]  if(toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
96	[BUG]  [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Constructor  <?>  toWildcardType.isAssignableFrom(type))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
97	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Context.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
98	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [CE]  cannot  find  symbol  Context  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Context.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Context	14	None	replace
99	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	tryOffsets(toBound,  toLowerBounds,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
100	[BUG]  [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Context.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
101	[BUG]  [BUGGY]  Type[]  lowBounds  =  toWildcardType.getRangeBounds();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowBounds  =  toWildcardType.getRangeBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowBounds  =  toWildcardType.getRangeBounds();	      Type[]    lowerBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
102	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getRangeBounds();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getRangeBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType,  toLowerBounds.getRangeBounds();	      Type[]    lowerBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  ';'  expected	3	None	replace
103	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(),  toLowerBounds;	      Type[]    lowerBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
104	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type[])  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type[])	19	None	replace
105	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])	19	None	replace
106	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toUpperBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
107	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
108	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
109	[BUG]  [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
110	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
111	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
112	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
113	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
114	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
115	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds))  {  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  ')'  expected	24	None	replace
116	[BUG]  [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
117	[BUG]  [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
118	[BUG]  [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toLowerBounds))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
119	[BUG]  [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  type,  toWildcardType))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
120	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  replacementTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
121	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(toBound,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(toBound,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
122	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
124	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
125	[BUG]  [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
126	[BUG]  [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound!=  null)  {  if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
127	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toUpperBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	19	None	replace
128	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds();	      Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
129	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds();  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeadingBounds();	      Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
130	[BUG]  [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
131	[BUG]  [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
132	[BUG]  [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Context.checkState(toBound!=  toWildcardType.isAssignableFrom(type)||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
133	[BUG]  [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
134	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
135	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(type,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
136	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
137	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(type,  toLowerBounds),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toLowerBounds),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns));	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>)	12	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
142	[BUG]  [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
143	[BUG]  [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
144	[BUG]  [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
145	[BUG]  [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.isAssignable())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
146	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }	  	compilable	  [FE]  AssertionError  	27	3	add
148	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  }	  	compilable	  [FE]  AssertionError  	27	3	add
149	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	27	None	add
150	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
151	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  null))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
152	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,<null>)  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,<null>)	26	None	replace
153	[BUG]  [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
154	[BUG]  [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
155	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false	  	non-compiled	[CE]  ';'  expected	29	None	add
156	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true	  	non-compiled	[CE]  ';'  expected	29	None	add
157	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	8	2	replace
159	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	8	2	replace
160	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(type,  toWildcardType),  toWildcardType))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
162	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substitutionTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
163	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    type),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	17	None	replace
164	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    if(!isAssignable(type,  replaceTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
165	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	15	None	replace
166	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type[])  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  toWildcardType,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type[])	4	None	replace
167	[BUG]  [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
168	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
169	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
170	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
171	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
172	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type),  toWildcardType,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    type),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	17	None	replace
173	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  type,  typeVarAssigns))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    type),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
174	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
175	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
176	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  true;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
177	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
178	[BUG]  [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType)  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType)	8	None	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	add	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	13	2	add
180	[BUG]  [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(toBound,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    if(!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	13	2	add
181	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
182	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  typeVarAssigned  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigned	1	None	add
183	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
184	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
185	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(type,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
186	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleMissingName(type,  toBound,  typeVarAssigns);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingName(type,  toBound,  typeVarAssigns);	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	18	None	replace
187	[BUG]  [BUGGY]  aughtExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleAssignment(toBound,  toWildcardType,  typeVarAssigns);	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	18	None	replace
188	[BUG]  [BUGGY]  aughtExceptionHandler.handleAssignment(toBound,  type,  toLowerBounds);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleAssignment(toBound,  type,  toLowerBounds);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleAssignment(toBound,  type,  toLowerBounds);	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	18	None	replace
189	[BUG]  [BUGGY]  aughtExceptionHandler.handleAssignment(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleAssignment(toBound,  toLowerBounds);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleAssignment(toBound,  toLowerBounds);	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	18	None	replace
190	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getRangeBounds(type);	      Type[]    lowerBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
191	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
192	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
193	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this))  {  return  false;  }	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
194	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	      if(toWildcardType.isAssignableFrom(type))    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
195	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  toBound,  typeVarAssigns);  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingClass(type,  toBound,  typeVarAssigns);	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	30	None	replace
196	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(toBound,  type,  toLowerBounds);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleMissingClass(toBound,  type,  toLowerBounds);  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingClass(toBound,  type,  toLowerBounds);	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	30	None	replace
197	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingException( " ");	  return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	30	None	replace
198	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  toUpperBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toUpperBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])	19	None	replace
199	[BUG]  [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  <!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toWildcardType))  {  return  false;  }	      if(toWildcardType.isAssignable())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
200	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingDependency(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleMissingDependency(toBound,  toLowerBounds);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingDependency(toBound,  toLowerBounds);	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	16	None	replace
201	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingDependency(toBound,  toWildcardType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  aughtExceptionHandler.handleMissingDependency(toBound,  toWildcardType);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	aughtExceptionHandler.handleMissingDependency(toBound,  toWildcardType);	      if(toWildcardType!=    null)    {    if    (!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	16	None	replace
202	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[])  [FE]            AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toUpperBounds))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[])	4	None	replace
203	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  ||!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
204	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
205	[BUG]  [BUGGY]  parent!=  null  &&!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent!=  null  &&!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent!=  null  &&!isAssignable(parent,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(toBound,    substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
206	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
207	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  type,  null))  {  return  false;  }  [CE]  cannot  find  symbol  typeVarAssigned  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  type,  null))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigned	25	None	add
208	[BUG]  [BUGGY]  return  true;  if(isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  if(isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    if(isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
209	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	9	None	add
210	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound);  [CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound);  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(toBound);	      Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  method  getLowerBounds  in  interface  WildcardType  cannot  be  applied  to  given  types;	6	None	replace
211	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
212	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  null))  {  return  false;  }	      if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    null))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
213	[BUG]  [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	if(!isAssignable(type,  substitututeTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
214	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
215	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  toWildcardType))  {  return  false;  }  [CE]  cannot  find  symbol  typeVarAssigned  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  toWildcardType))  {  return  false;  }  [BUGGY]    return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    toWildcardType))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigned),  toWildcardType))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigned	7	None	add
216	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
217	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    true;    }    if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
218	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  typeVarAssigns)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
219	[BUG]  [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {    if  (!isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  typeVarAssigns))  {    [BUGGY]  return  true;  }  else  if(toBound.getClass()!=  typeVarAssigns.getClass())  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	399	399	2	replace	return    true;    }    else    if(toBound.getClass()!=    typeVarAssigns.getClass())    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(toBound.getClass()!=  toBound)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
