bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]    AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	45	None	replace
2	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
3	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns);  [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns);	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	45	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	add	  	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	45	2	replace
5	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	  	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	45	2	replace
6	[BUG]  [BUGGY]    Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
7	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
8	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =(GenericArrayType)type;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    GenericArrayType  toGenericArrayType  =(GenericArrayType)type;  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    GenericArrayType  toGenericArrayType  =(GenericArrayType)type;		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
9	[BUG]  [BUGGY]    Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
10	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
11	[BUG]  [BUGGY]    Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
12	[BUG]  [BUGGY]    Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType();  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
13	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	45	None	replace
14	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>)  [FE]    AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>)	45	None	replace
15	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this);  [BUGGY]  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this);	return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),    toComponentType,  typeVarAssigns);  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	45	None	replace
16	[BUG]  [BUGGY]    Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type);  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type);		non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
17	[BUG]  [BUGGY]    Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {    [BUGGY]    Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type);  [BUGGY]  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	    Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type);		non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	46	None	add
