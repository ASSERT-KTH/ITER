bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toBoundType  =  toBound.getType();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type  toBoundType  =  toBound.getType();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type  toBoundType  =  toBound.getType();	      Type    wildcardType    =    toBound.getType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
2	[BUG]  [BUGGY]  Type  toBound  =  toBound.getType();  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type  toBound  =  toBound.getType();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type  toBound  =  toBound.getType();	      Type    wildcardType    =    toBound.getType();    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	16	None	replace
3	[BUG]  [BUGGY]  Type  toWildcardType  =  toBound.getType();  [CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type  toWildcardType  =  toBound.getType();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type  toWildcardType  =  toBound.getType();	      Type    wildcardType    =    toBound.getType();    	non-compiled	[CE]  variable  toWildcardType  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	16	None	replace
4	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getBaseTypes();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getBaseTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound,  toLowerBounds.getBaseTypes();	      Type[]    lowerBounds    =    toBound.getBaseTypes();    	non-compiled	[CE]  ';'  expected	13	None	replace
5	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getBaseTypes();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getBaseTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound,  toUpperBounds.getBaseTypes();	      Type[]    lowerBounds    =    toBound.getBaseTypes();    	non-compiled	[CE]  ';'  expected	13	None	replace
6	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getBaseTypes();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  toBounds  =  toBound.getBaseTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  toBounds  =  toBound.getBaseTypes();	      Type[]    lowerBounds    =    toBound.getBaseTypes();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
7	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getRawTypes();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getRawTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound,  toLowerBounds.getRawTypes();	      Type[]    lowerBounds    =    toBound.getRawTypes();    	non-compiled	[CE]  ';'  expected	12	None	replace
8	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getRawTypes();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  toBounds  =  toBound.getRawTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  toBounds  =  toBound.getRawTypes();	      Type[]    lowerBounds    =    toBound.getRawTypes();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
9	[BUG]  [BUGGY]  Type[]  lowBounds  =  toBound.getRawTypes();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowBounds  =  toBound.getRawTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowBounds  =  toBound.getRawTypes();	      Type[]    lowerBounds    =    toBound.getRawTypes();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
10	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getLowerBounds();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getLowerBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound,  toUpperBounds.getLowerBounds();	      Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  ';'  expected	18	None	replace
11	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();	      Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
12	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds();	      Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
13	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns);	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
14	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBounds);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBounds);	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
15	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  typeVarAssigns),  type,  toBound);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  typeVarAssigns),  type,  toBound);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  typeVarAssigns),  type,  toBound);	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	23	None	replace
16	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getWidths();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  toBounds  =  toBound.getWidths();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  toBounds  =  toBound.getWidths();	      Type[]    lowerBounds    =    toBound.getWidths();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getWidths(),  toLowerBounds;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getWidths(),  toLowerBounds;  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getWidths(),  toLowerBounds;	      Type[]    lowerBounds    =    toBound.getWidths();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  Type[]  lowBounds  =  toBound.getWidths();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowBounds  =  toBound.getWidths();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowBounds  =  toBound.getWidths();	      Type[]    lowerBounds    =    toBound.getWidths();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
19	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
22	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
23	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  wildcardType  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  wildcardType),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  wildcardType	14	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	add	if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	14	2	replace
25	[BUG]  [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(type,  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	compilable	  [FE]  AssertionError  	14	2	replace
26	[BUG]  [BUGGY]  if(!isAssignable(typeVarAssigns,  toWildcardType),  type,  substituteTypeVariables))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(typeVarAssigns,  toWildcardType),  type,  substituteTypeVariables))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(typeVarAssigns,  toWildcardType),  type,  substituteTypeVariables))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	add	if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	3	2	add
28	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	3	2	add
29	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignedable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
30	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  typeVarAssigneds  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigneds),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigneds	3	None	add
31	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getRangeBounds();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getRangeBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound,  toLowerBounds.getRangeBounds();	      Type[]    lowerBounds    =    toBound.getRangeBounds();    	non-compiled	[CE]  ';'  expected	9	None	replace
32	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getRangeBounds();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound,  toUpperBounds.getRangeBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound,  toUpperBounds.getRangeBounds();	      Type[]    lowerBounds    =    toBound.getRangeBounds();    	non-compiled	[CE]  ';'  expected	9	None	replace
33	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getRangeBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  toBounds  =  toBound.getRangeBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  toBounds  =  toBound.getRangeBounds();	      Type[]    lowerBounds    =    toBound.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	add	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  return    true;    	compilable	  [FE]  AssertionError  	2	2	replace
35	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  return    true;    	compilable	  [FE]  AssertionError  	2	2	replace
36	[BUG]  [BUGGY]  return  true;  return  true;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  return  true;  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    return  true;	  	non-compiled	[CE]  unreachable  statement	1	None	add
37	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
38	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
39	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
40	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  true;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	1	None	add
41	[BUG]  [BUGGY]  return  toBound.isAssignable()?  true  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  true  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  true  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns));    	non-compiled	[CE]  ';'  expected	22	None	replace
42	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(type,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns));    	non-compiled	[CE]  ';'  expected	22	None	replace
43	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds));  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns));    	non-compiled	[CE]  ';'  expected	22	None	replace
44	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  type,  typeVarAssigns));  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  type,  typeVarAssigns));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  type,  typeVarAssigns));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
45	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  type,  substituteTypeVariables));  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  type,  substituteTypeVariables));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  type,  substituteTypeVariables));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns));    	non-compiled	[CE]  ';'  expected	24	None	replace
46	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(type,  toBound,  typeVarAssigns));  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(type,  toBound,  typeVarAssigns));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(type,  toBound,  typeVarAssigns));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
47	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	5	None	replace
48	[BUG]  [BUGGY]  if(!isAssignable(typeVarAssigns,  toLowerBounds),  type,  substituteTypeVariables))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(typeVarAssigns,  toLowerBounds),  type,  substituteTypeVariables))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(typeVarAssigns,  toLowerBounds),  type,  substituteTypeVariables))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
49	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toUpperBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	5	None	replace
50	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	6	None	replace
51	[BUG]  [BUGGY]  if(!isAssignable(type,  typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>,Type,Type[])  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(type,  typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>,Type,Type[])	6	None	replace
52	[BUG]  [BUGGY]  if(!isAssignable(type,  typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>,Type,Type,Type[])  [FE]                  AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(type,  typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Map<TypeVariable<?>,Type>,Type,Type,Type[])	6	None	replace
53	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	6	None	replace
54	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false;  }	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
55	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
56	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
57	[BUG]  [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  toLowerBounds);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	typeVarAssigns.put(toBound,  toWildcardType,  toLowerBounds);	      typeVarAssigns.put(toBound,    toWildcardType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	replace
58	[BUG]  [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  wildcardType);  [CE]  cannot  find  symbol  wildcardType  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  wildcardType);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	typeVarAssigns.put(toBound,  toWildcardType,  wildcardType);	      typeVarAssigns.put(toBound,    toWildcardType);    	non-compiled	[CE]  cannot  find  symbol  wildcardType	10	None	replace
59	[BUG]  [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  toUpperBounds);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  toUpperBounds);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	typeVarAssigns.put(toBound,  toWildcardType,  toUpperBounds);	      typeVarAssigns.put(toBound,    toWildcardType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	replace
60	[BUG]  [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  this);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	typeVarAssigns.put(toBound,  toWildcardType,  this);	      typeVarAssigns.put(toBound,    toWildcardType);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	10	None	replace
61	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    bound))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
62	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  false;  }  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  false;  }	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    bound))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
63	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  false  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  false  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound))  {  return  false	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    bound))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
64	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getTypes();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound,  toLowerBounds.getTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound,  toLowerBounds.getTypes();	      Type[]    lowerBounds    =    toBound.getTypes();    	non-compiled	[CE]  ';'  expected	15	None	replace
65	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toArray();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.toArray();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.toArray();	      Type[]    lowerBounds    =    toBound.getTypes();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
66	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getTypes();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  toBounds  =  toBound.getTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  toBounds  =  toBound.getTypes();	      Type[]    lowerBounds    =    toBound.getTypes();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	add	        if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	7	2	add
68	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	7	2	add
69	[BUG]  [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  toWildcard),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toWildcard  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]      if(!isAssignable(substituteTypeVariables(toBound,  toWildcard),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	        if(!isAssignable(substituteTypeVariables(toBound,  toWildcard),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  toWildcard	7	None	add
70	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds);	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
71	[BUG]  [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds,  toLowerBounds);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Constructor  <?>  toBound  =  Constructor.createConstructor(toBound,  toLowerBounds,  toLowerBounds);	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
72	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds,  toUpperBounds))  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds,  toUpperBounds))  {  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	tryOffsets(toBound,  toLowerBounds,  toLowerBounds,  toUpperBounds))  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
73	[BUG]  [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  tryOffsets(toBound,  toLowerBounds,  toLowerBounds)  {  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	tryOffsets(toBound,  toLowerBounds,  toLowerBounds)  {	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
74	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  type  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  type  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  type	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
75	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  type  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  type  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  type	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
76	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  typeVar  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  typeVar  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  typeVar	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
77	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    	non-compiled	[CE]  ')'  expected	17	None	replace
79	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substitute  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substitute  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substitute	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    	non-compiled	[CE]  ')'  expected	17	None	replace
80	[BUG]  [BUGGY]  Type[]  lowBounds  =  toBound.getLowerBounds();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowBounds  =  toBound.getLowerBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowBounds  =  toBound.getLowerBounds();	      Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
81	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getLowerBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  toBounds  =  toBound.getLowerBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  toBounds  =  toBound.getLowerBounds();	      Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
82	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toUpperBounds),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toLowerBounds),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	5	None	replace
83	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTree();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTree();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.cloneTree();	      Type[]    lowerBounds    =    toBound.getRawTypes();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Preconditions.checkState(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
87	[BUG]  [BUGGY]  Type[]  lowBounds  =  toBound.getTypes();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowBounds  =  toBound.getTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowBounds  =  toBound.getTypes();	      Type[]    lowerBounds    =    toBound.getTypes();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
88	[BUG]  [BUGGY]  Type  boundType  =  toBound.getType();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type  boundType  =  toBound.getType();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type  boundType  =  toBound.getType();	      Type    wildcardType    =    toBound.getType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
89	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  wildcardType))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  wildcardType))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType),  type,  wildcardType))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	14	None	replace
90	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	14	None	replace
91	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typesVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  typesVarAssigns  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssignable(substituteTypeVariables(toBound,  typesVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssignable(substituteTypeVariables(toBound,  typesVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  typesVarAssigns	3	None	add
92	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound);	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
93	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds);	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
94	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVariables(toBound,  typeVarAssigns),  type,  toBound);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVariables(toBound,  typeVarAssigns),  type,  toBound);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVariables(toBound,  typeVarAssigns),  type,  toBound);	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
95	[BUG]  [BUGGY]  if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
96	[BUG]  [BUGGY]      if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]      if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	        if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	7	None	add
97	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  false	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
98	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  type,  typeVarAssigns))  {  return	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
99	[BUG]  [BUGGY]  return  true;  if(typeVarAssigns!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(typeVarAssigns!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(typeVarAssigns!=  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
100	[BUG]  [BUGGY]  return  true;  if(typeVarAssigns  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(typeVarAssigns  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(typeVarAssigns  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
101	[BUG]  [BUGGY]  return  true;  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(toBound  ==  null)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
102	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
103	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
104	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getHeights();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getHeights();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getHeights();	      Type[]    lowerBounds    =    toBound.getWidths();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
105	[BUG]  [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  type);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  typeVarAssigns.put(toBound,  toWildcardType,  type);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	typeVarAssigns.put(toBound,  toWildcardType,  type);	      typeVarAssigns.put(toBound,    toWildcardType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	replace
106	[BUG]  [BUGGY]  typeVarAssigns.put(toBound,  toLowerBounds);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  typeVarAssigns.put(toBound,  toLowerBounds);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	typeVarAssigns.put(toBound,  toLowerBounds);	      typeVarAssigns.put(toBound,    toWildcardType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	replace
107	[BUG]  [BUGGY]  typeVarAssigns.put(type,  toBound);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  typeVarAssigns.put(type,  toBound);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	typeVarAssigns.put(type,  toBound);	      typeVarAssigns.put(toBound,    toWildcardType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	replace
108	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVariables(toBound,  type,  typeVarAssigns));  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVariables(toBound,  type,  typeVarAssigns));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVariables(toBound,  type,  typeVarAssigns));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    type,    typeVarAssigns));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
109	[BUG]  [BUGGY]  Type[]  lowBounds  =  toBound.getRangeBounds();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowBounds  =  toBound.getRangeBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowBounds  =  toBound.getRangeBounds();	      Type[]    lowerBounds    =    toBound.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
110	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound));  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(typeVarAssigns,  substituteTypeVariables(toBound,  typeVarAssigns),  type,  toBound));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns));    	non-compiled	[CE]  ';'  expected	22	None	replace
111	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  wildcardType));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  wildcardType));  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  wildcardType));	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns));    	non-compiled	[CE]  ';'  expected	22	None	replace
112	[BUG]  [BUGGY]  Type[]  lowBounds  =  toBound.getBaseTypes();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowBounds  =  toBound.getBaseTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowBounds  =  toBound.getBaseTypes();	      Type[]    lowerBounds    =    toBound.getBaseTypes();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
113	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toLowerBounds))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toLowerBounds),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	6	None	replace
114	[BUG]  [BUGGY]  if(!isAssignable(type,  toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(type,  toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(type,  toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
115	[BUG]  [BUGGY]  if(!isAssignable(typeVarAssigns,  toBound),  type,  toLowerBounds))  {  return  false;  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(typeVarAssigns,  toBound),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(typeVarAssigns,  toBound),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
116	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns)))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns)))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type,  typeVarAssigns)))  {  return  false;  }	  return    true;    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	2	None	replace
117	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  false;  }	  return    true;    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	2	None	replace
118	[BUG]  [BUGGY]  if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
119	[BUG]  [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this);  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return  toBound.isAssignable()?  false  :  toBound.isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  this);	  return    toBound.isAssignable()?    false    :    toBound.isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
120	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
121	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
122	[BUG]  [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	parent  ==  null  ||!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
123	[BUG]  [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	parent  ==  null  &&!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  toLowerBounds))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
124	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toWildths();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.toWildths();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.toWildths();	      Type[]    lowerBounds    =    toBound.getWidths();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
125	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toWidths();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.toWidths();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.toWidths();	      Type[]    lowerBounds    =    toBound.getWidths();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
126	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toBound.size()  ]);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toBound.size()  ]);  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.toArray(new  Type[toBound.size()  ]);	      Type[]    lowerBounds    =    toBound.getRawTypes();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
127	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLeftBounds();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getLeftBounds();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getLeftBounds();	      Type[]    lowerBounds    =    toBound.getRangeBounds();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
128	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  bound	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    bound))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
129	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toBaseTypes();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.toBaseTypes();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.toBaseTypes();	      Type[]    lowerBounds    =    toBound.getBaseTypes();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
130	[BUG]  [BUGGY]      if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  continue  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]      if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  continue  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	        if(typeVarAssigns.contains(toBound))  {  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  continue  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
131	[BUG]  [BUGGY]  return  true;  return  false;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  return  false;  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    return  false;	  	non-compiled	[CE]  unreachable  statement	1	None	add
132	[BUG]  [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  true;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  return  true;  if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  true;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	return    true;    if(!isAssignable(substituteTypeVariables(toBound,  type),  type,  typeVarAssigns))  {  return  true;  }	  	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	1	None	add
133	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  typeVarA  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  typeVarA  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();  for(Type  bound  :  toBounds)  {  if(!isAssignable(substituteTypeVariables(bound,  typeVarAssigns),  type,  typeVarA	      Type[]    lowerBounds    =    toBound.getLowerBounds();    for(Type    bound    :    toBounds)    {    if(!isAssignable(substituteTypeVariables(bound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
134	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    typeVarAssigns))    {    return    false;    }    if(!isAssigned(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	add	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	compilable	  [FE]  AssertionError  	6	2	replace
136	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  toWildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    typeVarAssigns),    type,    toLowerBounds))    {    return    false;    }    	compilable	  [FE]  AssertionError  	6	2	replace
137	[BUG]  [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  wildcardType,  typeVarAssigns))  {  return  false;  }  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  wildcardType,  typeVarAssigns))  {  return  false;  }  [BUGGY]    }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	if(!isAssignable(substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns),  wildcardType,  typeVarAssigns))  {  return  false;  }	  if(!isAssignable(substituteTypeVariables(toBound,    toWildcardType),    type,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	14	None	replace
138	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.types();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    typeVarAssigns))  {  return  false;  }  }  for  (Type  toBound  :  toLowerBounds)  {    if  (!isAssignable(substituteTypeVariables(toBound,  typeVarAssigns),  type,  typeVarAssigns))  {    [BUGGY]  Type[]  lowerBounds  =  toBound.types();  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	408	408	2	replace	Type[]  lowerBounds  =  toBound.types();	      Type[]    lowerBounds    =    toBound.getTypes();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
