bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	3	None	replace
2	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bounds	3	None	replace
3	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound.isArray());  [CE]  cannot  find  symbol  bound  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound.isArray());  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound.isArray());	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	3	None	replace
4	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
5	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray());  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)	15	None	replace
6	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray());  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isArray());  [CE]  <null>  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isArray());  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	15	None	replace
8	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	add	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	9	5	replace
9	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	9	5	replace
10	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass;  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	9	None	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	add	Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	9	5	replace
12	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [FE]  IllegalStateException  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	9	5	replace
13	[BUG]  [BUGGY]      return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
14	[BUG]  [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
15	[BUG]  [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
16	[BUG]  [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
17	[BUG]  [BUGGY]      return  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]            IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      return  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        return  getTypeArguments(type,  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	4	None	add
18	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass);  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass);	      Type    bound    =    getTypeArguments((    ParameterizedType)type);    	non-compiled	[CE]  incompatible  types	14	None	replace
19	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(  ParameterizedType)type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments(type,(  ParameterizedType)type);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,(  ParameterizedType)type);	      Type    bound    =    getTypeArguments((    ParameterizedType)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)	14	None	replace
20	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  type.getRawClass();	      Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  ';'  expected	7	None	replace
21	[BUG]  [BUGGY]  Class  <?>  bound  =  fromClass.getRawClass();  [CE]  cannot  find  symbol  fromClass  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Class  <?>  bound  =  fromClass.getRawClass();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  fromClass.getRawClass();	      Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  fromClass	7	None	replace
22	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  null;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  null;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  null;	      Type    bound    =((    ParameterizedType)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
23	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass;	      Type    bound    =((    ParameterizedType)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
24	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getbound(),  toClass);	      Type    bound    =((    ParameterizedType)type).getbound();    	non-compiled	[CE]  ';'  expected	16	None	replace
25	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass;	      Type    bound    =((    ParameterizedType)type).getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
26	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass;	      Type    bound    =((    ParameterizedType)type).getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
27	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  null;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  null;	      Type    bound    =((    ParameterizedType)type).getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
28	[BUG]  [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	8	None	add
29	[BUG]  [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	8	None	add
30	[BUG]  [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass);	  	non-compiled	[CE]  ';'  expected	8	None	add
31	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;	      Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
32	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).getBounds();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bounds  =((  ParameterizedType)type).getBounds();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).getBounds();	      Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
33	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass;  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getBounds(),  toClass;	      Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
34	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)	12	None	replace
35	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>)	12	None	replace
36	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  false);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  false);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  false);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)	12	None	replace
37	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)	1	None	replace
38	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>)	1	None	replace
39	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)	1	None	replace
40	[BUG]  [BUGGY]  Type  bound  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  type.getRawType();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
41	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  ';'  expected	6	None	replace
42	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getRawType();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass,  type.getRawType();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass,  type.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  ';'  expected	6	None	replace
43	[BUG]  [BUGGY]  Class  <?>  bound  =  this.bounds.getRawClass();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Class  <?>  bound  =  this.bounds.getRawClass();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  this.bounds.getRawClass();	      Class    <?>    bound    =    type.getRawClass();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	11	None	replace
44	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).getbounds();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bounds  =((  ParameterizedType)type).getbounds();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).getbounds();	      Type    bound    =((    ParameterizedType)type).getbounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
45	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  null;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  null;	      Type    bound    =((    ParameterizedType)type).getbounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
46	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass;  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass;	      Type    bound    =((    ParameterizedType)type).getbounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
47	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)	13	None	replace
48	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
49	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  incompatible  types	13	None	replace
50	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  this);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  this);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	2	None	replace
51	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target.isArray());  [CE]  cannot  find  symbol  target  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target.isArray());  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  cannot  find  symbol  target	15	None	replace
52	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
53	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
54	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type;	      Type    bound    =((    ParameterizedType)type).getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
55	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  0);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,int)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  0);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  0);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,int)	12	None	replace
56	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target);  [CE]  cannot  find  symbol  target  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  cannot  find  symbol  target	1	None	replace
57	[BUG]  [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns.getRawClass();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  subtypeVarAssigns.getRawClass();	      Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
58	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bound;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bound;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bound;	      Type    bound    =((    ParameterizedType)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
59	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bounds;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bounds;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bounds;	      Type    bound    =((    ParameterizedType)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
60	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  subtypeVarAssigns);	      Type    bound    =    getTypeArguments((    ParameterizedType)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Map<TypeVariable<?>,Type>)	14	None	replace
61	[BUG]  [BUGGY]  Type  bound  =  this.toClass.getRawType();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  this.toClass.getRawType();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  this.toClass.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	replace
62	[BUG]  [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  toClass;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	8	None	add
63	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  bounds;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  bounds;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  bounds;	      Type    bound    =((    ParameterizedType)type).getbounds();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
64	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass;	      Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
65	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds;  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds;	      Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
66	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
67	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	add	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	9	5	replace
68	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [FE]  IllegalStateException  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	9	5	replace
69	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass();	      Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  ';'  expected	7	None	replace
70	[BUG]  [BUGGY]  if(toClass.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  if(toClass.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	if(toClass.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
71	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);	      Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)	12	None	replace
72	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType());  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType());  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType());	      Type    bound    =    getTypeArguments((    ParameterizedType)type);    	non-compiled	[CE]  incompatible  types	14	None	replace
73	[BUG]  [BUGGY]  Type  bound  =  getParameterizedType((  ParameterizedType)type);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  getParameterizedType((  ParameterizedType)type);  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getParameterizedType((  ParameterizedType)type);	      Type    bound    =    getTypeArguments((    ParameterizedType)type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
74	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class.isArray());  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)	15	None	replace
75	[BUG]  [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]      return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	        return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
76	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  type;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  type;  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  type;	      Type    bound    =((    ParameterizedType)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
77	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
78	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();  [BUGGY]    return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
79	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {    [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]    }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
