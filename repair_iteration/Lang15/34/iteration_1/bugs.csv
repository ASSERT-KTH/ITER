bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Type  lowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
2	[BUG]  [BUGGY]    Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	add	    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);		compilable	  [FE]  AssertionError  	68	2	add
4	[BUG]  [BUGGY]    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);		compilable	  [FE]  AssertionError  	68	2	add
5	[BUG]  [BUGGY]    Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
6	[BUG]  [BUGGY]    Type[]  lowerBounds  =  toLowerBounds.cloneTree();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type[]  lowerBounds  =  toLowerBounds.cloneTree();  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type[]  lowerBounds  =  toLowerBounds.cloneTree();		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
7	[BUG]  [BUGGY]  for  (Type  bound  :  toBounds)  {  [CE]  cannot  find  symbol  toBounds  [FE]    AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]  for  (Type  bound  :  toBounds)  {  [BUGGY]  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBounds)  {	for  (Type  bound  :  lowerBounds)  {  	non-compiled	[CE]  cannot  find  symbol  toBounds	67	None	replace
8	[BUG]  [BUGGY]  for  (Type  bound  :  toBound)  {  [CE]  for-each  not  applicable  to  expression  type  [FE]      AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]  for  (Type  bound  :  toBound)  {  [BUGGY]  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBound)  {	for  (Type  bound  :  lowerBounds)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	67	None	replace
9	[BUG]  [BUGGY]    Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
10	[BUG]  [BUGGY]    Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds);		non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	68	None	add
11	[BUG]  [BUGGY]    Type  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
12	[BUG]  [BUGGY]    Type  lowerBounds  =  toBound.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBounds  =  toBound.getLowerBounds();  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBounds  =  toBound.getLowerBounds();		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
13	[BUG]  [BUGGY]    Type  lowerBounds  =  toLowerBounds.get(typeVarAssigns);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBounds  =  toLowerBounds.get(typeVarAssigns);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBounds  =  toLowerBounds.get(typeVarAssigns);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
14	[BUG]  [BUGGY]    Type[]  lowerBounds  =  toBound.getLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type[]  lowerBounds  =  toBound.getLowerBounds();  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type[]  lowerBounds  =  toBound.getLowerBounds();		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
15	[BUG]  [BUGGY]    Type  lowerBounds  =  toBound.subtract(typeVarAssigns);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBounds  =  toBound.subtract(typeVarAssigns);  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBounds  =  toBound.subtract(typeVarAssigns);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
16	[BUG]  [BUGGY]    Type  lowerBounds  =  toBound.getRawClass();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]    Type  lowerBounds  =  toBound.getRawClass();  [BUGGY]  for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	    Type  lowerBounds  =  toBound.getRawClass();		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]  for(Type  bound  :  toLowerBounds)  {  [BUGGY]  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	add	for(Type  bound  :  toLowerBounds)  {	for  (Type  bound  :  lowerBounds)  {  	compilable	  [FE]  AssertionError  	67	2	replace
18	[BUG]  [BUGGY]  for(Type  bound  :  toLowerBounds)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);      [BUGGY]  for(Type  bound  :  toLowerBounds)  {  [BUGGY]  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toLowerBounds)  {	for  (Type  bound  :  lowerBounds)  {  	compilable	  [FE]  AssertionError  	67	2	replace
