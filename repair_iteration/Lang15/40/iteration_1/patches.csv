bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.keySet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  if  (cls.isPrimitive())  {  if  (cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (cls.isPrimitive())  {  if  (cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (cls.isPrimitive())    {    if  (cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
3	[BUG]  [BUGGY]  if  (cls.isPrimitive())  {  If  (cls.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (cls.isPrimitive())  {  If  (cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (cls.isPrimitive())    {    If  (cls.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	3	None	add
4	[BUG]  [BUGGY]  if  (cls.isPrimitive())  {  if  (Cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (cls.isPrimitive())  {  if  (Cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (cls.isPrimitive())    {    if  (Cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
5	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  subtypeVarAssigns.get(cls);	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns();  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  cls.getTypeVarAssigns();	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  toClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,  toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
9	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,  toClass))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
10	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignedable(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignedable(cls,  toClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssignedable(cls,  toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
11	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  ToClass))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  ToClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,  ToClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
12	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isPrimitive(cls,  toClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
13	[BUG]  [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)	18	None	replace
14	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(toClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(toClass))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	18	None	replace
15	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(cls))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
16	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  typeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  typeVarAssigns.get(cls);  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  typeVarAssigns.get(cls);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls);	      Class    <?>    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);	      Class    <?>    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getName());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getName());  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls.getName());	      Class    <?>    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!cls.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	6	2	replace
21	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	6	2	replace
22	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	6	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isAssignableFrom(cls))  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	6	2	replace
24	[BUG]  [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isAssignableFrom(cls))  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	6	2	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	6	2	replace
26	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	6	2	replace
27	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
28	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
29	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (ToClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (ToClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if  (ToClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
30	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  if(!toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isPrimitive())  {  if(!toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive())    {    if(!toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
31	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  If(!toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isPrimitive())  {  If(!toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive())    {    If(!toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	5	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(cls.isArray())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(cls.isArray())  {	  if(toClass.isArray())    {    	compilable	  [FE]  AssertionError  	20	2	replace
33	[BUG]  [BUGGY]  if(cls.isArray())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(cls.isArray())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())  {	  if(toClass.isArray())    {    	compilable	  [FE]  AssertionError  	20	2	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(toClass.isArray()  ||  toClass.isPrimitive())  {	  if(toClass.isArray())    {    	compilable	  [FE]  AssertionError  	20	2	replace
35	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()  ||  toClass.isPrimitive())  {	  if(toClass.isArray())    {    	compilable	  [FE]  AssertionError  	20	2	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isArray())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isArray())  {	  if(toClass.isArray())    {    	compilable	  [FE]  AssertionError  	20	2	replace
37	[BUG]  [BUGGY]  if(!toClass.isArray())  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isArray())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())  {	  if(toClass.isArray())    {    	compilable	  [FE]  AssertionError  	20	2	replace
38	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSuperclass();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSuperclass();  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getSuperclass();	      Class    <?>    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSuperclass();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSuperclass();  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.getSuperclass();	      Class    <?>    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns);	      Class    <?>    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
42	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
43	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
44	[BUG]  [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    if(toClass.isArray())  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
45	[BUG]  [BUGGY]  if(toClass.isArray())  {  If(toClass.isArray())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  If(toClass.isArray())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    If(toClass.isArray())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
46	[BUG]  [BUGGY]  if(toClass.isArray())  {  if(ToClass.isArray())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  if(ToClass.isArray())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    if(ToClass.isArray())  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
47	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.name);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.name);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.name);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  toClass);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  toClass);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName());  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName());  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName());	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName());  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName());	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getRawClass();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getRawClass();  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getRawClass();	      Class    <?>    toClass    =    cls.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getRawClass();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getRawClass();  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.getRawClass();	      Class    <?>    toClass    =    cls.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {	  if    (cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
54	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {	  if    (cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
55	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns);	      Class    <?>    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
57	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getType());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getType());  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getType());	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
58	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName());  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName());	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
59	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssigned(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssigned(cls,  toClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssigned(cls,  toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
60	[BUG]  [BUGGY]  if(toClass.isArray())  {  if(toClass.isObject())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  if(toClass.isObject())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    if(toClass.isObject())  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
61	[BUG]  [BUGGY]  if(!isPrimitive(cls))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isPrimitive(cls))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
62	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!typeVarAssigns.contains(cls))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	18	None	replace
63	[BUG]  [BUGGY]  TypeVariable  <?>  toClass  =  cls.getSuperclass();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  TypeVariable  <?>  toClass  =  cls.getSuperclass();  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	TypeVariable  <?>  toClass  =  cls.getSuperclass();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  Collections.sort(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Collections.sort(typeVarAssigns);  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Collections.sort(typeVarAssigns);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getRawClass(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  cls.getRawClass(typeVarAssigns);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getRawClass(typeVarAssigns);	      Class    <?>    toClass    =    cls.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
66	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  if(! "toClass.isPrimitive())  {  [CE]  unclosed  string  literal  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!toClass.isPrimitive())  {  if(! "toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive())    {    if(! "toClass.isPrimitive())  {	  	non-compiled	[CE]  unclosed  string  literal	5	None	add
67	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  fromClass))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  fromClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,  fromClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
68	[BUG]  [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
69	[BUG]  [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  <identifier>  expected	19	None	add
70	[BUG]  [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
71	[BUG]  [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(toClass.isArray())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())    {    if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
72	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getDeclaredClass();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  cls.getDeclaredClass();  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getDeclaredClass();	      Class    <?>    toClass    =    cls.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {	  if    (cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
74	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {	  if    (cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
75	[BUG]  [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
76	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(cls))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
77	[BUG]  [BUGGY]  Type  toClass  =  cls.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Type  toClass  =  cls.get(typeVarAssigns);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  cls.get(typeVarAssigns);	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  if  (cls.isPrimitive())  {  if  (!isAssignable(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (cls.isPrimitive())  {  if  (!isAssignable(cls,  toClass))  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (cls.isPrimitive())    {    if  (!isAssignable(cls,  toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
79	[BUG]  [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls);  [BUGGY]    if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typesVarAssigns.get(cls);	      Class    <?>    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSimpleName();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  cls.getSimpleName();  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSimpleName();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(toClass);  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(toClass);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
83	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {      [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
