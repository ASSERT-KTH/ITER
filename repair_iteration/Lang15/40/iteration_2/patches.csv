bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())    {    if(cls.isArray())  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
2	[BUG]  [BUGGY]  if(cls.isArray())  {  If(cls.isArray())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  If(cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())    {    If(cls.isArray())  {	  	non-compiled	[CE]  ';'  expected	32	None	add
3	[BUG]  [BUGGY]  if(cls.isArray())  {  if(cls.isObject())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  if(cls.isObject())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())    {    if(cls.isObject())  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
4	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
5	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(toClass))  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
6	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getType();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getType();	  Class    <?>    toClass    =    subtypeVarAssigns.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
7	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(subtypeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    ToClass))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
8	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSimpleName();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSimpleName();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getSimpleName();	  Class    <?>    toClass    =    cls.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
9	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSimpleName();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSimpleName();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.getSimpleName();	  Class    <?>    toClass    =    cls.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
10	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getPrimitive();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getPrimitive();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getPrimitive();	  Class    <?>    toClass    =    cls.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
11	[BUG]  [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.getRawClass();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.getRawClass();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  this.subtypeVarAssigns.getRawClass();	  Class    <?>    toClass    =    typeVarAssigns.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
12	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  if(toClass.isArray()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  if(toClass.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()    ||    toClass.isPrimitive())    {    if(toClass.isArray()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
13	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  If(toClass.isArray()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  If(toClass.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()    ||    toClass.isPrimitive())    {    If(toClass.isArray()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	34	None	add
14	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  if(toClass.isArray()  ||  fromClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  if(toClass.isArray()  ||  fromClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()    ||    toClass.isPrimitive())    {    if(toClass.isArray()  ||  fromClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
15	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&!typeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&!typeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&!typeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass)&&!subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	76	None	replace
16	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
17	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  If(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  If(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    If(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	73	None	add
18	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  if(!isAssignedable(cls,  toClass)||  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  if(!isAssignedable(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    if(!isAssignedable(cls,  toClass)||  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
19	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName(),  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName(),  subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName(),  subtypeVarAssigns);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
20	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getSimpleName());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getSimpleName());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getSimpleName());	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
21	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass))  {  If(!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	9	None	replace
22	[BUG]  [BUGGY]  if(!isPrimitive(cls))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls))  {  If(!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	9	None	replace
23	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass))  {  If(!isImmutable(cls,  toClass))  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass))  {  If(!isImmutable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass))  {  If(!isImmutable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	9	None	replace
24	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getDeclaredClass();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getDeclaredClass();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getDeclaredClass();	  Class    <?>    toClass    =    cls.getDeclaredClass();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
25	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getDeclaredClass();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getDeclaredClass();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.getDeclaredClass();	  Class    <?>    toClass    =    cls.getDeclaredClass();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
26	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
27	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls,  toClass);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
28	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVariables);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVariables);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVariables);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
29	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  if(!toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  if(!toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isPrimitive())  {  if(!toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    if(!   "toClass.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
30	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  if(!   "toClass.isPrimitive())  {  [CE]  unclosed  string  literal  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  if(!   "toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isPrimitive())  {  if(!   "toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    if(!   "toClass.isPrimitive())    {    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(isAssignable(cls,  toClass))  {	  if    (cls.isPrimitive())    {    if    (cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
32	[BUG]  [BUGGY]  if(isAssignable(cls,  toClass))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(isAssignable(cls,  toClass))  {	  if    (cls.isPrimitive())    {    if    (cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
33	[BUG]  [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.getSuperclass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.getSuperclass();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  this.subtypeVarAssigns.getSuperclass();	  Class    <?>    toClass    =    typeVarAssigns.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	83	2	replace
35	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (cls.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	83	2	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isAssignableFrom(cls))  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	83	2	replace
37	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isAssignableFrom(cls))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isAssignableFrom(cls))  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	83	2	replace
38	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
39	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  If(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  If(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    If(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	53	None	add
40	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignedable(cls,  toClass)&&  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignedable(cls,  toClass)&&  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    if(!isAssignedable(cls,  toClass)&&  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
41	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignable(cls,  ToClass)&&  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignable(cls,  ToClass)&&  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    if(!isAssignable(cls,  ToClass)&&  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
42	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getRawClass(cls);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getRawClass(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getRawClass(cls);	  Class    <?>    toClass    =    cls.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
43	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getRawClass(cls);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getRawClass(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.getRawClass(cls);	  Class    <?>    toClass    =    cls.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
44	[BUG]  [BUGGY]  Collections.sort(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Collections.sort(subtypeVarAssigns);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Collections.sort(subtypeVarAssigns);	  Collections.sort(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
45	[BUG]  [BUGGY]  Collections.sort(cls);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Collections.sort(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Collections.sort(cls);	  Collections.sort(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
46	[BUG]  [BUGGY]  Collections.sort(typeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Collections.sort(typeVarAssigns,  toClass);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Collections.sort(typeVarAssigns,  toClass);	  Collections.sort(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
47	[BUG]  [BUGGY]  Collections.sort(toClass);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Collections.sort(toClass);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Collections.sort(toClass);	  Collections.sort(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
48	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass)||!subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	15	None	replace
49	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSubtype(cls);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSubtype(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getSubtype(cls);	  Class    <?>    toClass    =    cls.getSubtype(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
50	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSubtype(cls);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSubtype(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.getSubtype(cls);	  Class    <?>    toClass    =    cls.getSubtype(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
51	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(typeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSubtype(typeVarAssigns);	  Class    <?>    toClass    =    cls.getSubtype(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
52	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSubtype();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSubtype();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getSubtype();	  Class    <?>    toClass    =    cls.getSubtype(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
53	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)||!typeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass)||!typeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass)||!typeVarAssigns.contains(toClass))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
54	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
55	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
56	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  If(!cls.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  If(!cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    If(!cls.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	20	None	add
57	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.hasPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.hasPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.hasPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
58	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.name);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.name);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.name);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.name);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
59	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.name  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.name  +  1);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.name  +  1);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.name);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!cls.isArray())  {	  if(!toClass.isArray())    {    	compilable	  [FE]  AssertionError  	37	2	replace
61	[BUG]  [BUGGY]  if(!cls.isArray())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isArray())  {	  if(!toClass.isArray())    {    	compilable	  [FE]  AssertionError  	37	2	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isArray()  ||  cls.isPrimitive())  {	  if(!toClass.isArray())    {    	compilable	  [FE]  AssertionError  	37	2	replace
63	[BUG]  [BUGGY]  if(!toClass.isArray()  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray()  ||  cls.isPrimitive())  {	  if(!toClass.isArray())    {    	compilable	  [FE]  AssertionError  	37	2	replace
64	[BUG]  [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);	  Class    <?>    toClass    =    typesVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
65	[BUG]  [BUGGY]  Type  toClass  =  cls.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  cls.get(subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  cls.get(subtypeVarAssigns);	  Type    toClass    =    cls.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
66	[BUG]  [BUGGY]  Type  toClass  =  cls.get(typeVarAssigns,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  cls.get(typeVarAssigns,  subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  cls.get(typeVarAssigns,  subtypeVarAssigns);	  Type    toClass    =    cls.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
67	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(subtypeVarAssigns.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(subtypeVarAssigns.isPrimitive())  {	  if    (cls.isPrimitive())    {    if    (!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
68	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  subtypeVarAssigns.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&  subtypeVarAssigns.isPrimitive())  {	  if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
69	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  typeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  typeVarAssigns.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&  typeVarAssigns.isPrimitive())  {	  if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	54	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (toClass.isPrimitive()  ||  cls.isPrimitive())  {	  if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	42	2	replace
71	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (toClass.isPrimitive()  ||  cls.isPrimitive())  {	  if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	42	2	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	42	2	replace
73	[BUG]  [BUGGY]  if  (!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	42	2	replace
74	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  typeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  typeVarAssigns);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
75	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  null);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  null);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
76	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName(),  toClass);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName(),  toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getName(),  toClass);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
77	[BUG]  [BUGGY]  if(isPrimitive(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(isPrimitive(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(isPrimitive(cls,  toClass))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
78	[BUG]  [BUGGY]  if(!isPrimitive(toClass))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(toClass))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
79	[BUG]  [BUGGY]  if(!toClass.isAssignableFrom(cls,  toClass))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isAssignableFrom(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isAssignableFrom(cls,  toClass))  {	  if(!toClass.isAssignableFrom(cls))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	24	None	replace
80	[BUG]  [BUGGY]  if(!typeVarAssigns.isAssignableFrom(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isAssignableFrom(cls))  {	  if(!toClass.isAssignableFrom(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	24	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!cls.isAssignableFrom(toClass))  {	  if(!toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  AssertionError  	24	2	replace
82	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isAssignableFrom(toClass))  {	  if(!toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  AssertionError  	24	2	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	21	2	replace
84	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	21	2	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isInterface())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!cls.isInterface())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	21	2	replace
86	[BUG]  [BUGGY]  if(!cls.isInterface())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isInterface())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isInterface())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	21	2	replace
87	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.values();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.values();	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.values();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
88	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSuperclass(cls);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.getSuperclass(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.getSuperclass(cls);	  Class    <?>    toClass    =    cls.getSuperclass(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
89	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(typeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSuperclass(typeVarAssigns);	  Class    <?>    toClass    =    cls.getSuperclass(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
90	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSuperclass(cls);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.getSuperclass(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.getSuperclass(cls);	  Class    <?>    toClass    =    cls.getSuperclass(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
91	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  If(toClass.isArray())  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  If(toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  If(toClass.isArray())  {	  if(toClass.isArray())    {    If(toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
92	[BUG]  [BUGGY]  if(cls.isArray())  {  If(toClass.isArray())  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  If(toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())  {  If(toClass.isArray())  {	  if(toClass.isArray())    {    If(toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
93	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  If(toClass.isArray())  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  If(toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive())  {  If(toClass.isArray())  {	  if(toClass.isArray())    {    If(toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
94	[BUG]  [BUGGY]  ||  toClass.isArray())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  ||  toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	||  toClass.isArray())  {	  if(toClass.isArray())    {    If(toClass.isArray())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
95	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  toClass.get(cls);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  toClass.get(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  toClass.get(cls);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
96	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  typeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  typeVarAssigns.get(toClass);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  typeVarAssigns.get(toClass);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
97	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  types.get(cls);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  types.get(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  types.get(cls);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
98	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  subtypeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  subtypeVarAssigns.get(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  subtypeVarAssigns.get(cls);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
100	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	cls  =  ClassUtils.primitiveToWrapper(cls);	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
101	[BUG]  [BUGGY]  ||  toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  ||  toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	||  toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(cls.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	69	2	replace
103	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	69	2	replace
104	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getDeclaredType());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getDeclaredType());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getDeclaredType());	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
105	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getType());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getType());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getType());	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	13	2	replace
107	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	13	2	replace
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	13	2	replace
109	[BUG]  [BUGGY]  if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	13	2	replace
110	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  If(!toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  If(!toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())  {  If(!toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    If(!toClass.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	31	None	replace
111	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  If(!toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  If(!toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isPrimitive())  {  If(!toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    If(!toClass.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	31	None	replace
112	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isObject())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isObject())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()  ||  toClass.isObject())  {	  if(toClass.isArray())    {    if(toClass.isObject())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
113	[BUG]  [BUGGY]  if(!toClass.isArray())  {  if(toClass.isObject())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray())  {  if(toClass.isObject())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())  {  if(toClass.isObject())  {	  if(toClass.isArray())    {    if(toClass.isObject())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
114	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass  ||  subtypeVarAssigns))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass  ||  subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass  ||  subtypeVarAssigns))  {	  if(!isPrimitive(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
115	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass.isPrimitive()))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass.isPrimitive()))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass.isPrimitive()))  {	  if(!isPrimitive(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
116	[BUG]  [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns,  toClass))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  subtypeVarAssigns,  toClass))  {	  if(!isPrimitive(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
118	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  &&  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isPrimitive()  &&  cls.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
120	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  &&  cls.isPrimitive())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  &&  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()  &&  cls.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
122	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray()  ||  cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isArray()  ||  cls.isArray())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
124	[BUG]  [BUGGY]  if(!toClass.isArray()  ||  cls.isArray())  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray()  ||  cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray()  ||  cls.isArray())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	26	2	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(cls.isArray()  ||  toClass.isPrimitive())  {	  if(toClass.isArray()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	35	2	replace
126	[BUG]  [BUGGY]  if(cls.isArray()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray()  ||  toClass.isPrimitive())  {	  if(toClass.isArray()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	35	2	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(toClass.isArray()  ||  toClass.isAssignableFrom(cls))  {	  if(toClass.isArray()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	35	2	replace
128	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isAssignableFrom(cls))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()  ||  toClass.isAssignableFrom(cls))  {	  if(toClass.isArray()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	35	2	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(toClass.isPrimitive()  ||  toClass.isArray())  {	  if(toClass.isArray()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	35	2	replace
130	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isArray())  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive()  ||  toClass.isArray())  {	  if(toClass.isArray()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	35	2	replace
131	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
132	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  If(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  If(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    If(!toClass.isPrimitive()  ||  cls.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	25	None	add
133	[BUG]  [BUGGY]  if(!subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!subtypeVarAssigns.contains(cls))  {	  if(!typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
134	[BUG]  [BUGGY]  if(!toClass.contains(cls))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.contains(cls))  {	  if(!typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
135	[BUG]  [BUGGY]  if(!isTypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  isTypeVarAssigns  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isTypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isTypeVarAssigns.contains(cls))  {	  if(!typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  isTypeVarAssigns	62	None	replace
136	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  cls);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  subtypeVarAssigns.get(cls,  cls);	  Type    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
137	[BUG]  [BUGGY]  if(ToClass.isPrimitive())  {  [CE]  cannot  find  symbol  ToClass  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(ToClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(ToClass.isPrimitive())  {	  if(toClass.isArray())    {    if(ToClass.isArray())    {    	non-compiled	[CE]  cannot  find  symbol  ToClass	46	None	replace
138	[BUG]  [BUGGY]  if(!subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!subtypeVarAssigns.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!subtypeVarAssigns.isPrimitive())  {	  if(!typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
139	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {	  if(!isAssignable(cls,    toClass)||!typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
140	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {	  if(!isAssignable(cls,    toClass)||!typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    <    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	68	2	replace
142	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    <    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	68	2	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    <    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	68	2	replace
144	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    <    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	68	2	replace
145	[BUG]  [BUGGY]  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();	  if(toClass.isArray())    {    if(toClass.isArray())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
146	[BUG]  [BUGGY]  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  if(toClass.isArray())    {    if(toClass.isArray())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
147	[BUG]  [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())    {    if(!toClass.isArray())  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
148	[BUG]  [BUGGY]  if(!toClass.isArray())  {  If(!toClass.isArray())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray())  {  If(!toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())    {    If(!toClass.isArray())  {	  	non-compiled	[CE]  ';'  expected	36	None	add
149	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.getTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  subtypeVarAssigns.getTypeVarAssigns();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  subtypeVarAssigns.getTypeVarAssigns();	  Type    toClass    =    cls.getTypeVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
150	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.getTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  typeVarAssigns.getTypeVarAssigns();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  typeVarAssigns.getTypeVarAssigns();	  Type    toClass    =    cls.getTypeVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
151	[BUG]  [BUGGY]  Type  toClass  =  cls.getDeclaredTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  cls.getDeclaredTypeVarAssigns();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  cls.getDeclaredTypeVarAssigns();	  Type    toClass    =    cls.getTypeVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
152	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    If    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
153	[BUG]  [BUGGY]  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    If    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
154	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.type);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.type);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.type);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    types.get(cls);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
155	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  If  (cls.isPrimitive())  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  If  (cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  If  (cls.isPrimitive())  {	  if    (cls.isPrimitive())    {    If    (cls.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
156	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isSubtype(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isSubtype(subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||  cls.isSubtype(subtypeVarAssigns))  {	  if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
157	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isConstructor())  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isConstructor())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||  cls.isConstructor())  {	  if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
158	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(toClass);	  Class    <?>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
159	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.get(toClass);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.get(toClass);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.get(toClass);	  Class    <?>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
160	[BUG]  [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.get(toClass);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  this.subtypeVarAssigns.get(toClass);	  Class    <?>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
161	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
162	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    toClass.isPrimitive())    {    If  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	82	None	add
163	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (ToClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if  (ToClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if  (ToClass.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
164	[BUG]  [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  if(!toClass.isAssignableFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  if(!toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isAssignableFrom(cls))    {    if(!toClass.isAssignableFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
165	[BUG]  [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  if(!toClass.isAssignedableFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  if(!toClass.isAssignedableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isAssignableFrom(cls))    {    if(!toClass.isAssignedableFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
166	[BUG]  [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  If(!toClass.isAssignableFrom(cls))  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  If(!toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isAssignableFrom(cls))    {    If(!toClass.isAssignableFrom(cls))  {	  	non-compiled	[CE]  ';'  expected	23	None	add
167	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName()  +  1);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName()  +  1);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
168	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName(),  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName(),  null);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName(),  null);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
169	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.map    =    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	71	None	replace
170	[BUG]  [BUGGY]  ||  toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  ||  toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	||  toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.map    =    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
171	[BUG]  [BUGGY]  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.map    =    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
172	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	8	None	replace
173	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls.getRawClass());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls.getRawClass());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls.getRawClass());	  Class    <?>    toClass    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
174	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls)||!isAssignedable(cls,  toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.contains(cls)||!isAssignedable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.contains(cls)||!isAssignedable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignedable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	10	None	replace
175	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignedable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
176	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
177	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  If  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  If  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    If  (cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	41	None	add
178	[BUG]  [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  if  (Cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive()  ||  toClass.isPrimitive())  {  if  (Cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    if  (Cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
179	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
180	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  typeVarAssigns.get(cls,  toClass);	  Type    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
181	[BUG]  [BUGGY]  Type  toClass  =  types.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  types.get(cls,  subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  types.get(cls,  subtypeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
182	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName()  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName()  +  1);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName()  +  1);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
183	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName(),  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName(),  null);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName(),  null);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
184	[BUG]  [BUGGY]  TypeVariable  <?>  toClass  =  subtypeVarAssigns.getSuperclass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  TypeVariable  <?>  toClass  =  subtypeVarAssigns.getSuperclass();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	TypeVariable  <?>  toClass  =  subtypeVarAssigns.getSuperclass();	  TypeVariable    <?>    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
185	[BUG]  [BUGGY]  TypeVariable  <?>  toClass  =  typeVarAssigns.getSuperclass();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  TypeVariable  <?>  toClass  =  typeVarAssigns.getSuperclass();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	TypeVariable  <?>  toClass  =  typeVarAssigns.getSuperclass();	  TypeVariable    <?>    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
186	[BUG]  [BUGGY]  TypeVariable  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  TypeVariable  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	TypeVariable  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns);	  TypeVariable    <?>    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
187	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls.getName());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls.getName());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls.getName());	  Class    <?>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
188	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.get(subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.get(subtypeVarAssigns);	  Class    <?>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive()  ||  cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!cls.isPrimitive()  ||  cls.isArray())  {	  if(cls.isArray())    {    	compilable	  [FE]  AssertionError  	33	2	replace
190	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||  cls.isArray())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive()  ||  cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive()  ||  cls.isArray())  {	  if(cls.isArray())    {    	compilable	  [FE]  AssertionError  	33	2	replace
191	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getName(),  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getName(),  subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls.getName(),  subtypeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
192	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getQualifiedName());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls.getQualifiedName());	  Class    <?>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
193	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getName()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getName()  +  1);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls.getName()  +  1);	  Class    <?>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
194	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  for(toClass.isArray()  ||  toClass.isPrimitive())  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  for(toClass.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()    ||    toClass.isPrimitive())    {    for(toClass.isArray()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  not  a  statement	34	None	add
195	[BUG]  [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.containsKey(cls))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    ToClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	11	None	replace
196	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(typeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(typeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    ToClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	11	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(cls.isPrimitive()  ||  cls.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	27	2	replace
198	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive()  ||  cls.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	27	2	replace
199	[BUG]  [BUGGY]  if(!typeVarAssigns.isArray())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isArray())  {	  if(!toClass.isArray())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	37	None	replace
200	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	22	None	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(cls.isArray()  ||  cls.isPrimitive())  {	  if(cls.isArray())    {    	compilable	  [FE]  AssertionError  	33	2	replace
202	[BUG]  [BUGGY]  if(cls.isArray()  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray()  ||  cls.isPrimitive())  {	  if(cls.isArray())    {    	compilable	  [FE]  AssertionError  	33	2	replace
203	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.getName());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.getName());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.getName());	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
204	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive())  {  if  (!isAssignable(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(subtypeVarAssigns.isPrimitive())  {  if  (!isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(subtypeVarAssigns.isPrimitive())  {  if  (!isAssignable(cls,  toClass))  {	  if    (cls.isPrimitive())    {    if    (!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
205	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName(),  toClass);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName(),  toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getQualifiedName(),  toClass);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
206	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getQualifiedName());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls.getQualifiedName());	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
207	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getDeclaredClass(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getDeclaredClass(subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getDeclaredClass(subtypeVarAssigns);	  Class    <?>    toClass    =    cls.getDeclaredClass();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
208	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&!typeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&!typeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&!typeVarAssigns.contains(toClass))  {	  if(!isAssignable(cls,    toClass)||!typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	14	None	replace
209	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||!typeVarAssigns.contains(subtypeVarAssigns))  {	  if(!isAssignable(cls,    toClass)||!typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	14	None	replace
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||!cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass)||!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	21	2	replace
211	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||!cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	21	2	replace
212	[BUG]  [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns)&&  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns)&&  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  subtypeVarAssigns)&&  toClass.isPrimitive())  {	  if(!isPrimitive(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
213	[BUG]  [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns)||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  subtypeVarAssigns)||  toClass.isPrimitive())  {	  if(!isPrimitive(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
214	[BUG]  [BUGGY]  if  (cls.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (cls.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (cls.isPrimitive())  {  If  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    If    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
215	[BUG]  [BUGGY]  if(!isAssignableFrom(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignableFrom(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignableFrom(cls,  toClass))  {	  if(!toClass.isAssignableFrom(cls))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
216	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  typeVarAssigns;  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  typeVarAssigns;  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  typeVarAssigns;  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.map    =    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  >  expected	71	None	replace
217	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  if(!isAssigned(cls,  toClass)||  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isPrimitive())  {  if(!isAssigned(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    if(!isAssigned(cls,  toClass)||  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
218	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  null);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls,  null);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
219	[BUG]  [BUGGY]  Class  <?>  toClass  =  types.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  types.get(cls,  subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  types.get(cls,  subtypeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(isAssignable(cls,  toClass)||  cls.isPrimitive())  {	  if    (cls.isPrimitive())    {    if    (Cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
221	[BUG]  [BUGGY]  if(isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(isAssignable(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(isAssignable(cls,  toClass)||  cls.isPrimitive())  {	  if    (cls.isPrimitive())    {    if    (Cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
222	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive()  ||  cls.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.isPrimitive()  ||  cls.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	26	None	replace
223	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isAssignableFrom(subtypeVarAssigns))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isAssignableFrom(subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()  ||  cls.isAssignableFrom(subtypeVarAssigns))  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	26	None	replace
224	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {	  if(!typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	62	None	replace
225	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.contains(cls)||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.contains(cls)||  toClass.isPrimitive())  {	  if(!typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	62	None	replace
226	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getRawClass(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getRawClass(subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getRawClass(subtypeVarAssigns);	  Class    <?>    toClass    =    cls.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
227	[BUG]  [BUGGY]  Type  toClass  =  cls.getSubtypeVarAssigns();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  cls.getSubtypeVarAssigns();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  cls.getSubtypeVarAssigns();	  Type    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {	  if(!isAssignable(cls,    toClass)&&!subtypeVarAssigns.contains(cls))    {    	compilable	  [FE]  AssertionError  	76	2	replace
229	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {	  if(!isAssignable(cls,    toClass)&&!subtypeVarAssigns.contains(cls))    {    	compilable	  [FE]  AssertionError  	76	2	replace
230	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getLocalName());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getLocalName());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls.getLocalName());	  Class    <?>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
231	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getType());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls.getType());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls.getType());	  Class    <?>    toClass    =    typeVarAssigns.get(cls.getName());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
232	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getType(),  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getType(),  toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getType(),  toClass);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
233	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getParameterType(0));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getParameterType(0));  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getParameterType(0));	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
234	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    <    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
235	[BUG]  [BUGGY]  if(!isPrimitive(cls)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls)||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls)||  toClass.isPrimitive())  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
236	[BUG]  [BUGGY]  if(!isPrimitive(cls)||!subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls)||!subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls)||!subtypeVarAssigns.contains(cls))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
237	[BUG]  [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns,  toClass))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  subtypeVarAssigns,  toClass))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)	13	None	replace
238	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass),  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass),  subtypeVarAssigns)  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass),  subtypeVarAssigns)  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
239	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.name);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.name);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls.name);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.name);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
240	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
241	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
242	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive()  ||!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive()  ||!cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive()  ||!cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
243	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(cls))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
244	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
245	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  false);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  false);	  Class    <?>    toClass    =    cls.getSuperclass(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
246	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.contains(cls))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.contains(cls))  {  If(!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	9	None	replace
247	[BUG]  [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.containsKey(cls))  {  If(!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	9	None	replace
248	[BUG]  [BUGGY]  if(cls.isArray())  {  if(toClass.isObject())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  if(toClass.isObject())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())  {  if(toClass.isObject())  {	  if(toClass.isArray())    {    if(toClass.isObject())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
249	[BUG]  [BUGGY]  if(cls.isObject())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isObject())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isObject())  {	  if(toClass.isArray())    {    if(toClass.isObject())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
250	[BUG]  [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns(subtypeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Type  toClass  =  cls.getTypeVarAssigns(subtypeVarAssigns);	  Type    toClass    =    cls.getTypeVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
251	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssigned(cls,  toClass)&&  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssigned(cls,  toClass)&&  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    if(!isAssigned(cls,  toClass)&&  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
252	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignable(cls,  toClass)&&  cls.hasPrimitive())  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  cls.isPrimitive())  {  if(!isAssignable(cls,  toClass)&&  cls.hasPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    if(!isAssignable(cls,  toClass)&&  cls.hasPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
253	[BUG]  [BUGGY]  if  (typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if  (typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	43	None	replace
254	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName(),  toClass);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName(),  toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getSimpleName(),  toClass);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
255	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isTypeVarAssigns())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isTypeVarAssigns())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||  cls.isTypeVarAssigns())  {	  if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
256	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isSubtypeVarAssigns())  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isSubtypeVarAssigns())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||  cls.isSubtypeVarAssigns())  {	  if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
257	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
258	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  if(toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
259	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSubtypeVarAssigns();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSubtypeVarAssigns();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSubtypeVarAssigns();	  Class    <?>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
260	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!typeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!typeVarAssigns.contains(toClass))  {	  if(!typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	62	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass)||  cls.isArray())  {	  if(cls.isArray())    {    	compilable	  [FE]  AssertionError  	33	2	replace
262	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isArray())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||  cls.isArray())  {	  if(cls.isArray())    {    	compilable	  [FE]  AssertionError  	33	2	replace
263	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns,  cls);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns,  cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns,  cls);	  Class    <?>    toClass    =    cls.getSubtype(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
264	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns,  false);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSubtype(subtypeVarAssigns,  false);	  Class    <?>    toClass    =    cls.getSubtype(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
265	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass))  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  if(toClass.isArray())    {    if(toClass.isArray())    <    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
266	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  if(toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  if(toClass.isArray())    {    if(toClass.isArray())    <    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive()  ||!toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(cls.isPrimitive()  ||!toClass.isAssignableFrom(cls))  {	  if(!toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  AssertionError  	24	2	replace
268	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||!toClass.isAssignableFrom(cls))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive()  ||!toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive()  ||!toClass.isAssignableFrom(cls))  {	  if(!toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  AssertionError  	24	2	replace
269	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||!toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass)||!toClass.isAssignableFrom(cls))  {	  if(!toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  AssertionError  	24	2	replace
270	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!toClass.isAssignableFrom(cls))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||!toClass.isAssignableFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||!toClass.isAssignableFrom(cls))  {	  if(!toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  AssertionError  	24	2	replace
271	[BUG]  [BUGGY]  if(ToClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  ToClass  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(ToClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(ToClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if    (toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if    (ToClass.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  ToClass	29	None	replace
272	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
273	[BUG]  [BUGGY]  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  this.return  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	this.return  new  HashMap  <  TypeVariable  <?>,  Type>();	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(toClass.isArray()  ||  toClass.isArray())  {	  if(toClass.isArray())    {    if(ToClass.isArray())    {    	compilable	  [FE]  AssertionError  	46	2	replace
275	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isArray())  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()  ||  toClass.isArray())  {	  if(toClass.isArray())    {    if(ToClass.isArray())    {    	compilable	  [FE]  AssertionError  	46	2	replace
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    If(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	31	2	replace
277	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||!toClass.isPrimitive())  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    If(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	31	2	replace
278	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  cls.values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  cls.values();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  cls.values();	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.values();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
279	[BUG]  [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())    {    if(!toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
280	[BUG]  [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())    {    if(!toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
281	[BUG]  [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())    {    if(!toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
282	[BUG]  [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isArray())  {  if(!toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isArray())    {    if(!toClass.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
283	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
284	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  classUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  classUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  classUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
285	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive()  ||  toClass.getComponentType()!=  TypeUtils.primitiveToWrapper(cls))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive()  ||  toClass.getComponentType()!=  TypeUtils.primitiveToWrapper(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive()  ||  toClass.getComponentType()!=  TypeUtils.primitiveToWrapper(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
286	[BUG]  [BUGGY]  if(!isPrimitive(cls.isPrimitive()))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls.isPrimitive()))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls.isPrimitive()))  {	  if(!typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
287	[BUG]  [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())    {    if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
288	[BUG]  [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())    {    if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
289	[BUG]  [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  classUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isArray())  {  if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  classUtils.primitiveToWrapper(cls);  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isArray())    {    if(cls.isArray())  <  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  cls  =  classUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
290	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  cls);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  cls);	  Class    <?>    toClass    =    cls.getSuperclass(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
291	[BUG]  [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  typeVarAssigns);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  cls.getSuperclass(subtypeVarAssigns,  typeVarAssigns);	  Class    <?>    toClass    =    cls.getSuperclass(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
292	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {	  if    (cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	42	None	replace
293	[BUG]  [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  if(!toClass.isAssignedFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  if(!toClass.isAssignedFrom(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isAssignableFrom(cls))    {    if(!toClass.isAssignedFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
294	[BUG]  [BUGGY]  if(!isPrimitive(cls)||!typeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls)||!typeVarAssigns.contains(toClass))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls)||!typeVarAssigns.contains(toClass))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
295	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&  subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&  subtypeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass)&&    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
296	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&!SubtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  SubtypeVarAssigns  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)&&!SubtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)&&!SubtypeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass)&&!subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  SubtypeVarAssigns	76	None	replace
297	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||!isPrimitive(cls,  subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive()  ||!isPrimitive(cls,  subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive()  ||!isPrimitive(cls,  subtypeVarAssigns))  {	  if(!isPrimitive(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
298	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass)&&  subtypeVarAssigns.contains(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass)&&  subtypeVarAssigns.contains(cls))  {	  if(!isPrimitive(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
299	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  else  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  else  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive())  {  if(toClass.isArray())  {  this.map  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  else  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    this.map    =    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	71	None	replace
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isInterface())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass)||  cls.isInterface())  {	  if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	74	2	replace
301	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isInterface())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isAssignable(cls,  toClass)||  cls.isInterface())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass)||  cls.isInterface())  {	  if(!isAssignable(cls,    toClass)||    cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	74	2	replace
302	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(!toClass.isPrimitive()  ||  cls.getPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(!toClass.isPrimitive()  ||  cls.getPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    if(!toClass.isPrimitive()  ||  cls.getPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
303	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getKey());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getKey());  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getKey());	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
304	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  if(ToClass.isArray()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isArray()  ||  toClass.isPrimitive())  {  if(ToClass.isArray()  ||  toClass.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray()    ||    toClass.isPrimitive())    {    if(ToClass.isArray()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
305	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||!isAssignable(cls,  subtypeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(cls.isPrimitive()  ||!isAssignable(cls,  subtypeVarAssigns))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(cls.isPrimitive()  ||!isAssignable(cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)	13	None	replace
306	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(subtypeVarAssigns.containsKey(cls))  {	  if    (cls.isPrimitive())    {    if    (!isAssignable(cls,    toClass))    {    	compilable	  [FE]  NullPointerException  	78	2	replace
307	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(subtypeVarAssigns.containsKey(cls))  {	  if    (cls.isPrimitive())    {    if    (!isAssignable(cls,    toClass))    {    	compilable	  [FE]  NullPointerException  	78	2	replace
308	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  toClass);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
309	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  null);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  null);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray()  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(toClass.isPrimitive())  {  if(toClass.isArray()  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	70	2	replace
311	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray()  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isArray()  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isPrimitive())  {  if(toClass.isArray()  ||  toClass.isArray())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isArray())    {    if(toClass.isArray())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    cls    =    ClassUtils.primitiveToWrapper(cls);    	compilable	  [FE]  AssertionError  	70	2	replace
312	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)||  cls.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  if(!isPrimitive(cls,  toClass)||  cls.isPrimitive())  {  [BUGGY]        return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isPrimitive(cls,  toClass)||  cls.isPrimitive())  {	  if(!toClass.isPrimitive()    ||    cls.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
313	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  this);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName(),  this);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls.getName(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
