bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(toLowerBounds);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(toLowerBounds);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitUpperBounds(toLowerBounds);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
2	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitOtherBounds(toLowerBounds);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitOtherBounds(toLowerBounds);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitOtherBounds(toLowerBounds);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
3	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitOperBounds(toLowerBounds);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitOperBounds(toLowerBounds);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitOperBounds(toLowerBounds);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
4	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(toWildcardType);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(toWildcardType);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitUpperBounds(toWildcardType);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
5	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitAssignments(toLowerBounds);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitAssignments(toLowerBounds);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitAssignments(toLowerBounds);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
6	[BUG]  [BUGGY]  WildcardType  wildcardType  =(wildcardType  instanceof  WildcardType)?(WildcardType)type  :  toLowerBounds;  [CE]  incompatible  types  [FE]    AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]  WildcardType  wildcardType  =(wildcardType  instanceof  WildcardType)?(WildcardType)type  :  toLowerBounds;  [BUGGY]  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	WildcardType  wildcardType  =(wildcardType  instanceof  WildcardType)?(WildcardType)type  :  toLowerBounds;	WildcardType  wildcardType  =  (WildcardType)  type;  	non-compiled	[CE]  incompatible  types	47	None	replace
7	[BUG]  [BUGGY]  WildcardType  wildcardType  =(wildcardType  ==  null)?  null  :  wildcardType;  [CE]  variable  wildcardType  might  not  have  been  initialized  [FE]    AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]  WildcardType  wildcardType  =(wildcardType  ==  null)?  null  :  wildcardType;  [BUGGY]  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	WildcardType  wildcardType  =(wildcardType  ==  null)?  null  :  wildcardType;	WildcardType  wildcardType  =  (WildcardType)  type;  	non-compiled	[CE]  variable  wildcardType  might  not  have  been  initialized	47	None	replace
8	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitVowerBounds(toLowerBounds);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitVowerBounds(toLowerBounds);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitVowerBounds(toLowerBounds);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
9	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitWildcards(toLowerBounds);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitWildcards(toLowerBounds);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitWildcards(toLowerBounds);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
10	[BUG]  [BUGGY]  WildcardType  wildcardType  =(wildcardType  ==  null)?  null  :  wildcardType.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]  WildcardType  wildcardType  =(wildcardType  ==  null)?  null  :  wildcardType.getRawClass();  [BUGGY]  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	WildcardType  wildcardType  =(wildcardType  ==  null)?  null  :  wildcardType.getRawClass();	WildcardType  wildcardType  =  (WildcardType)  type;  	non-compiled	[CE]  cannot  find  symbol	47	None	replace
11	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitVowerBounds(toWildcardType);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitVowerBounds(toWildcardType);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitVowerBounds(toWildcardType);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
12	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitOperBounds(toWildcardType);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitOperBounds(toWildcardType);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitOperBounds(toWildcardType);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
13	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitFollowBounds(toWildcardType);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitFollowBounds(toWildcardType);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitFollowBounds(toWildcardType);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
14	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitTownBounds(toWildcardType);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]    if  (toWildcardType.equals(type))  {  return  true;  }  Type[]  toUpperBounds  =  getImplicitUpperBounds(toWildcardType);  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  [BUGGY]    Type[]  toLowerBounds  =  getImplicitTownBounds(toWildcardType);  [BUGGY]  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	357	357	2	replace	    Type[]  toLowerBounds  =  getImplicitTownBounds(toWildcardType);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	48	None	add
