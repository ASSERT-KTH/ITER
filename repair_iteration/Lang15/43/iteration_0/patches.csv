bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds);	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol  bounds	85	None	replace
2	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound);  [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound);	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol  bound	85	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	compilable	  [FE]  AssertionError  	85	2	replace
4	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	compilable	  [FE]  AssertionError  	85	2	replace
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	  	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	compilable	  [FE]  IllegalStateException  	85	5	replace
6	[BUG]  [BUGGY]    [FE]  IllegalStateException  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	  	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	compilable	  [FE]  IllegalStateException  	85	5	replace
7	[BUG]  [BUGGY]    Class  <?>  bound  =  toClass.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Class  <?>  bound  =  toClass.getRawClass();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Class  <?>  bound  =  toClass.getRawClass();		non-compiled	[CE]  cannot  find  symbol	86	None	add
8	[BUG]  [BUGGY]    Type  bound  =  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =  toClass.getRawType();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =  toClass.getRawType();		non-compiled	[CE]  cannot  find  symbol	86	None	add
9	[BUG]  [BUGGY]    Class  <?>  bound  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Class  <?>  bound  =  type.getRawClass();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Class  <?>  bound  =  type.getRawClass();		non-compiled	[CE]  cannot  find  symbol	86	None	add
10	[BUG]  [BUGGY]    Type  bound  =  toClass.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =  toClass.getRawClass();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =  toClass.getRawClass();		non-compiled	[CE]  cannot  find  symbol	86	None	add
11	[BUG]  [BUGGY]    Type  bound  =  toClass.getBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =  toClass.getBounds();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =  toClass.getBounds();		non-compiled	[CE]  cannot  find  symbol	86	None	add
12	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound.isArray());  [CE]  cannot  find  symbol  bound  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound.isArray());  [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound.isArray());	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol  bound	85	None	replace
13	[BUG]  [BUGGY]    Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);		non-compiled	[CE]  incompatible  types	86	None	add
14	[BUG]  [BUGGY]    Type  bound  =((  Class  <?>)type).getBounds();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =((  Class  <?>)type).getBounds();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =((  Class  <?>)type).getBounds();		non-compiled	[CE]  cannot  find  symbol	86	None	add
15	[BUG]  [BUGGY]    Type  bound  =((  Class  <?>)type).getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =((  Class  <?>)type).getRawClass();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =((  Class  <?>)type).getRawClass();		non-compiled	[CE]  cannot  find  symbol	86	None	add
16	[BUG]  [BUGGY]    Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass);  [CE]  incompatible  types  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass);  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass);		non-compiled	[CE]  incompatible  types	86	None	add
17	[BUG]  [BUGGY]    Type  bound  =  getTypeArguments((  Class  <?>)type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>)  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =  getTypeArguments((  Class  <?>)type);  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =  getTypeArguments((  Class  <?>)type);		non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>)	86	None	add
18	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type);  [BUGGY]  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type);	return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)	85	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Class  <?>  bound  =(Class  <?>)type;  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	    Class  <?>  bound  =(Class  <?>)type;		compilable	  [FE]  AssertionError  	86	2	add
20	[BUG]  [BUGGY]    Class  <?>  bound  =(Class  <?>)type;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Class  <?>  bound  =(Class  <?>)type;  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Class  <?>  bound  =(Class  <?>)type;		compilable	  [FE]  AssertionError  	86	2	add
21	[BUG]  [BUGGY]    Type  bound  =((  Class  <?>)type).getbound();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  [BUGGY]    Type  bound  =((  Class  <?>)type).getbound();  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	    Type  bound  =((  Class  <?>)type).getbound();		non-compiled	[CE]  cannot  find  symbol	86	None	add
