bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  &&  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  &&  toClass.isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getBounds()  &&  toClass.isArray();	  Type    bound    =((    Class    <?>)type).getBounds()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
2	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isInterface();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isInterface();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isInterface();	  Type    bound    =((    Class    <?>)type).getBounds()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
3	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isAssignableFrom(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isAssignableFrom(type);	  Type    bound    =((    Class    <?>)type).getBounds()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	                if(toClass.isArray())    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	48	2	add
5	[BUG]  [BUGGY]          if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	                if(toClass.isArray())    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	48	2	add
6	[BUG]  [BUGGY]          if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  If(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  If(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	                if(toClass.isArray())    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    If(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	non-compiled	[CE]  ';'  expected	48	None	add
7	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawType();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawType();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	22	None	replace
8	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Type  <?>)type).getRawClass();  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Type  <?>)type).getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Type  <?>)type).getRawClass();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	22	None	replace
9	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass();  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	22	None	replace
10	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bound);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bound);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	84	None	replace
11	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	84	None	replace
12	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
13	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getRawType();	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	72	None	replace
14	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	72	None	replace
15	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getDeclaredType();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  type.getDeclaredType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  type.getDeclaredType();	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	72	None	replace
16	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.  <  Type>emptyMap();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.  <  Type>emptyMap();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.  <  Type>emptyMap();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
17	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Maps.newHashMap();  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Maps.newHashMap();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Maps.newHashMap();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
18	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_MAP;  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_MAP;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_MAP;	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
19	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type.isObject());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type.isObject());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type.isObject());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isObject());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
20	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject(),  toClass.isObject());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject(),  toClass.isObject());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject(),  toClass.isObject());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isObject());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
21	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Type  <?>)type).getbound();  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Type  <?>)type).getbound();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Type  <?>)type).getbound();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getbound();    	non-compiled	[CE]  :  expected	12	None	replace
22	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getboundType();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getboundType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getboundType();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getbound();    	non-compiled	[CE]  :  expected	12	None	replace
23	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getboundAssigns();  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getboundAssigns();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getboundAssigns();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getbound();    	non-compiled	[CE]  :  expected	12	None	replace
24	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  boundSeparator);  [CE]  cannot  find  symbol  boundSeparator  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  boundSeparator);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  boundSeparator);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    targetClass);    	non-compiled	[CE]  cannot  find  symbol  boundSeparator	85	None	replace
25	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
26	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawClass();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawClass();	  Type    bound    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
27	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)type.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)type.getRestrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)type.getRestrictByNotNullOrUndefined();	  Class    <?>    bound    =(Class    <?>)type.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
28	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)type.cloneTree();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)type.cloneTree();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)type.cloneTree();	  Class    <?>    bound    =(Class    <?>)type.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
29	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)type.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)type.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)type.getRawClass();	  Class    <?>    bound    =(Class    <?>)type.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
30	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	34	None	add
31	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	34	None	add
32	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  bound  =  type.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	34	None	add
33	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;	  	non-compiled	[CE]  unreachable  statement	34	None	add
34	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType(),  subtypeVarAssigns);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType(),  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.getComponentType());    	non-compiled	[CE]  incompatible  types	59	None	replace
35	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns.getComponentType());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns.getComponentType());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns.getComponentType());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.getComponentType());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
36	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType());  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.getComponentType());    	non-compiled	[CE]  incompatible  types	59	None	replace
37	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Class<CAP#3>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type,    bound);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Class<CAP#3>)	15	None	replace
38	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type,    bound);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Map<TypeVariable<?>,Type>)	15	None	replace
39	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,<null>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type,    bound);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,<null>)	15	None	replace
40	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  this);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  this);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type,    bound);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	15	None	replace
41	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(Class  <?>)toClass);  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(Class  <?>)toClass);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(type,(Class  <?>)toClass);	  Type    bound    =    getTypeArguments(type,(    Class    <?>)type);    	non-compiled	[CE]  incompatible  types	50	None	replace
42	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(Class  <?>)type,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(Class  <?>)type,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(type,(Class  <?>)type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(type,(    Class    <?>)type);    	non-compiled	[CE]  incompatible  types	50	None	replace
43	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>,Type)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bounds,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>,Type)	83	None	replace
44	[BUG]  [BUGGY]  Return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
45	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	40	None	replace
46	[BUG]  [BUGGY]  Type  bound  =  type.getBounds(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  type.getBounds(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type.getBounds(),  subtypeVarAssigns);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	40	None	replace
47	[BUG]  [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	40	None	replace
48	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)toClass;  }  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)toClass;  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)toClass;  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	4	None	replace
49	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bound;  }  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bound;  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bound;  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	4	None	replace
50	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bound.getRawClass();  }  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bound.getRawClass();  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bound.getRawClass();  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	4	None	replace
51	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.clone();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.clone();	  Type    bound    =((    Class    <?>)type).getRawClass().clone();    	non-compiled	[CE]  ';'  expected	68	None	replace
52	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  subtypeVarAssigns.clone();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  subtypeVarAssigns.clone();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass(),  subtypeVarAssigns.clone();	  Type    bound    =((    Class    <?>)type).getRawClass().clone();    	non-compiled	[CE]  ';'  expected	68	None	replace
53	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  [Delete]  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	[Delete]	          if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
54	[BUG]  [BUGGY]  >>  [Delete]  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  >>  [Delete]  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	>>  [Delete]	          if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
55	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  ==  [Delete]  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	==  [Delete]	          if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
56	[BUG]  [BUGGY]  !=  [Delete]  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  !=  [Delete]  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	!=  [Delete]	          if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
57	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bounds  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bounds  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds();	  Type    bounds    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	26	None	replace
58	[BUG]  [BUGGY]  Type  bounds  =((  Class  <?>)type).getBounds()  ||  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bounds  =((  Class  <?>)type).getBounds()  ||  toClass.isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bounds  =((  Class  <?>)type).getBounds()  ||  toClass.isArray();	  Type    bounds    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
59	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isObject()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
60	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass.isObject()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
61	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	44	None	replace
62	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	44	None	replace
63	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  subtypeVarAssigns.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  subtypeVarAssigns.restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass(),  subtypeVarAssigns.restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).getRawClass().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	23	None	replace
64	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).getRawClass().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	23	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	if(type    instanceof    Class    <?>)    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	66	2	add
66	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type    instanceof    Class    <?>)    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	66	2	add
67	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  If(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  If(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type    instanceof    Class    <?>)    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    If(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	non-compiled	[CE]  ';'  expected	66	None	add
68	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getDeclaredTypes();  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getDeclaredTypes();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getDeclaredTypes();	  Type    bound    =((    Class    <?>)type).getDeclaredTypes();    	non-compiled	[CE]  :  expected	62	None	replace
69	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes()  ||  toClass.getDeclaredTypes();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes()  ||  toClass.getDeclaredTypes();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getDeclaredTypes()  ||  toClass.getDeclaredTypes();	  Type    bound    =((    Class    <?>)type).getDeclaredTypes();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
70	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes().clone();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes().clone();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getDeclaredTypes().clone();	  Type    bound    =((    Class    <?>)type).getDeclaredTypes();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
71	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type),  toClass.getboundType();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type),  toClass.getboundType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type),  toClass.getboundType();	  Type    bound    =((    Class    <?>)type).getboundType();    	non-compiled	[CE]  ';'  expected	13	None	replace
72	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getboundType()  ||  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getboundType()  ||  toClass.isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getboundType()  ||  toClass.isArray();	  Type    bound    =((    Class    <?>)type).getboundType();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
73	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type.isArray());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type.isArray());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null.isArray());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
74	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null.isObject());  [CE]  <null>  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null.isObject());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null.isObject());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null.isArray());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	20	None	replace
75	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  IllegalStateException  	75	5	replace
76	[BUG]  [BUGGY]  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [FE]  IllegalStateException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  IllegalStateException  	75	5	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  AssertionError  	75	2	replace
78	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  AssertionError  	75	2	replace
79	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  getTypeArguments((  Class  <?>)type,  toClass.  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  getTypeArguments((  Class  <?>)type,  toClass.  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  getTypeArguments((  Class  <?>)type,  toClass.	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
80	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
81	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    subtypeVarAssigns);    	non-compiled	[CE]  incompatible  types	61	None	replace
82	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,(  Class  <?>)type,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,(  Class  <?>)type,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(toClass,(  Class  <?>)type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    subtypeVarAssigns);    	non-compiled	[CE]  incompatible  types	61	None	replace
83	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(  Class  <?>)toClass,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(  Class  <?>)toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(type,(  Class  <?>)toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    subtypeVarAssigns);    	non-compiled	[CE]  incompatible  types	61	None	replace
84	[BUG]  [BUGGY]  Constructor  <?>  bound  =(Constructor  <?>)type;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Constructor  <?>  bound  =(Constructor  <?>)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Constructor  <?>  bound  =(Constructor  <?>)type;	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
85	[BUG]  [BUGGY]  SortedMap  <  Class  <?>  bound  =(Class  <?>)type;  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  SortedMap  <  Class  <?>  bound  =(Class  <?>)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	SortedMap  <  Class  <?>  bound  =(Class  <?>)type;	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  >  expected	1	None	replace
86	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  NullPointerException  	47	5	replace
87	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  NullPointerException  	47	5	replace
88	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  NullPointerException  	47	5	replace
89	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [FE]  NullPointerException  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  NullPointerException  	47	5	replace
90	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>)  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>)	47	None	replace
91	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.clone();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.clone();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.clone();	  Class    <?>    bound    =(Class    <?>)subtypeVarAssigns;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
92	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.cloneTree();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.cloneTree();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.cloneTree();	  Class    <?>    bound    =(Class    <?>)subtypeVarAssigns;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.get(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.get(type);	  Class    <?>    bound    =(Class    <?>)subtypeVarAssigns;    	compilable	  [FE]  NullPointerException  	57	5	replace
94	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.get(type);  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.get(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)subtypeVarAssigns.get(type);	  Class    <?>    bound    =(Class    <?>)subtypeVarAssigns;    	compilable	  [FE]  NullPointerException  	57	5	replace
95	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  null,  type);  [CE]  cannot  find  symbol  bound  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  null,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  null,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	82	None	replace
96	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type,  bound);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type,  bound);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type,  bound);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	82	None	replace
97	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,<null>,Class<CAP#3>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,<null>,Class<CAP#3>)	82	None	replace
98	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bound,  type);  [CE]  cannot  find  symbol  bound  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bound,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bound,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	82	None	replace
99	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);	          return    getTypeArguments(((Class    <?>)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bounds	45	None	replace
100	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bound);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bound);	          return    getTypeArguments(((Class    <?>)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	45	None	replace
101	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	          return    getTypeArguments(((Class    <?>)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)	45	None	replace
102	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ')'  expected  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	45	None	replace
103	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Class  <?>  bound  =(Class  <?>)toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Class  <?>  bound  =(Class  <?>)toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class    <?>    bound    =(Class    <?>)toClass;    Class  <?>  bound  =(Class  <?>)toClass;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	55	None	add
104	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Class  <?>  bound  =(Class  <? ">)toClass;  [CE]  unclosed  string  literal  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Class  <?>  bound  =(Class  <? ">)toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class    <?>    bound    =(Class    <?>)toClass;    Class  <?>  bound  =(Class  <? ">)toClass;	  	non-compiled	[CE]  unclosed  string  literal	55	None	add
105	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Type  <?>  bound  =(Class  <?>)toClass;  [CE]  type  Type  does  not  take  parameters  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Type  <?>  bound  =(Class  <?>)toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class    <?>    bound    =(Class    <?>)toClass;    Type  <?>  bound  =(Class  <?>)toClass;	  	non-compiled	[CE]  type  Type  does  not  take  parameters	55	None	add
106	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Class  >=?>  bound  =(Class  <?>)toClass;  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  Class  >=?>  bound  =(Class  <?>)toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class    <?>    bound    =(Class    <?>)toClass;    Class  >=?>  bound  =(Class  <?>)toClass;	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
107	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  description);  [CE]  cannot  find  symbol  description  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  description);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  description);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    name);    	non-compiled	[CE]  cannot  find  symbol  description	70	None	replace
108	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getboundAssigns()  ||  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getboundAssigns()  ||  toClass.isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getboundAssigns()  ||  toClass.isArray();	  Type    bound    =((    Class    <?>)type).getboundAssigns();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
109	[BUG]  [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getBounds();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type,  subtypeVarAssigns.getBounds();	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	80	None	replace
110	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds(),  type);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds(),  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getBounds(),  type);	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	80	None	replace
111	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getType();	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	80	None	replace
112	[BUG]  [BUGGY]  Class  <?>  bound  =  type,  toClass.getRawClass();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  type,  toClass.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  type,  toClass.getRawClass();	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	11	None	replace
113	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  type.getRawClass(),  subtypeVarAssigns);	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	11	None	replace
114	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  toClass;  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  toClass;	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    null;    	non-compiled	[CE]  :  expected	93	None	replace
115	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  new  Rectangle2D.Double(toClass,  subtypeVarAssigns);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  new  Rectangle2D.Double(toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  new  Rectangle2D.Double(toClass,  subtypeVarAssigns);	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    null;    	non-compiled	[CE]  :  expected	93	None	replace
116	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  toClass);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  cannot  find  symbol  bound	33	None	replace
117	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  bound);  [CE]  cannot  find  symbol  bound  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  bound);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  bound);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  cannot  find  symbol  bound	33	None	replace
118	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	73	None	replace
119	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	                if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	88	5	add
120	[BUG]  [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	                if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	88	5	add
121	[BUG]  [BUGGY]  Type  bounds  =  toClass.getBounds();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bounds  =  toClass.getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bounds  =  toClass.getBounds();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
122	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	8	None	replace
123	[BUG]  [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	8	None	replace
124	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getRawType(),  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	8	None	replace
125	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  &&  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  &&  toClass.isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass()  &&  toClass.isArray();	  Type    bound    =((    Class    <?>)type).getRawClass()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
126	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.isAssignableFrom(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.isAssignableFrom(type);	  Type    bound    =((    Class    <?>)type).getRawClass()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
127	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.isArray();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass(),  toClass.isArray();	  Type    bound    =((    Class    <?>)type).getRawClass()    ||    toClass.isArray();    	non-compiled	[CE]  ';'  expected	24	None	replace
128	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass.getComponentType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	Class  <?>  bound  =(Class  <?>)toClass.getComponentType();	  Class    <?>    bound    =(Class    <?>)toClass;    	compilable	  [FE]  IllegalStateException  	56	5	replace
129	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass.getComponentType();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass.getComponentType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)toClass.getComponentType();	  Class    <?>    bound    =(Class    <?>)toClass;    	compilable	  [FE]  IllegalStateException  	56	5	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isEnum()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	return  getTypeArguments((  Class  <?>)type,  toClass.isEnum()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  AssertionError  	42	2	replace
131	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isEnum()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isEnum()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isEnum()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  AssertionError  	42	2	replace
132	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)type,  toClass.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)type,  toClass.clone();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)type,  toClass.clone();	  Class    <?>    bound    =(Class    <?>)type.clone();    	non-compiled	[CE]  ';'  expected	58	None	replace
133	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getLines();  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getLines();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getLines();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	25	None	replace
134	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getAssignments();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getAssignments();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getAssignments();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	25	None	replace
135	[BUG]  [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  subtypeVarAssigns;	  Class    <?>    bound    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
136	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass.getRawClass();  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass.getRawClass();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass()    :    subtypeVarAssigns;    	non-compiled	[CE]  :  expected	79	None	replace
137	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass.getSubtypeVarAssigns;  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass.getSubtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass.getSubtypeVarAssigns;	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass()    :    subtypeVarAssigns;    	non-compiled	[CE]  :  expected	79	None	replace
138	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    scope);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	54	None	replace
139	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,(Class  <?>)type,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,(Class  <?>)type,  toClass);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(toClass,(Class  <?>)type,  toClass);	  Type    bound    =    getTypeArguments(toClass,(    Class    <?>)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>)	51	None	replace
140	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isInterface());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isInterface());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isInterface());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
141	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
142	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isConstructor());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isConstructor());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isConstructor());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
143	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bounds	37	None	replace
144	[BUG]  [BUGGY]  Class  <?>  bound  =  type,  subtypeVarAssigns.getRawClass();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  type,  subtypeVarAssigns.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  type,  subtypeVarAssigns.getRawClass();	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
145	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type);	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
146	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  scope);  [CE]  cannot  find  symbol  scope  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  scope);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  scope);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  scope	52	None	replace
147	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,<null>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  null);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,<null>)	52	None	replace
148	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>,Type)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>,Type)	52	None	replace
149	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Type)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Type)	53	None	replace
150	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRestrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRestrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
151	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).restrictByNotNullOrUndefined();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).restrictByNotNullOrUndefined();    	non-compiled	[CE]  :  expected	91	None	replace
152	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).subtypeVarAssigns.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  subtypeVarAssigns  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).subtypeVarAssigns.restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).subtypeVarAssigns.restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  subtypeVarAssigns	91	None	replace
153	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	36	None	add
154	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	36	None	add
155	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  bound  =  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	36	None	add
156	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type  =  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type  =  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  type  =  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	36	None	add
157	[BUG]  [BUGGY]  Type  <?>  bound  =(Type  <?>)type;  [CE]  type  Type  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  <?>  bound  =(Type  <?>)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  <?>  bound  =(Type  <?>)type;	          Class    <?>    bound    =(Class    <?>)type;    Type    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  type  Type  does  not  take  parameters	2	None	replace
158	[BUG]  [BUGGY]  Type  <?>  bound  =(Class  <?>)type;  [CE]  type  Type  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  <?>  bound  =(Class  <?>)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  <?>  bound  =(Class  <?>)type;	          Class    <?>    bound    =(Class    <?>)type;    Type    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  type  Type  does  not  take  parameters	2	None	replace
159	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawClass(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass.getRawClass(),  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getRawClass(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getRawClass(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	29	None	replace
160	[BUG]  [BUGGY]  Type  bound  =  type.getRawClass(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  type.getRawClass(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type.getRawClass(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawClass(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	29	None	replace
161	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawClass(),  type);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass.getRawClass(),  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getRawClass(),  type);	  Type    bound    =    toClass.getRawClass(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	29	None	replace
162	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments((    Class    <?>)type),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	92	None	replace
163	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns,  null);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns,  null);	  Type    bound    =    getTypeArguments((    Class    <?>)type),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
164	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isInterface());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isInterface());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isInterface());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
165	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isConstructor());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isConstructor());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isConstructor());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
166	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)bound;  }  [CE]  unclosed  string  literal  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)bound;  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)bound;  }	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?   ">)type;    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
167	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)toClass;  }  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)toClass;  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)toClass;  }	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?   ">)type;    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
168	[BUG]  [BUGGY]  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    bound    =    type.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	76	None	replace
169	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    bound    =    type.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	76	None	replace
170	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>)	19	None	replace
171	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isObject());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isObject());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isObject());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
172	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,boolean,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,boolean,Map<TypeVariable<?>,Type>)	19	None	replace
173	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray(),  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,boolean,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray(),  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,boolean,Map<TypeVariable<?>,Type>)	60	None	replace
174	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType(),  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,boolean)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType(),  toClass.isArray());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType(),  toClass.isArray());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,boolean)	60	None	replace
175	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isObject(),  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isObject(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isObject(),  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.isArray());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
176	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  null);  [CE]  cannot  find  symbol  bound  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  null);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  null);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bound	5	None	replace
177	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bound);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bound);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bound);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bound	5	None	replace
178	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  null);  [CE]  cannot  find  symbol  bounds  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  null);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  null);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bounds	5	None	replace
179	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bounds);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bounds	46	None	replace
180	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bound);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bound);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	46	None	replace
181	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bound.isArray());  [CE]  cannot  find  symbol  bound  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bound.isArray());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  bound.isArray());	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	46	None	replace
182	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isConstructor()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
183	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isConstructor()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
184	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  subtypeVarAssigns,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass.isConstructor()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
185	[BUG]  [BUGGY]  Class  <?>  type  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  type  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  type  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	69	None	replace
186	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	69	None	replace
187	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	                if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	86	5	add
188	[BUG]  [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	                if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	86	5	add
189	[BUG]  [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  If(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  If(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	                if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    }    If(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }	  	non-compiled	[CE]  ';'  expected	86	None	add
190	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isObject());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isObject());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isObject());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    this.subtypeVarAssigns.isArray());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
191	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isConstructor());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isConstructor());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isConstructor());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    this.subtypeVarAssigns.isArray());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
192	[BUG]  [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType()),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType()),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	                if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType()),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  	non-compiled	[CE]  ';'  expected	88	None	add
193	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds;  }  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds;  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds;  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	4	None	replace
194	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns,  type);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)	46	None	replace
195	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,boolean)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass.isArray());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,boolean)	19	None	replace
196	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  subtypeVarAssigns.getComponentType()  :  toClass,  toClass);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  subtypeVarAssigns.getComponentType()  :  toClass,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  subtypeVarAssigns.getComponentType()  :  toClass,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass.isConstructor()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
197	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isObject()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
198	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass()  :  subtypeVarAssigns;  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass()  :  subtypeVarAssigns;	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass()    :    subtypeVarAssigns;    	non-compiled	[CE]  :  expected	79	None	replace
199	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  return  getTypeArguments((  Class  <?>)type,  toClass.  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  return  getTypeArguments((  Class  <?>)type,  toClass.  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  return  getTypeArguments((  Class  <?>)type,  toClass.	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
200	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	}	          if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
201	[BUG]  [BUGGY]  >>  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  >>  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	>>	          if(type    instanceof    Class    <?>)    {    return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
202	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes().toArray(subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes().toArray(subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getDeclaredTypes().toArray(subtypeVarAssigns);	  Type    bound    =((    Class    <?>)type).getDeclaredTypes();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
203	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass.getRawClass()  :  toClass;  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass.getRawClass()  :  toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).toClass.getRawClass()  :  toClass;	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass()    :    toClass;    	non-compiled	[CE]  :  expected	78	None	replace
204	[BUG]  [BUGGY]  Class  <?>  bound  =  type.bounds.getRawClass();  [CE]  cannot  find  symbol  bounds  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  type.bounds.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  type.bounds.getRawClass();	  Class    <?>    bound    =    this.bounds.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  bounds	32	None	replace
205	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	82	None	replace
206	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#3>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#3>)	82	None	replace
207	[BUG]  [BUGGY]          if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  AssertionError  if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]          if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  AssertionError  if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	                if(toClass.isArray())    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    AssertionError  if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	non-compiled	[CE]  not  a  statement	48	None	add
208	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_LIST;  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_LIST;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_LIST;	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
209	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Lists.newArrayList();  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Lists.newArrayList();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Lists.newArrayList();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
210	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_LIST_ARRAY;  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_LIST_ARRAY;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.EMPTY_LIST_ARRAY;	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
211	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getboundType().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getboundType().restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getboundType().restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).getboundType();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
212	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type.getboundType()  :  toClass;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type.getboundType()  :  toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type.getboundType()  :  toClass;	  Type    bound    =((    Class    <?>)type).getboundType();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
213	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType  [CE]  :  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  else  {  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  :  expected	75	None	replace
214	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Map<TypeVariable<?>,Type>)	52	None	replace
215	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Class<CAP#3>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  toClass);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  toClass);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type,Class<CAP#3>)	52	None	replace
216	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().subtypeVarAssigns.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().subtypeVarAssigns.restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass().subtypeVarAssigns.restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).getRawClass().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
217	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    bound    =    type.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	76	None	replace
218	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	72	None	replace
219	[BUG]  [BUGGY]  >=  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  >=  [Delete]  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	>=  [Delete]	  if(type    instanceof    Class    <?>)    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
220	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	36	None	add
221	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getCOMponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getCOMponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getCOMponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
222	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	73	None	replace
223	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target.isObject());  [CE]  cannot  find  symbol  target  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target.isObject());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target.isObject());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    target.isArray());    	non-compiled	[CE]  cannot  find  symbol  target	63	None	replace
224	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.getComponentType().isArray();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.getComponentType().isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.getComponentType().isArray();	  Type    bound    =((    Class    <?>)type).getRawClass()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
225	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>,Map<TypeVariable<?>,Type>)	16	None	replace
226	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	44	None	replace
227	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawParameterType(0);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawParameterType(0);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawParameterType(0);	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	22	None	replace
228	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getAssignedTypes();  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getAssignedTypes();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getAssignedTypes();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	25	None	replace
229	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	69	None	replace
230	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	69	None	replace
231	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getBounds()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getBounds()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getBounds()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
232	[BUG]  [BUGGY]  Type  bound  =  this.subtypeVarAssigns.getBounds();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  this.subtypeVarAssigns.getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  this.subtypeVarAssigns.getBounds();	  Type    bound    =    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	41	None	replace
233	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
234	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.getComponentType());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.getComponentType());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.getComponentType());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
235	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
236	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  bound  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	47	None	replace
237	[BUG]  [BUGGY]  Type  toClass  =(Type)type;  Class  <?>  bound  =(Class  <?>)toClass;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  toClass  =(Type)type;  Class  <?>  bound  =(Class  <?>)toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  toClass  =(Type)type;  Class  <?>  bound  =(Class  <?>)toClass;	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	1	None	replace
238	[BUG]  [BUGGY]  Class  <?>  toClass  =(Class  <?>)type;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  toClass  =(Class  <?>)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  toClass  =(Class  <?>)type;	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	1	None	replace
239	[BUG]  [BUGGY]  Type  toClass  =(Type)type;  Class  <?>  bound  =(Class  <?>)type;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  toClass  =(Type)type;  Class  <?>  bound  =(Class  <?>)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  toClass  =(Type)type;  Class  <?>  bound  =(Class  <?>)type;	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	1	None	replace
240	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.getComponentType());    	non-compiled	[CE]  incompatible  types	59	None	replace
241	[BUG]  [BUGGY]  Type  bound  =  this.bounds.getBounds();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  this.bounds.getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  this.bounds.getBounds();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	39	None	replace
242	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType(type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType(type);	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	80	None	replace
243	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds()  -  1;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds()  -  1;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getBounds()  -  1;	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	80	None	replace
244	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.subtypeVarAssigns.isArray());  [CE]  cannot  find  symbol  subtypeVarAssigns  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.subtypeVarAssigns.isArray());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.subtypeVarAssigns.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    this.subtypeVarAssigns.isArray());    	non-compiled	[CE]  cannot  find  symbol  subtypeVarAssigns	21	None	replace
245	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.getComponentType());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.getComponentType());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.getComponentType());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    this.subtypeVarAssigns.isArray());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
246	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)	37	None	replace
247	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.getComponentType());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.getComponentType());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.getComponentType());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isObject());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
248	[BUG]  [BUGGY]  Class  <?>  bound  =  this.subtypeVarAssigns.getRawClass();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  this.subtypeVarAssigns.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  this.subtypeVarAssigns.getRawClass();	  Class    <?>    bound    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	31	None	replace
249	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type;	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
250	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass()  +  1;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass()  +  1;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass()  +  1;	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
251	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.get(type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.get(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.get(type);	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
252	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#3>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  toClass);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#3>)	53	None	replace
253	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	34	None	add
254	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  incompatible  types	34	None	add
255	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	34	None	add
256	[BUG]  [BUGGY]  Type  bounds  =((  Class  <?>)type).getDeclaredTypes();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bounds  =((  Class  <?>)type).getDeclaredTypes();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bounds  =((  Class  <?>)type).getDeclaredTypes();	  Type    bounds    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
257	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.getComponentType().isArray();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.getComponentType().isArray();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.getComponentType().isArray();	  Type    bound    =((    Class    <?>)type).getBounds()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
258	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isObject();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isObject();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isObject();	  Type    bound    =((    Class    <?>)type).getBounds()    ||    toClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
259	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawClass()  :  toClass;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawClass()  :  toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawClass()  :  toClass;	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	11	None	replace
260	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)type;  }  [CE]  unclosed  string  literal  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)type;  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?   ">)type;  }	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?   ">)type;    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
261	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).strictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).strictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
262	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getboundAssigns().clone();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getboundAssigns().clone();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getboundAssigns().clone();	  Type    bound    =((    Class    <?>)type).getboundAssigns();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
263	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  type.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawClass()  :  type.getRawClass();	  Type    bound    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
264	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)type.subtypeVarAssigns.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  subtypeVarAssigns  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?>)type.subtypeVarAssigns.restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)type.subtypeVarAssigns.restrictByNotNullOrUndefined();	  Class    <?>    bound    =(Class    <?>)type.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  subtypeVarAssigns	81	None	replace
265	[BUG]  [BUGGY]  Type  bound  =  this.bounds.getRawType();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  this.bounds.getRawType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  this.bounds.getRawType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	7	None	replace
266	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns.isArray());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns.isArray());  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns.isArray());	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass.isArray());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
267	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target);  [CE]  cannot  find  symbol  target  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    name);    	non-compiled	[CE]  cannot  find  symbol  target	70	None	replace
268	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isPrimitive()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	36	None	add
269	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  null,  type);  [CE]  cannot  find  symbol  bounds  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  null,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  null,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	82	None	replace
270	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    null,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	82	None	replace
271	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).setbound(toClass);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).setbound(toClass);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).setbound(toClass);	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getbound();    	non-compiled	[CE]  :  expected	12	None	replace
272	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getboundAssigns()  :  toClass;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getboundAssigns()  :  toClass;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getboundAssigns()  :  toClass;	  Type    bound    =((    Class    <?>)type).getboundAssigns();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
273	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getboundAssigns()  :  null;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getboundAssigns()  :  null;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getboundAssigns()  :  null;	  Type    bound    =((    Class    <?>)type).getboundAssigns();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
274	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	compilable	  [FE]  IllegalStateException  	4	5	replace
275	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalStateException  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	compilable	  [FE]  IllegalStateException  	4	5	replace
276	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  bound  =(Class  <?>)type;  }  [CE]  cannot  find  symbol  bound  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  bound  =(Class  <?>)type;  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  bound  =(Class  <?>)type;  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  cannot  find  symbol  bound	4	None	replace
277	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalStateException( " ");  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	compilable	  [FE]  IllegalStateException  	4	5	replace
278	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  }  else  {  throw  new  IllegalStateException( " ");  }	          Class    <?>    bound    =(Class    <?>)type;    Class    >=?>    bound    =(Class    <?>)type;    	compilable	  [FE]  IllegalStateException  	4	5	replace
279	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  Class  <?>?  toClass.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  type  instanceof  Class  <?>?  toClass.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type  instanceof  Class  <?>?  toClass.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	8	None	replace
280	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  types,  toClass);  [CE]  cannot  find  symbol  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  types,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  types,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bounds,    type);    	non-compiled	[CE]  cannot  find  symbol  types	83	None	replace
281	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass.isConstructor()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
282	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)	47	None	replace
283	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  bounds);	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bounds	47	None	replace
284	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(Class  <?>)type,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,Class<CAP#2>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(Class  <?>)type,  toClass);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(type,(Class  <?>)type,  toClass);	  Type    bound    =    getTypeArguments(type,(    Class    <?>)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,Class<CAP#2>)	50	None	replace
285	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  Class  <?>?  toClass.getBounds()  :  toClass.getBounds(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  type  instanceof  Class  <?>?  toClass.getBounds()  :  toClass.getBounds(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type  instanceof  Class  <?>?  toClass.getBounds()  :  toClass.getBounds(),  subtypeVarAssigns);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	40	None	replace
286	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  target);  [CE]  cannot  find  symbol  target  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  target);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  target);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type,    bound);    	non-compiled	[CE]  cannot  find  symbol  target	15	None	replace
287	[BUG]  [BUGGY]  Sort  <?>  bound  =(Type  <?>)type;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Sort  <?>  bound  =(Type  <?>)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Sort  <?>  bound  =(Type  <?>)type;	          Class    <?>    bound    =(Class    <?>)type;    Type    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
288	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	          return    getTypeArguments(((Class    <?>)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)	45	None	replace
289	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	84	None	replace
290	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getBounds()  :  type.getBounds();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getBounds()  :  type.getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getBounds()  :  type.getBounds();	  Type    bound    =    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
291	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getBounds()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getBounds()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getBounds()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
292	[BUG]  [BUGGY]  Type  bounds  =((  Class  <?>)type).getContainingClass();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bounds  =((  Class  <?>)type).getContainingClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bounds  =((  Class  <?>)type).getContainingClass();	  Type    bounds    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
293	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	72	None	replace
294	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  null;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  null;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  null;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	72	None	replace
295	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?   ">)type;  [CE]  unclosed  string  literal  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =(Class  <?   ">)type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?   ">)type;	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?   ">)type;    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
296	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType(),  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>,boolean)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType(),  toClass.isArray());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType(),  toClass.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>,boolean)	19	None	replace
297	[BUG]  [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns.isArray());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns.isArray());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns.isArray());	          return    getTypeArguments(((Class    <?>)type).getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
298	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawClass()  :  type;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawClass()  :  type;  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawClass()  :  type;	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	11	None	replace
299	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).subtypeVarAssigns).restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).subtypeVarAssigns).restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).subtypeVarAssigns).restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	91	None	replace
300	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes().restrictByNotNullOrUndefined();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getDeclaredTypes().restrictByNotNullOrUndefined();	  Type    bound    =((    Class    <?>)type).getDeclaredTypes();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
301	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.emptyList();  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.emptyList();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.emptyList();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    null;    	non-compiled	[CE]  :  expected	93	None	replace
302	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)  types,  toClass,  subtypeVarAssigns);  }  [CE]  cannot  find  symbol  types  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)  types,  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type    instanceof    Class    <?>)    {    return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    }    if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)  types,  toClass,  subtypeVarAssigns);  }	  	non-compiled	[CE]  cannot  find  symbol  types	66	None	add
303	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class    <?>    bound    =    type.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	76	None	replace
304	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  Class  <?>?  toClass.getRawClass()  :  toClass.getRawClass(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  type  instanceof  Class  <?>?  toClass.getRawClass()  :  toClass.getRawClass(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type  instanceof  Class  <?>?  toClass.getRawClass()  :  toClass.getRawClass(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawClass(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	29	None	replace
305	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)	35	None	replace
306	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type.getRawType();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
307	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  type.getRawType();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
308	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass.isArray());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass.isArray());  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
309	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =(  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =(  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  bound  =(  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	34	None	add
310	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().resolveType(subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().resolveType(subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass().resolveType(subtypeVarAssigns);	  Type    bound    =((    Class    <?>)type).getRawClass().clone();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
311	[BUG]  [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns,  type.getRawClass();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns,  type.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  subtypeVarAssigns,  type.getRawClass();	  Class    <?>    bound    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	31	None	replace
312	[BUG]  [BUGGY]  Type  bounds  =  type.getBounds();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bounds  =  type.getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bounds  =  type.getBounds();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
313	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).subtypeVarAssigns.getRawClass();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).subtypeVarAssigns.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).subtypeVarAssigns.getRawClass();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	22	None	replace
314	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	1	None	replace
315	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds.get(type);  }  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds.get(type);  }  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)bounds.get(type);  }	          Class    <?>    bound    =(Class    <?>)type;    Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	1	None	replace
316	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  bounds);  [BUGGY]      }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  cannot  find  symbol  bounds	33	None	replace
317	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(new  Class  <?>(type),  toClass,  subtypeVarAssigns);  [CE]  unexpected  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =  getTypeArguments(new  Class  <?>(type),  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(new  Class  <?>(type),  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    Class    <?>)type,    subtypeVarAssigns);    	non-compiled	[CE]  unexpected  type	61	None	replace
318	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawLines();  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawLines();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawLines();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	25	None	replace
319	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.unmodifiableMap();  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.unmodifiableMap();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.unmodifiableMap();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
320	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getLines()  :  Collections.emptyMap();  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getLines()  :  Collections.emptyMap();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getLines()  :  Collections.emptyMap();	  Type    bound    =(type    instanceof    Class    <?>)?(Class    <?>)type).getBounds()    :    Collections.emptyMap();    	non-compiled	[CE]  :  expected	94	None	replace
