bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls))  {	  if(typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
2	[BUG]  [BUGGY]  if(toClass.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.contains(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls))  {	  if(typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
3	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  toClass.isPrimitive())  {	  if(typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	22	None	replace
4	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	2	2	replace
5	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	2	2	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!toClass.isPrimitive())  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
7	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  [FE]  AssertionError  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.isPrimitive())  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
8	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isAssignableFrom(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass.isAssignableFrom(cls))  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	2	2	replace
9	[BUG]  [BUGGY]  if(toClass.isAssignableFrom(cls))  {  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isAssignableFrom(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isAssignableFrom(cls))  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	2	2	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isAssignableFrom(toClass))  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
11	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
12	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
13	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
14	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
15	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isInterface())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isInterface())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
17	[BUG]  [BUGGY]  if(!cls.isInterface())  {  [FE]  AssertionError  [FE]          IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isInterface())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isInterface())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
18	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns.get(cls);	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
19	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls);	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns.get(toClass);	      Type    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
22	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(toClass);	      Type    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
23	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typeVarAssigns.get(subtypeVarAssigns);	      Type    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)	6	None	replace
25	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(subtypeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
26	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
27	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);	      Class    <?>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass.isPrimitive()  ||  cls.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	8	2	replace
29	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  cls.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	8	2	replace
30	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
31	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
32	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(subtypeVarAssigns.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.isPrimitive())  {	  if(typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
33	[BUG]  [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {	  if(typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	21	None	replace
34	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);	      cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	      cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(0);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(0);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.values();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
37	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls,  subtypeVarAssigns);	      Class    <?>    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.keySet();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.keySet();  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.keySet();	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.keySet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
39	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();	      Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass);	      Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls);	      Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
43	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(ToClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  if(ToClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(ToClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
44	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(fromClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  if(fromClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(fromClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
45	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  If(toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  If(toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    If(toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
46	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls));  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls));	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  ';'  expected	10	None	replace
48	[BUG]  [BUGGY]  Collections.sort(toClass);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Collections.sort(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(toClass);	      Collections.sort(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  Collections.sort(subtypeAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Collections.sort(subtypeAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(subtypeAssigns);	      Collections.sort(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
50	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns,  toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns,  toClass);	      cls    =    ClassUtils.primitiveToWrapper(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);	      cls    =    ClassUtils.primitiveToWrapper(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);	      cls    =    ClassUtils.primitiveToWrapper(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
53	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(toClass);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	        cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	15	4	add
55	[BUG]  [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	        cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	15	4	add
56	[BUG]  [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	        cls    =    ClassUtils.primitiveToWrapper(toClass);    Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	add
57	[BUG]  [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	        cls    =    ClassUtils.primitiveToWrapper(toClass);    typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	15	None	add
58	[BUG]  [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  [CE]  cannot  find  symbol  classUtils  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	        cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  classUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  cannot  find  symbol  classUtils	15	None	add
59	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())    {    if(!cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
60	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  If(!cls.isPrimitive())  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive())  {  If(!cls.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())    {    If(!cls.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	3	None	add
61	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.hasPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive())  {  if(!cls.hasPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())    {    if(!cls.hasPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
62	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,  toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
63	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  ToClass))  {  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssignable(cls,  ToClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,  ToClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
64	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssigned(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isAssignable(cls,  toClass))  {  if(!isAssigned(cls,  toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,    toClass))    {    if(!isAssigned(cls,  toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
65	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isAssignable(cls,  toClass))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,  toClass))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
66	[BUG]  [BUGGY]  Collections.sort(subtypeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Collections.sort(subtypeVarAssigns,  toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(subtypeVarAssigns,  toClass);	      Collections.sort(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
67	[BUG]  [BUGGY]  Collections.sort(cls);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Collections.sort(cls);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(cls);	      Collections.sort(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
68	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
69	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  If(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  If(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    If(cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	7	None	add
70	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(cls.isPrimitive()  ||  fromClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(cls.isPrimitive()  ||  fromClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(cls.isPrimitive()  ||  fromClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
71	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(typeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	6	None	replace
72	[BUG]  [BUGGY]  if(!isPrimitive(cls))  {  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isPrimitive(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
73	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class);	      Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(ToClass.class);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(ToClass.class);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(ToClass.class);	      Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
75	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.values();  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.values();	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.values();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
76	[BUG]  [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	        cls    =    ClassUtils.primitiveToWrapper(toClass);    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	add
77	[BUG]  [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]      cls  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	        cls    =    ClassUtils.primitiveToWrapper(toClass);    Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	add
78	[BUG]  [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  typesVarAssigns.get(cls);	      Class    <?>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
79	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
80	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(typeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {	  if(typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	22	None	replace
81	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(typeVarAssigns.contains(cls)||  typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  typeVarAssigns.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	22	None	replace
82	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass!=  null  ||  toClass.isPrimitive())  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
84	[BUG]  [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=  null  ||  toClass.isPrimitive())  {	  if(toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	2	2	replace
85	[BUG]  [BUGGY]  Type  toClass  =  cls.getSuperclass();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  cls.getSuperclass();  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  cls.getSuperclass();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  Type  toClass  =  typesVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  typesVarAssigns.get(cls);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typesVarAssigns.get(cls);	      Type    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
87	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())    {    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
88	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())    {    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
89	[BUG]  [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns();  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  cls.getTypeVarAssigns();	      Type    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
90	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!typeVarAssigns.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!typeVarAssigns.isPrimitive())  {	  if(typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	21	None	replace
91	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!isPrimitive(cls,  toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
92	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(subtypeVarAssigns.containsKey(cls))  {	  if(!isAssignable(cls,    toClass))    {    	compilable	  [FE]  NullPointerException  	6	5	replace
93	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))  {	  if(!isAssignable(cls,    toClass))    {    	compilable	  [FE]  NullPointerException  	6	5	replace
94	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  typeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(typeVarAssigns.contains(cls)||  typeVarAssigns.contains(toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  typeVarAssigns.contains(toClass))  {	  if(typeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	22	None	replace
95	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      	compilable	  [FE]  IllegalStateException  	9	2	replace
96	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      	compilable	  [FE]  IllegalStateException  	9	2	replace
97	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	9	None	replace
98	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	9	None	replace
99	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }	      	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	9	None	replace
100	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	8	None	replace
101	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(!isAssignable(cls,  toClass))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(toClass.isPrimitive())  {  if(!isAssignable(cls,  toClass))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(!isAssignable(cls,  toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
102	[BUG]  [BUGGY]  Type  toClass  =  cls.get(toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Type  toClass  =  cls.get(toClass);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  cls.get(toClass);	      Type    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(typeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(typeVarAssigns);	      Class    <?>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
104	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(subtypeVarAssigns);  [BUGGY]    if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(subtypeVarAssigns);	      Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
106	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!cls.isPrimitive())    {    	compilable	  [FE]  AssertionError  	4	2	replace
107	[BUG]  [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.isPrimitive()  ||  typeVarAssigns.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	21	None	replace
108	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(Cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }      [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(Cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]      if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(Cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
