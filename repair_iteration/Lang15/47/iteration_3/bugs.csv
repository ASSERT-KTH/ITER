bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);	  Type    toClass    =    typesVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
2	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    classUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
3	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  typeVarAssigns.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  typeVarAssigns.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  typeVarAssigns.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    classUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
4	[BUG]  [BUGGY]  cls  =  classUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  classUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  classUtils.primitiveToWrapper(toClass);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    classUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
5	[BUG]  [BUGGY]  if(!cls.isInterface())  {  if(!cls.isInterface())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isInterface())  {  if(!cls.isInterface())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isInterface())    {    if(!cls.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
6	[BUG]  [BUGGY]  if(!cls.isInterface())  {  If(!cls.isInterface())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isInterface())  {  If(!cls.isInterface())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isInterface())    {    If(!cls.isInterface())  {	  	non-compiled	[CE]  ';'  expected	16	None	add
7	[BUG]  [BUGGY]  if(!cls.isInterface())  {  if(!cls.isinterface())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isInterface())  {  if(!cls.isinterface())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isInterface())    {    if(!cls.isinterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
8	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!typeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!typeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssigned(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	64	None	replace
9	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(1);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(1);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
10	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(0);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(0);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
11	[BUG]  [BUGGY]  if(!subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!subtypeVarAssigns.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!subtypeVarAssigns.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!toClass.isAssignableFrom(cls))  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	7	2	replace
13	[BUG]  [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isAssignableFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.isAssignableFrom(cls))  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	7	2	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	7	2	replace
15	[BUG]  [BUGGY]  if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	7	2	replace
16	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  toClass.isPrimitive())  {	  if(typeVarAssigns.contains(cls)||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
17	[BUG]  [BUGGY]  if(toClass.contains(cls)||  typeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||  typeVarAssigns.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||  typeVarAssigns.isPrimitive())  {	  if(typeVarAssigns.contains(cls)||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
18	[BUG]  [BUGGY]  if(toClass.contains(cls)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||  toClass.isPrimitive())  {	  if(typeVarAssigns.contains(cls)||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
19	[BUG]  [BUGGY]  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	||  toClass.isPrimitive())  {	  if(toClass.isPrimitive())    {    If(toClass.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
20	[BUG]  [BUGGY]  Constructor  <?>  toClass  =  Constructor.createConstructor(cls);  [CE]  illegal  start  of  type  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  toClass  =  Constructor.createConstructor(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  toClass  =  Constructor.createConstructor(cls);	  if(toClass.isPrimitive())    {    If(toClass.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
21	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
22	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  If(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  If(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||    toClass.isPrimitive())    {    If(!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	14	None	add
23	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||  fromClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||  fromClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(!cls.isPrimitive()  ||  fromClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
24	[BUG]  [BUGGY]  Context.checkState(toClass.isPrimitive());  [CE]  illegal  start  of  type  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Context.checkState(toClass.isPrimitive());  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Context.checkState(toClass.isPrimitive());	  if(toClass.isPrimitive())    {    if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
25	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)&&!isAssignable(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)&&!isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)&&!isAssignable(cls,  toClass))  {	  if(toClass.isPrimitive())    {    if(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
26	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
27	[BUG]  [BUGGY]  SortedMap  <?>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  SortedMap  <?>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	SortedMap  <?>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
28	[BUG]  [BUGGY]  final  Class  <?>  toClass  =  typeVarAssigns.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  final  Class  <?>  toClass  =  typeVarAssigns.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	final  Class  <?>  toClass  =  typeVarAssigns.get(typeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
29	[BUG]  [BUGGY]  Type  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  ClassUtils.primitiveToWrapper(cls);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Type    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
30	[BUG]  [BUGGY]  Type  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Type    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
31	[BUG]  [BUGGY]  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Type    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
32	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  subtypeVarAssigns.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  subtypeVarAssigns.isPrimitive())  {	  if(subtypeVarAssigns.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
33	[BUG]  [BUGGY]  Collections.sort(toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collections.sort(toClass,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(toClass,  subtypeVarAssigns);	  Collections.sort(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
34	[BUG]  [BUGGY]  Collections.sort(typeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collections.sort(typeVarAssigns,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(typeVarAssigns,  toClass);	  Collections.sort(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
35	[BUG]  [BUGGY]  Collections.sort(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collections.sort(cls,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(cls,  toClass);	  Collections.sort(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
36	[BUG]  [BUGGY]  Collections.sort(subtypeVarAssigns,  toClass,  cls);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collections.sort(subtypeVarAssigns,  toClass,  cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(subtypeVarAssigns,  toClass,  cls);	  Collections.sort(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
37	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  IllegalStateException  	24	2	replace
38	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  toClass,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  IllegalStateException  	24	2	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	24	2	replace
40	[BUG]  [BUGGY]  if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(toClass,  cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	24	2	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	24	2	replace
42	[BUG]  [BUGGY]  if(isAssignable(cls,  toClass))  {  [FE]  AssertionError  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	compilable	  [FE]  AssertionError  	24	2	replace
43	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!subtypeVarAssigns.containsKey(cls))  {	  if(subtypeVarAssigns.containsKey(cls))    {    	compilable	  [FE]  NullPointerException  	93	5	replace
44	[BUG]  [BUGGY]  if(!subtypeVarAssigns.containsKey(cls))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!subtypeVarAssigns.containsKey(cls))  {	  if(subtypeVarAssigns.containsKey(cls))    {    	compilable	  [FE]  NullPointerException  	93	5	replace
45	[BUG]  [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]      NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!typeVarAssigns.containsKey(cls))  {	  if(subtypeVarAssigns.containsKey(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	93	None	replace
46	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  typeVarAssigns.get(cls,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typeVarAssigns.get(cls,  toClass);	  Type    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
48	[BUG]  [BUGGY]  Type  toClass  =  types.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  types.get(cls,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  types.get(cls,  subtypeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
49	[BUG]  [BUGGY]  Type  toClass  =  cls.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  cls.get(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  cls.get(subtypeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
50	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(cls.isAssignableFrom(toClass))  {	  if(toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  IllegalStateException  	9	2	replace
51	[BUG]  [BUGGY]  if(cls.isAssignableFrom(toClass))  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isAssignableFrom(toClass))  {	  if(toClass.isAssignableFrom(cls))    {    	compilable	  [FE]  IllegalStateException  	9	2	replace
52	[BUG]  [BUGGY]  if(!isAssignableFrom(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignableFrom(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignableFrom(cls,  toClass))  {	  if(toClass.isAssignableFrom(cls))    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
53	[BUG]  [BUGGY]  if(isAssignableFrom(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignableFrom(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isAssignableFrom(cls,  toClass))  {	  if(toClass.isAssignableFrom(cls))    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
54	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  if(!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  if(!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    If(!cls.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
55	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))  {  if(!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    If(!cls.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
56	[BUG]  [BUGGY]  ||!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  ||!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	||!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    If(!cls.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
57	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  toClass);	  Class    <?>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
58	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  null);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  null);	  Class    <?>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
59	[BUG]  [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
60	[BUG]  [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
61	[BUG]  [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
62	[BUG]  [BUGGY]  Constructor  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
63	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    ToClass))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
64	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
65	[BUG]  [BUGGY]  Constructor  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
66	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  }	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
67	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  subtypeVarAssigns.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.isPrimitive()    ||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
68	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.isPrimitive()    ||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
69	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.isPrimitive()    ||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
70	[BUG]  [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.isPrimitive()  ||  toClass.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.isPrimitive()    ||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	107	None	replace
71	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i));  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i));	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(i);    	non-compiled	[CE]  ';'  expected	79	None	replace
72	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i  +  1);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(i  +  1);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(i);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
73	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isArray()  &&  toClass.isArray())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isArray()  &&  toClass.isArray())  {	  if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	13	2	replace
74	[BUG]  [BUGGY]  if(!cls.isArray()  &&  toClass.isArray())  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isArray()  &&  toClass.isArray())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isArray()  &&  toClass.isArray())  {	  if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	13	2	replace
75	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {	  if(!isAssignable(cls,    toClass)||!subtypeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
76	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns.get(typeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
77	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
78	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  If(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  If(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    If(!cls.isPrimitive()  ||!toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	105	None	add
79	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||!ToClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||!ToClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    if(!cls.isPrimitive()  ||!ToClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
80	[BUG]  [BUGGY]  Constructor  <?>  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  cls  =  ClassUtils.primitiveToWrapper(cls);	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
81	[BUG]  [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  cls  =  ClassUtils.primitiveToWrapper(cls);	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
82	[BUG]  [BUGGY]  Constructor  <?>  toClass  =  ConstructorUtils.getConstructor(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  toClass  =  ConstructorUtils.getConstructor(subtypeVarAssigns);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  toClass  =  ConstructorUtils.getConstructor(subtypeVarAssigns);	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
83	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isInterface()  &&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isInterface()  &&  toClass.isPrimitive())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  IllegalStateException  	17	2	replace
84	[BUG]  [BUGGY]  if(!cls.isInterface()  &&  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isInterface()  &&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isInterface()  &&  toClass.isPrimitive())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  IllegalStateException  	17	2	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isInterface()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isInterface()  ||  toClass.isPrimitive())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  AssertionError  	17	2	replace
86	[BUG]  [BUGGY]  if(!cls.isInterface()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isInterface()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isInterface()  ||  toClass.isPrimitive())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  AssertionError  	17	2	replace
87	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls));  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls));	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls));    	non-compiled	[CE]  ';'  expected	47	None	replace
88	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  this.subtypeVarAssigns.get(cls));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  this.subtypeVarAssigns.get(cls));  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  this.subtypeVarAssigns.get(cls));	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(cls));    	non-compiled	[CE]  ';'  expected	47	None	replace
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	15	2	replace
90	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass)||!cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!cls.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	15	2	replace
91	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	98	None	replace
92	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>  [CE]  '('  or  '['  expected  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  '('  or  '['  expected	98	None	replace
93	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  ';'  expected	98	None	replace
94	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
95	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  If(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  If(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    toClass.isPrimitive())    {    If(toClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	4	None	add
96	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if(ToClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if(ToClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if(ToClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
97	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if(fromClass.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  if(fromClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    toClass.isPrimitive())    {    if(fromClass.isPrimitive()  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
98	[BUG]  [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();	  Collection    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.keySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
99	[BUG]  [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls);	  Collection    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.keySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
100	[BUG]  [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.keySet();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.keySet();	  Collection    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.keySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
101	[BUG]  [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	final  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
102	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(cls);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	97	None	replace
103	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive())  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(cls);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  ';'  expected	97	None	replace
104	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass  +  1);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(toClass  +  1);	  Class    <?>    toClass    =    subtypeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
105	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  typeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  typeVarAssigns.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  typeVarAssigns.isPrimitive())  {	  if(typeVarAssigns.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	33	None	replace
106	[BUG]  [BUGGY]  if(fromClass.isPrimitive()  ||  cls.isPrimitive())  {  [CE]  cannot  find  symbol  fromClass  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(fromClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(fromClass.isPrimitive()  ||  cls.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(cls.isPrimitive()    ||    fromClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  fromClass	70	None	replace
107	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls,  toClass);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(cls);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
108	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  super.getTypeArguments(cls);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  super.getTypeArguments(cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  super.getTypeArguments(cls);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(cls);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
109	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.getTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  subtypeVarAssigns.getTypeVarAssigns();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns.getTypeVarAssigns();	  Type    toClass    =    cls.getTypeVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
110	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.getTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  typeVarAssigns.getTypeVarAssigns();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typeVarAssigns.getTypeVarAssigns();	  Type    toClass    =    cls.getTypeVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
111	[BUG]  [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  cls.getTypeVarAssigns(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  cls.getTypeVarAssigns(subtypeVarAssigns);	  Type    toClass    =    cls.getTypeVarAssigns();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
112	[BUG]  [BUGGY]  If(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  If(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	If(cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    If(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	69	None	replace
113	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass);	  cls    =    ClassUtils.primitiveToWrapper(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
114	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns,  toClass);	  cls    =    ClassUtils.primitiveToWrapper(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
115	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
116	[BUG]  [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  typeVarAssigns.get(cls,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  typeVarAssigns.get(cls,  toClass);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
117	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVariables);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVariables);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(cls,  typeVariables);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
118	[BUG]  [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls,  subtypeVarAssigns))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
119	[BUG]  [BUGGY]  if(!isPrimitive(toClass))  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(toClass))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
120	[BUG]  [BUGGY]  if(isPrimitive(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isPrimitive(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isPrimitive(cls,  toClass))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	54	4	add
122	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	54	4	add
123	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	54	None	add
124	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  cannot  find  symbol  classUtils  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  classUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  cannot  find  symbol  classUtils	54	None	add
125	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	54	None	add
126	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass;  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass;  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass;  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  ')'  expected	54	None	add
127	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }	  cls    =    ClassUtils.primitiveToWrapper(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
128	[BUG]  [BUGGY]  Constructor  <?>  toClass  =  ConstructorUtils.getConstructor(cls);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  toClass  =  ConstructorUtils.getConstructor(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  toClass  =  ConstructorUtils.getConstructor(cls);	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
129	[BUG]  [BUGGY]  if(toClass.contains(cls)||!isAssignable(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||!isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||!isAssignable(cls,  toClass))  {	  if(typeVarAssigns.contains(cls)||!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
130	[BUG]  [BUGGY]  if(toClass.contains(cls)||!isAssignable(cls,  typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||!isAssignable(cls,  typeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||!isAssignable(cls,  typeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
131	[BUG]  [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
132	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }  [CE]  illegal  start  of  type  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
133	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    cls.isPrimitive())    {    if(toClass.isPrimitive()  ||  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
134	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  If(toClass.isPrimitive()  ||  cls.isPrimitive())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  If(toClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    cls.isPrimitive())    {    If(toClass.isPrimitive()  ||  cls.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	28	None	add
135	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(ToClass.isPrimitive()  ||  cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  if(ToClass.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    cls.isPrimitive())    {    if(ToClass.isPrimitive()  ||  cls.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
136	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(cls,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(cls,  toClass);	  cls    =    ClassUtils.primitiveToWrapper(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
137	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  subtypeVarAssigns);	  cls    =    ClassUtils.primitiveToWrapper(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
138	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  cls.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
139	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  cls.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
140	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
141	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass  ==  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass  ==  null  ||  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	84	2	replace
142	[BUG]  [BUGGY]  if(toClass  ==  null  ||  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass  ==  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass  ==  null  ||  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	84	2	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls!=  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(cls!=  null  ||  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	84	2	replace
144	[BUG]  [BUGGY]  if(cls!=  null  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls!=  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls!=  null  ||  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	84	2	replace
145	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls  ==  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(cls  ==  null  ||  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	84	2	replace
146	[BUG]  [BUGGY]  if(cls  ==  null  ||  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls  ==  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls  ==  null  ||  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	84	2	replace
147	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
148	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(ToClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(ToClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    if(ToClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
149	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  If(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  If(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    If(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  	non-compiled	[CE]  ';'  expected	95	None	add
150	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  type>();  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  type>();  }	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
151	[BUG]  [BUGGY]  if(!typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive())  {	  if(!typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	90	None	replace
152	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive()  &&  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.isPrimitive()  &&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.isPrimitive()  &&  toClass.isPrimitive())  {	  if(subtypeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
153	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||!typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	100	None	replace
154	[BUG]  [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||!typeVarAssigns.contains(subtypeVarAssigns))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||!typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	100	None	replace
155	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignableFrom(toClass))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))    {    if(!cls.isAssignableFrom(toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
156	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignedableFrom(toClass))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignedableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))    {    if(!cls.isAssignedableFrom(toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
157	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  If(!cls.isAssignableFrom(toClass))  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  If(!cls.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))    {    If(!cls.isAssignableFrom(toClass))  {	  	non-compiled	[CE]  ';'  expected	10	None	add
158	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignableFrom(fromClass))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignableFrom(fromClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))    {    if(!cls.isAssignableFrom(fromClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
159	[BUG]  [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  if(toClass!=  null  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  if(toClass!=  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=    null    ||    toClass.isPrimitive())    {    if(toClass!=  null  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
160	[BUG]  [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  if(toClass  ==  null  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  if(toClass  ==  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=    null    ||    toClass.isPrimitive())    {    if(toClass  ==  null  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
161	[BUG]  [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  if(toClass  >=  null  ||  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  if(toClass  >=  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=    null    ||    toClass.isPrimitive())    {    if(toClass  >=  null  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
162	[BUG]  [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  If(toClass!=  null  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  ||  toClass.isPrimitive())  {  If(toClass!=  null  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=    null    ||    toClass.isPrimitive())    {    If(toClass!=  null  ||  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	83	None	add
163	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass.class);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass.class);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass.class);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(ToClass.class);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
164	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls.class);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls.class);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(cls.class);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(ToClass.class);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
165	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(ToClass.class,  toClass);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(ToClass.class,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(ToClass.class,  toClass);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(ToClass.class);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
166	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isPrimitive()  &&!toClass.isPrimitive())  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	106	2	replace
167	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&!toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  &&!toClass.isPrimitive())  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	106	2	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)||!toClass.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isAssignableFrom(toClass)||!toClass.isAssignableFrom(toClass))  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	106	2	replace
169	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass)||!toClass.isAssignableFrom(toClass))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)||!toClass.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass)||!toClass.isAssignableFrom(toClass))  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	106	2	replace
170	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!subtypeVarAssigns.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  ||!subtypeVarAssigns.contains(toClass))  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
171	[BUG]  [BUGGY]  if(toClass.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||  subtypeVarAssigns.contains(cls))  {	  if(typeVarAssigns.contains(cls)||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
172	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.contains(cls))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  toClass.contains(cls))  {	  if(typeVarAssigns.contains(cls)||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
173	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  toClass.contains(cls))  {	  if(typeVarAssigns.contains(cls)||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	80	None	replace
174	[BUG]  [BUGGY]  if(toClass.contains(cls)||  toClass.contains(cls))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||  toClass.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||  toClass.contains(cls))  {	  if(typeVarAssigns.contains(cls)||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
175	[BUG]  [BUGGY]  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    typeVarAssigns    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
176	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    typeVarAssigns    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
177	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    typeVarAssigns    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
178	[BUG]  [BUGGY]  if(toClass.contains(cls)||  toClass.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||  toClass.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||  toClass.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
179	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  toClass.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
180	[BUG]  [BUGGY]  if(toClass.contains(cls)||  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||  subtypeVarAssigns.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
181	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.getSuperclass();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  subtypeVarAssigns.getSuperclass();  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns.getSuperclass();	  Type    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
182	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.getSuperclass();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  typeVarAssigns.getSuperclass();  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typeVarAssigns.getSuperclass();	  Type    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
183	[BUG]  [BUGGY]  Type  toClass  =  cls.getSubtype(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  cls.getSubtype(subtypeVarAssigns);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  cls.getSubtype(subtypeVarAssigns);	  Type    toClass    =    cls.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
184	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(cls.isPrimitive()  ||  cls.isPrimitive())  {	  if(toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	5	2	replace
186	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||  cls.isPrimitive())  {	  if(toClass.isPrimitive()    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	5	2	replace
187	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls,  toClass)||!subtypeVarAssigns.contains(toClass))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
188	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.contains(toClass))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
189	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  toClass);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(Class.class);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
190	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class  <?>.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class  <?>.class);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class  <?>.class);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(Class.class);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
191	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class  <?>,  Type>.class);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class  <?>,  Type>.class);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class  <?>,  Type>.class);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(Class.class);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
192	[BUG]  [BUGGY]  Collections.sort(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collections.sort(cls,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(cls,  subtypeVarAssigns);	  Collections.sort(cls);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
193	[BUG]  [BUGGY]  if(cls.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.contains(toClass))  {	  if(toClass.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
194	[BUG]  [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);	  if(toClass.isPrimitive())    {    cls    =    ClassUtils.primitiveToWrapper(toClass);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
195	[BUG]  [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);	  if(toClass.isPrimitive())    {    cls    =    ClassUtils.primitiveToWrapper(toClass);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
196	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  Collections.synchronizedMap(new  HashMap  <  TypeVariable  <?>,  Type>());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  Collections.synchronizedMap(new  HashMap  <  TypeVariable  <?>,  Type>());  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  Collections.synchronizedMap(new  HashMap  <  TypeVariable  <?>,  Type>());	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    new    HashMap    <    TypeVariable    <?>,    Type>();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
197	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>(toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>(toClass);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    new    HashMap    <    TypeVariable    <?>,    Type>();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
198	[BUG]  [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	final  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    new    HashMap    <    TypeVariable    <?>,    Type>();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
199	[BUG]  [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Class    <?>    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
200	[BUG]  [BUGGY]  if(cls.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.contains(subtypeVarAssigns))  {	  if(subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
201	[BUG]  [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	final  Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(toClass);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
202	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.get(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.get(toClass);	  Type    toClass    =    subtypeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
203	[BUG]  [BUGGY]  if(subtypeVarAssigns  ==  null)  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns  ==  null)  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns  ==  null)  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
204	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
205	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(toClass))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(toClass))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(toClass))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
206	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns,  toClass);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns,  toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns,  toClass);  }	  cls    =    ClassUtils.primitiveToWrapper(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
207	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  toClass);	  cls    =    ClassUtils.primitiveToWrapper(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
208	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(subtypeVarAssigns))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(subtypeVarAssigns))  {	  if(!cls.isAssignableFrom(toClass))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	11	None	replace
209	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)&&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isAssignableFrom(toClass)&&  toClass.isPrimitive())  {	  if(!cls.isAssignableFrom(toClass))    {    	compilable	  [FE]  IllegalStateException  	11	2	replace
210	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass)&&  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)&&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass)&&  toClass.isPrimitive())  {	  if(!cls.isAssignableFrom(toClass))    {    	compilable	  [FE]  IllegalStateException  	11	2	replace
211	[BUG]  [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  typesVarAssigns.get(cls,  subtypeVarAssigns);	  Class    <?>    toClass    =    typesVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
212	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(subtypeVarAssigns.containsKey(cls))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))    {    if(subtypeVarAssigns.containsKey(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
213	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(SubtypeVariable  <?>.containsKey(cls))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(SubtypeVariable  <?>.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))    {    if(SubtypeVariable  <?>.containsKey(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
214	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(SubtypeVariableUtils.containsKey(cls))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(SubtypeVariableUtils.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))    {    if(SubtypeVariableUtils.containsKey(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
215	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(typeVarAssigns.containsKey(cls))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(typeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))    {    if(typeVarAssigns.containsKey(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
216	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  If(subtypeVarAssigns.containsKey(cls))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  If(subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))    {    If(subtypeVarAssigns.containsKey(cls))  {	  	non-compiled	[CE]  ';'  expected	92	None	add
217	[BUG]  [BUGGY]  if(toClass.contains(cls)||!isAssignable(cls,  subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||!isAssignable(cls,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||!isAssignable(cls,  subtypeVarAssigns))  {	  if(subtypeVarAssigns.contains(cls)||!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
218	[BUG]  [BUGGY]  if(cls.contains(subtypeVarAssigns)||!isAssignable(cls,  toClass))  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.contains(subtypeVarAssigns)||!isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.contains(subtypeVarAssigns)||!isAssignable(cls,  toClass))  {	  if(subtypeVarAssigns.contains(cls)||!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
219	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||!isAssignable(toClass,  subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||!isAssignable(toClass,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||!isAssignable(toClass,  subtypeVarAssigns))  {	  if(subtypeVarAssigns.contains(cls)||!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
220	[BUG]  [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  subtypeVarAssigns.get(cls,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  subtypeVarAssigns.get(cls,  toClass);	  Type    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
221	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  if(!toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isPrimitive())  {  if(!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.isPrimitive())    {    if(!toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
222	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  if(!ToClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isPrimitive())  {  if(!ToClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.isPrimitive())    {    if(!ToClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
223	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  If(!toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isPrimitive())  {  If(!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.isPrimitive())    {    If(!toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	6	None	add
224	[BUG]  [BUGGY]  Constructor  <?>  toClass  =  Constructor.construct(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  toClass  =  Constructor.construct(cls,  subtypeVarAssigns);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  toClass  =  Constructor.construct(cls,  subtypeVarAssigns);	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
225	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  cls.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  cls.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
226	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
227	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  If(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  If(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    If(!cls.isPrimitive()  &&  toClass.isPrimitive())  {	  	non-compiled	[CE]  ';'  expected	12	None	add
228	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  if(!cls.isPrimitive()  |&  toClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  if(!cls.isPrimitive()  |&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    if(!cls.isPrimitive()  |&  toClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
229	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  toClass.contains(typeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  toClass.contains(typeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
230	[BUG]  [BUGGY]  if(toClass.contains(cls)||  toClass.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.contains(cls)||  toClass.contains(typeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.contains(cls)||  toClass.contains(typeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
231	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(toClass))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
232	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass,  toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass,  toClass);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
233	[BUG]  [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  final  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	final  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
234	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(subtypeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
235	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
236	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
237	[BUG]  [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(toClass.isAssignableFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(toClass.isAssignableFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isAssignableFrom(cls))    {    if(toClass.isAssignableFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
238	[BUG]  [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(ToClass.isAssignableFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(ToClass.isAssignableFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isAssignableFrom(cls))    {    if(ToClass.isAssignableFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
239	[BUG]  [BUGGY]  if(toClass.isAssignableFrom(cls))  {  If(toClass.isAssignableFrom(cls))  {  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isAssignableFrom(cls))  {  If(toClass.isAssignableFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isAssignableFrom(cls))    {    If(toClass.isAssignableFrom(cls))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
240	[BUG]  [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(toClass.isAssignedableFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(toClass.isAssignedableFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isAssignableFrom(cls))    {    if(toClass.isAssignedableFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
241	[BUG]  [BUGGY]  if(isAssignable(cls)||  toClass.isPrimitive())  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls)||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isAssignable(cls)||  toClass.isPrimitive())  {	  if(typeVarAssigns.contains(cls)||    toClass.isPrimitive())    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>)	3	None	replace
242	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)&&  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls)&&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)&&  toClass.isPrimitive())  {	  if(typeVarAssigns.contains(cls)||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	3	None	replace
243	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  cls.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls)||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  cls.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(Cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	108	None	replace
244	[BUG]  [BUGGY]  if(typeVarAssigns  ==  null)  {  if(!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns  ==  null)  {  if(!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns  ==  null)  {  if(!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    if(!cls.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
245	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  toClass.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	81	None	replace
246	[BUG]  [BUGGY]  if(isAssignable(cls,  toClass)||  typeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls,  toClass)||  typeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isAssignable(cls,  toClass)||  typeVarAssigns.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	81	None	replace
247	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls!=  null  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(cls!=  null  ||  cls.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	84	2	replace
249	[BUG]  [BUGGY]  if(cls!=  null  ||  cls.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls!=  null  ||  cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls!=  null  ||  cls.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	84	2	replace
250	[BUG]  [BUGGY]  if(subtypeVarAssigns!=  null)  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns!=  null)  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns!=  null)  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(cls.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	106	2	replace
252	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||!toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||!toClass.isPrimitive())  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	106	2	replace
253	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!subtypeVarAssigns.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  ||!subtypeVarAssigns.isPrimitive())  {	  if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
254	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(cls);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
255	[BUG]  [BUGGY]  if(isAssignable(cls,  toClass)||  subtypeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls,  toClass)||  subtypeVarAssigns.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isAssignable(cls,  toClass)||  subtypeVarAssigns.contains(toClass))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
256	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls)||  toClass.contains(typeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||  toClass.contains(typeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||    typeVarAssigns.contains(toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	94	None	replace
257	[BUG]  [BUGGY]  if(!isPrimitive(cls)&&  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls)&&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls)&&  toClass.isPrimitive())  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
258	[BUG]  [BUGGY]  if(!isPrimitive(cls)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls)||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls)||  toClass.isPrimitive())  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
259	[BUG]  [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns,  toClass))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  subtypeVarAssigns,  toClass))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)	24	None	replace
260	[BUG]  [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns)&&  toClass.isPrimitive())  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns)&&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  subtypeVarAssigns)&&  toClass.isPrimitive())  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)	24	None	replace
261	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignedFrom(toClass))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isAssignedFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))    {    if(!cls.isAssignedFrom(toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
262	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(subtypeVarAssigns);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
263	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||! "toClass.isPrimitive())  {  [CE]  unclosed  string  literal  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!toClass.isPrimitive())  {  if(!cls.isPrimitive()  ||! "toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||!toClass.isPrimitive())    {    if(!cls.isPrimitive()  ||! "toClass.isPrimitive())  {	  	non-compiled	[CE]  unclosed  string  literal	105	None	add
264	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    toClass.isPrimitive())    {    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
265	[BUG]  [BUGGY]  if(toClass!=  null)  {  if(!cls.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null)  {  if(!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=  null)  {  if(!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    If(!cls.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
266	[BUG]  [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collection  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(toClass);	  Collection    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.keySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
267	[BUG]  [BUGGY]  Class  <?>  toClass  =  types.get(cls,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  types.get(cls,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  types.get(cls,  subtypeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns  ==  null)  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(subtypeVarAssigns  ==  null)  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    toClass))    {    	compilable	  [FE]  AssertionError  	62	2	replace
269	[BUG]  [BUGGY]  if(subtypeVarAssigns  ==  null)  {  [FE]  AssertionError  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns  ==  null)  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns  ==  null)  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    toClass))    {    	compilable	  [FE]  AssertionError  	62	2	replace
270	[BUG]  [BUGGY]  HashMap  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  HashMap  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	HashMap  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.values();	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.values();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
271	[BUG]  [BUGGY]  if(typeVarAssigns.containsKey(cls)||  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.containsKey(cls)||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.containsKey(cls)||  toClass.isPrimitive())  {	  if(subtypeVarAssigns.containsKey(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	93	None	replace
272	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  types.get(toClass);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
273	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
274	[BUG]  [BUGGY]  if(isAssignable(cls)||  toClass.contains(cls))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls)||  toClass.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isAssignable(cls)||  toClass.contains(cls))  {	  if(typeVarAssigns.contains(cls)||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>)	80	None	replace
275	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls,  toClass)&&!subtypeVarAssigns.containsKey(cls))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
276	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&!typeVarAssigns.containsKey(toClass))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls,  toClass)&&!typeVarAssigns.containsKey(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls,  toClass)&&!typeVarAssigns.containsKey(toClass))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
277	[BUG]  [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(fromClass.isAssignableFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(fromClass.isAssignableFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isAssignableFrom(cls))    {    if(fromClass.isAssignableFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
278	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
279	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  }  [CE]  illegal  start  of  type  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  }	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
280	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(assigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(assigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(assigns);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
281	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns!=  null)  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns!=  null)  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }	  cls    =    ClassUtils.primitiveToWrapper(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
282	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&  subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&  subtypeVarAssigns.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  &&  subtypeVarAssigns.isPrimitive())  {	  if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
283	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  typeVarAssigns;  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  typeVarAssigns;  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  typeVarAssigns;	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    new    HashMap    <    TypeVariable    <?>,    Type>();    	non-compiled	[CE]  >  expected	39	None	replace
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  ||!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass!=  null  ||!toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	7	2	replace
285	[BUG]  [BUGGY]  if(toClass!=  null  ||!toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  ||!toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=  null  ||!toClass.isPrimitive())  {	  if(!toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	7	2	replace
286	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)&&  toClass.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)&&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)&&  toClass.isPrimitive())  {	  if(subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
287	[BUG]  [BUGGY]  Context.checkState(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Context.checkState(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Context.checkState(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  ';'  expected	82	None	replace
288	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  }	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
289	[BUG]  [BUGGY]  Class  <?>  toClass  =  classUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  classUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  classUtils.primitiveToWrapper(toClass);	  if(toClass.isPrimitive())    {    cls    =    ClassUtils.primitiveToWrapper(toClass);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
290	[BUG]  [BUGGY]  TypeVariable  <?>  toClass  =  subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  TypeVariable  <?>  toClass  =  subtypeVarAssigns.get(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	TypeVariable  <?>  toClass  =  subtypeVarAssigns.get(toClass);	  if(toClass.isPrimitive())    {    cls    =    ClassUtils.primitiveToWrapper(toClass);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
291	[BUG]  [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns.isPrimitive()))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  subtypeVarAssigns.isPrimitive()))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  subtypeVarAssigns.isPrimitive()))  {	  if(!typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
292	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass.isPrimitive()))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,boolean)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  toClass.isPrimitive()))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  toClass.isPrimitive()))  {	  if(!typeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,boolean)	90	None	replace
293	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(i);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(i);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(i);	  Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
294	[BUG]  [BUGGY]  if(!typeVarAssigns.contains(cls))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!typeVarAssigns.contains(cls))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!typeVarAssigns.contains(cls))  {  If(!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	65	None	replace
295	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()    ||    cls.isPrimitive())    {    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
296	[BUG]  [BUGGY]  Type  toClass  =  types.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  types.get(subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  types.get(subtypeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null)  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass!=  null)  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    ToClass))    {    	compilable	  [FE]  AssertionError  	63	2	replace
298	[BUG]  [BUGGY]  if(toClass!=  null)  {  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null)  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=  null)  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    ToClass))    {    	compilable	  [FE]  AssertionError  	63	2	replace
299	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	compilable	  [FE]  AssertionError  	96	2	replace
300	[BUG]  [BUGGY]  if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	compilable	  [FE]  AssertionError  	96	2	replace
301	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns!=  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(subtypeVarAssigns!=  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	compilable	  [FE]  IllegalStateException  	96	2	replace
302	[BUG]  [BUGGY]  if(subtypeVarAssigns!=  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns!=  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns!=  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	compilable	  [FE]  IllegalStateException  	96	2	replace
303	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
304	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls)||  subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
305	[BUG]  [BUGGY]  if(!toClass.contains(cls))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.contains(cls))  {	  if(toClass.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
306	[BUG]  [BUGGY]  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	ClassUtils.primitiveToWrapper(cls);	  if(toClass.isPrimitive())    {    If(toClass.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
307	[BUG]  [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	31	None	replace
308	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
309	[BUG]  [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  }  [CE]  illegal  start  of  type  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls,  subtypeVarAssigns);  }	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
310	[BUG]  [BUGGY]  TypeVariable  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  TypeVariable  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	TypeVariable  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
311	[BUG]  [BUGGY]  Type[]  cls  =  typeVarAssigns.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type[]  cls  =  typeVarAssigns.get(subtypeVarAssigns);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type[]  cls  =  typeVarAssigns.get(subtypeVarAssigns);	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
312	[BUG]  [BUGGY]  Type  cls  =  typeVarAssigns.get(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  cls  =  typeVarAssigns.get(subtypeVarAssigns);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  cls  =  typeVarAssigns.get(subtypeVarAssigns);	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
313	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  typeVarAssigns);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(Class.class);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
314	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  subtypeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(Class.class,  subtypeVarAssigns);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(Class.class);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
315	[BUG]  [BUGGY]  Type  toClass  =  cls.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  cls.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  cls.get(typeVarAssigns);	  Type    toClass    =    cls.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
316	[BUG]  [BUGGY]  Collections.sort(subtypeVarAssigns,  cls);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collections.sort(subtypeVarAssigns,  cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(subtypeVarAssigns,  cls);	  Collections.sort(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
317	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	54	None	add
318	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  TypeVariable  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  TypeVariable  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    TypeVariable  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	54	None	add
319	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(subtypeVarAssigns.containsKey(ls))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(subtypeVarAssigns.containsKey(ls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))    {    if(subtypeVarAssigns.containsKey(ls))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
320	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Class    <?>    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
321	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)||!isAssignable(cls,  subtypeVarAssigns))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls)||!isAssignable(cls,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)||!isAssignable(cls,  subtypeVarAssigns))  {	  if(typeVarAssigns.contains(cls)||!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	71	None	replace
322	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||  toClass.isPrimitive())  {  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
323	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  }  else  {  return  new  HashMap  <  TypeVariable  <?>  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  }  else  {  return  new  HashMap  <  TypeVariable  <?>  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  classUtils.primitiveToWrapper(toClass);  }  else  {  return  new  HashMap  <  TypeVariable  <?>	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    classUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  >  expected	58	None	replace
324	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(subtypeVarAssigns);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Type    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
325	[BUG]  [BUGGY]  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Type    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
326	[BUG]  [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.get(cls);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  this.subtypeVarAssigns.get(cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  this.subtypeVarAssigns.get(cls);	  Class    <?>    toClass    =    subtypeVarAssigns.get(cls);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
327	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||!cls.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass.isPrimitive()  ||!cls.isAssignableFrom(toClass))  {	  if(!cls.isAssignableFrom(toClass))    {    	compilable	  [FE]  AssertionError  	11	2	replace
328	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||!cls.isAssignableFrom(toClass))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||!cls.isAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||!cls.isAssignableFrom(toClass))  {	  if(!cls.isAssignableFrom(toClass))    {    	compilable	  [FE]  AssertionError  	11	2	replace
329	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
330	[BUG]  [BUGGY]  if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	99	None	replace
331	[BUG]  [BUGGY]  Type[]  cls  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type[]  cls  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type[]  cls  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
332	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>()  [CE]  ';'  expected  [FE]                                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>()  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>()	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  ';'  expected	99	None	replace
333	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(fromClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  if(fromClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    if(fromClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
334	[BUG]  [BUGGY]  parent  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  parent  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	parent  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
335	[BUG]  [BUGGY]  Constructor  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  illegal  start  of  type  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Constructor  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Constructor  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
336	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  subtypeVarAssigns.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  subtypeVarAssigns.contains(typeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.isPrimitive()  ||  subtypeVarAssigns.contains(typeVarAssigns))  {	  if(typeVarAssigns.isPrimitive()    ||    typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
337	[BUG]  [BUGGY]  Class  <?>  toClass  =  types.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  types.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  types.get(typeVarAssigns);	  Class    <?>    toClass    =    typeVarAssigns.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
338	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.contains(cls))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.isPrimitive()  ||  toClass.isPrimitive()  ||  toClass.contains(cls))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
339	[BUG]  [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.keySet();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collection  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.keySet();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collection  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.keySet();	  Collection    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.keySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
340	[BUG]  [BUGGY]  if(typeVarAssigns.containsKey(cls)||  typeVarAssigns.containsKey(cls))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.containsKey(cls)||  typeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.containsKey(cls)||  typeVarAssigns.containsKey(cls))  {	  if(subtypeVarAssigns.containsKey(cls))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	93	None	replace
341	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  fromClass.isPrimitive())  {  [CE]  cannot  find  symbol  fromClass  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||  fromClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||  fromClass.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(cls.isPrimitive()    ||    fromClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  fromClass	70	None	replace
342	[BUG]  [BUGGY]  if(fromClass.isPrimitive())  {  [CE]  cannot  find  symbol  fromClass  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(fromClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(fromClass.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    if(cls.isPrimitive()    ||    fromClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  fromClass	70	None	replace
343	[BUG]  [BUGGY]  Collections.sort(subtypeVarAssigns,  new  HashMap  <  TypeVariable  <?>,  Type>());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Collections.sort(subtypeVarAssigns,  new  HashMap  <  TypeVariable  <?>,  Type>());  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Collections.sort(subtypeVarAssigns,  new  HashMap  <  TypeVariable  <?>,  Type>());	  Collections.sort(subtypeVarAssigns,    toClass);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
344	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(typeVarAssigns);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
345	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isPrimitive()  ||!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    If(!cls.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
346	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!cls.isPrimitive())  {  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  ||!cls.isPrimitive())  {	  if(!cls.isPrimitive())    {    If(!cls.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
347	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  ||  subtypeVarAssigns.contains(cls))  {	  if(!cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
348	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  &&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(toClass!=  null  &&  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	84	2	replace
349	[BUG]  [BUGGY]  if(toClass!=  null  &&  toClass.isPrimitive())  {  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass!=  null  &&  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass!=  null  &&  toClass.isPrimitive())  {	  if(toClass!=    null    ||    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	84	2	replace
350	[BUG]  [BUGGY]  if(typeVarAssigns  ==  null)  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns  ==  null)  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns  ==  null)  {	  if(!isAssignable(cls,    toClass))    {    if(!isAssignable(cls,    ToClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	63	None	replace
351	[BUG]  [BUGGY]  if(!isPrimitive(cls,  toClass)&&!typeVarAssigns.contains(toClass))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls,  toClass)&&!typeVarAssigns.contains(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls,  toClass)&&!typeVarAssigns.contains(toClass))  {	  if(!isPrimitive(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
352	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  return  new  HashMap  <  TypeVariable  <  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  return  new  HashMap  <  TypeVariable  <  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  return  new  HashMap  <  TypeVariable  <  	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
353	[BUG]  [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(toClass.isAssignedFrom(cls))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isAssignableFrom(cls))  {  if(toClass.isAssignedFrom(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isAssignableFrom(cls))    {    if(toClass.isAssignedFrom(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
354	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getSubtypeArguments(cls);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getSubtypeArguments(cls);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getSubtypeArguments(cls);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(cls);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
355	[BUG]  [BUGGY]  Type  toClass  =  typeVarAssigns.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Type  toClass  =  typeVarAssigns.get(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Type  toClass  =  typeVarAssigns.get(typeVarAssigns);	  Type    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
356	[BUG]  [BUGGY]  if(!isPrimitive(cls)||!subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls)||!subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls)||!subtypeVarAssigns.contains(cls))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
357	[BUG]  [BUGGY]  if(!isPrimitive(cls)||!subtypeVarAssigns.containsKey(cls))  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isPrimitive(cls)||!subtypeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isPrimitive(cls)||!subtypeVarAssigns.containsKey(cls))  {	  if(!isPrimitive(cls))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
358	[BUG]  [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  if(toClass.isPrimitive())  {  if  (toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);  if(toClass.isPrimitive())  {  if  (toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	                cls        =        ClassUtils.primitiveToWrapper(toClass);        cls    =    ClassUtils.primitiveToWrapper(toClass);    if(toClass.isPrimitive())  {  if  (toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
359	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(supertypeVarAssigns.containsKey(cls))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(supertypeVarAssigns.containsKey(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))    {    if(supertypeVarAssigns.containsKey(cls))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
360	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||!isAssignable(cls,  subtypeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||!isAssignable(cls,  subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||!isAssignable(cls,  subtypeVarAssigns))  {	  if(!isAssignable(cls,    subtypeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Map<TypeVariable<?>,Type>)	24	None	replace
361	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(subtypeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	compilable	  [FE]  NullPointerException  	96	5	replace
362	[BUG]  [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	compilable	  [FE]  NullPointerException  	96	5	replace
363	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive()  ||  toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls,  toClass)||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(isAssignable(cls,  toClass)||  toClass.isPrimitive())  {	  if(typeVarAssigns.contains(cls)||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	3	2	replace
365	[BUG]  [BUGGY]  if(isAssignable(cls,  toClass)||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(isAssignable(cls,  toClass)||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(isAssignable(cls,  toClass)||  toClass.isPrimitive())  {	  if(typeVarAssigns.contains(cls)||    toClass.isPrimitive())    {    	compilable	  [FE]  AssertionError  	3	2	replace
366	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }  else  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }  else  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  }  else  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  cls    =    ClassUtils.primitiveToWrapper(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
367	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls))  {  If(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls))  {  If(cls.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls))  {  If(cls.isPrimitive()  ||  toClass.isPrimitive())  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    If(cls.isPrimitive()    ||    toClass.isPrimitive())    {    	non-compiled	[CE]  ';'  expected	69	None	replace
368	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)&&!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isAssignableFrom(toClass)&&!cls.isPrimitive())  {	  if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	13	2	replace
369	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass)&&!cls.isPrimitive())  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass)&&!cls.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass)&&!cls.isPrimitive())  {	  if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    	compilable	  [FE]  IllegalStateException  	13	2	replace
370	[BUG]  [BUGGY]  if(toClass.isPrimitive()  ||  toClass.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive()  ||  toClass.contains(cls)||  subtypeVarAssigns.contains(cls))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive()  ||  toClass.contains(cls)||  subtypeVarAssigns.contains(cls))  {	  if(typeVarAssigns.contains(cls)||    subtypeVarAssigns.contains(cls))    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
371	[BUG]  [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <  	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
372	[BUG]  [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVari  [CE]  >  expected  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVari  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(subtypeVarAssigns);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVari	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(subtypeVarAssigns);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  >  expected	98	None	replace
373	[BUG]  [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  <  [CE]  illegal  start  of  type  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  {  if(!cls.isPrimitive()  &&  toClass.isPrimitive())  <  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()    &&    toClass.isPrimitive())    {    if(!cls.isPrimitive()  &&  toClass.isPrimitive())  <	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
374	[BUG]  [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  subtypeVarAssigns.get(toClass)+  1;  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  subtypeVarAssigns.get(toClass)+  1;	  Class    <?>    toClass    =    subtypeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
375	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!isAssignable(cls,  toClass))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!isAssignable(cls,  toClass))  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
376	[BUG]  [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isIsAssignableFrom(toClass))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isAssignableFrom(toClass))  {  if(!cls.isIsAssignableFrom(toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isAssignableFrom(toClass))    {    if(!cls.isIsAssignableFrom(toClass))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
377	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls)&&!isAssignable(cls,  toClass))  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls)&&!isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls)&&!isAssignable(cls,  toClass))  {	  if(typeVarAssigns.contains(cls)||!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	71	None	replace
378	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass.getComponentType());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass.getComponentType());  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  getTypeArguments(toClass.getComponentType());	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
379	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>(1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>(1);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  subtypeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>(1);	  Map    <    TypeVariable    <?>,    Type>    subtypeVarAssigns    =    new    HashMap    <    TypeVariable    <?>,    Type>();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
380	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(null);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(null);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    subtypeVarAssigns.get(0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
381	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isInterface())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(cls.isInterface())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  IllegalStateException  	17	2	replace
382	[BUG]  [BUGGY]  if(cls.isInterface())  {  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isInterface())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isInterface())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  IllegalStateException  	17	2	replace
383	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!cls.isInterface())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	add	if(!cls.isPrimitive()  ||!cls.isInterface())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  AssertionError  	17	2	replace
384	[BUG]  [BUGGY]  if(!cls.isPrimitive()  ||!cls.isInterface())  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!cls.isPrimitive()  ||!cls.isInterface())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!cls.isPrimitive()  ||!cls.isInterface())  {	  if(!cls.isInterface())    {    	compilable	  [FE]  AssertionError  	17	2	replace
385	[BUG]  [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(cls);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	97	None	replace
386	[BUG]  [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.containsKey(cls))  {  Class  <?>  toClass  =  typeVarAssigns.get(cls);  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>()	  if(toClass.isPrimitive())    {    Class    <?>    toClass    =    typeVarAssigns.get(cls);    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  ';'  expected	97	None	replace
387	[BUG]  [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  subtypeVarAssigns.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(subtypeVarAssigns.isPrimitive()  ||  subtypeVarAssigns.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(subtypeVarAssigns.isPrimitive()  ||  subtypeVarAssigns.isPrimitive())  {	  if(subtypeVarAssigns.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
388	[BUG]  [BUGGY]  SortedMap  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  SortedMap  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	SortedMap  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  if(cls.isPrimitive()    ||    toClass.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
389	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(constructTypeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(constructTypeVarAssigns,  toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	cls  =  ClassUtils.primitiveToWrapper(constructTypeVarAssigns,  toClass);	  cls    =    ClassUtils.primitiveToWrapper(cls,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
390	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive())  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive())  {  If(!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	65	None	replace
391	[BUG]  [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  If(!isAssignable(cls,  toClass))  {  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!typeVarAssigns.containsKey(cls))  {  If(!isAssignable(cls,  toClass))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!typeVarAssigns.containsKey(cls))  {  If(!isAssignable(cls,  toClass))  {	  if(!isAssignable(cls,    toClass))    {    If(!isAssignable(cls,    toClass))    {    	non-compiled	[CE]  ';'  expected	65	None	replace
392	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Type    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
393	[BUG]  [BUGGY]  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(typeVarAssigns);	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Type    toClass    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
394	[BUG]  [BUGGY]  if(typeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	99	None	replace
395	[BUG]  [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns.containsKey(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	99	None	replace
396	[BUG]  [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Class  <?>,  Type>();  }	  if(toClass.isPrimitive())    {    if(toClass.isPrimitive())    {    return    new    HashMap    <    TypeVariable    <?>,    Class    <?>,    Type>();    }    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	99	None	replace
397	[BUG]  [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  this.subtypeVarAssigns.get(toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Map  <  TypeVariable  <?>,  Type>  toClass  =  this.subtypeVarAssigns.get(toClass);  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Map  <  TypeVariable  <?>,  Type>  toClass  =  this.subtypeVarAssigns.get(toClass);	  Map    <    TypeVariable    <?>,    Type>    toClass    =    typeVarAssigns.get(toClass);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
398	[BUG]  [BUGGY]  parent  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [CE]  illegal  start  of  type  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  parent  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	parent  <?>  toClass  =  ClassUtils.primitiveToWrapper(cls);	  if(!cls.isPrimitive())    {    Class    <?>    toClass    =    ClassUtils.primitiveToWrapper(cls);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
399	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(toClass.isPrimitive())  {  cls  =  ClassUtils.primitiveToWrapper(toClass);  }  else  {  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  }	          cls    =    ClassUtils.primitiveToWrapper(toClass);    Class    <?>    cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
400	[BUG]  [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!isAssignable(subtypeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!isAssignable(subtypeVarAssigns))  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(cls.isPrimitive()  ||  toClass.isPrimitive()  ||!isAssignable(subtypeVarAssigns))  {	  if(cls.isPrimitive()    ||    toClass.isPrimitive()    ||!typeVarAssigns.contains(subtypeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Map<TypeVariable<?>,Type>)	100	None	replace
401	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  if(!fromClass.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  if(!toClass.isPrimitive())  {  if(!fromClass.isPrimitive())  {  [BUGGY]        if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	if(!toClass.isPrimitive())    {    if(!fromClass.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
402	[BUG]  [BUGGY]  Class  <?>  toClass  =  toClass.getRawClass();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }        [BUGGY]  Class  <?>  toClass  =  toClass.getRawClass();  [BUGGY]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	658	658	2	replace	Class  <?>  toClass  =  toClass.getRawClass();	  if(toClass.isPrimitive())    {    cls    =    ClassUtils.primitiveToWrapper(toClass);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
