bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  AssertionError  	87	2	replace
2	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  AssertionError  	87	2	replace
3	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(toClass  instanceof  ParameterizedType)  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType)  {	if  (type  instanceof  ParameterizedType)  {  	non-compiled	[CE]  inconvertible  types	87	None	replace
4	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(!(type  instanceof  ParameterizedType))  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(!(type  instanceof  ParameterizedType))  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  IllegalStateException  	87	5	replace
5	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType))  {  [FE]  IllegalStateException  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(!(type  instanceof  ParameterizedType))  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType))  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  IllegalStateException  	87	5	replace
6	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(type  instanceof  ParameterizedType  <?>)  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>)  {	if  (type  instanceof  ParameterizedType)  {  	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	87	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	  	if  (type  instanceof  ParameterizedType)  {  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
8	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);		non-compiled	[CE]  ';'  expected	88	None	add
9	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();		non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	88	None	add
10	[BUG]  [BUGGY]    Type  bound  =  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  toClass.getRawType();  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  toClass.getRawType();		non-compiled	[CE]  cannot  find  symbol	88	None	add
11	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;		non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	88	None	add
12	[BUG]  [BUGGY]    Type  bound  =  toClass.getBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  toClass.getBounds();  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  toClass.getBounds();		non-compiled	[CE]  cannot  find  symbol	88	None	add
13	[BUG]  [BUGGY]    Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);		non-compiled	[CE]  incompatible  types	88	None	add
14	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;		non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	88	None	add
15	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterTypes();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterTypes();  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterTypes();		non-compiled	[CE]  cannot  find  symbol	88	None	add
16	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray())  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  &&  toClass.isArray())  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  IllegalStateException  	87	5	replace
17	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray())  {  [FE]  IllegalStateException  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray())  {  [BUGGY]  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isArray())  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  IllegalStateException  	87	5	replace
