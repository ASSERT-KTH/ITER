bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
2	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  types.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
3	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?  toGenericArrayType.getGenericComponentType()  :  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?  toGenericArrayType.getGenericComponentType()  :  toGenericArrayType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type  instanceof  Class  <?>?  toGenericArrayType.getGenericComponentType()  :  toGenericArrayType.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
4	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
5	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
6	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
7	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getDeclaredType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type.getDeclaredType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type.getDeclaredType();	      Type    toGenericArrayType    =    toGenericArrayType.getDeclaredType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
8	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?  toGenericArrayType.getDeclaredType()  :  toGenericArrayType.getDeclaredType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?  toGenericArrayType.getDeclaredType()  :  toGenericArrayType.getDeclaredType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type  instanceof  Class  <?>?  toGenericArrayType.getDeclaredType()  :  toGenericArrayType.getDeclaredType();	      Type    toGenericArrayType    =    toGenericArrayType.getDeclaredType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
9	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getDeclaredType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  types.getDeclaredType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  types.getDeclaredType();	      Type    toGenericArrayType    =    toGenericArrayType.getDeclaredType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
10	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getParameterType(type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getParameterType(type,  toComponentType);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getParameterType(type,  toComponentType);	      Type    toGenericArrayType    =    toGenericArrayType.getParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
11	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getParameterType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type.getParameterType(toGenericArrayType);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type.getParameterType(toGenericArrayType);	      Type    toGenericArrayType    =    toGenericArrayType.getParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
12	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getParameterType(type,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getParameterType(type,  type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getParameterType(type,  type);	      Type    toGenericArrayType    =    toGenericArrayType.getParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
13	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  type.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  type.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  type.getGenericComponentType();	      Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
14	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  types.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  types.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  types.getGenericComponentType();	      Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
15	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getGenericComponentType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getGenericComponentType();	      Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
16	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  componentType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  componentType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  componentType.getGenericComponentType();	      Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
17	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  type.getParameterTypes();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  type.getParameterTypes();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  type.getParameterTypes();	      Class    <?>    toComponentType    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
18	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  types.getParameterTypes();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  types.getParameterTypes();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  types.getParameterTypes();	      Class    <?>    toComponentType    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
19	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getParameterTypes();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getParameterTypes();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getParameterTypes();	      Class    <?>    toComponentType    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
20	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  toGenericArrayType.getRawClass();	  Class    <?>    cls    =    toGenericArrayType.getClass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  type.getClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	add	Class  <?>  cls  =  type.getClass();	  Class    <?>    cls    =    toGenericArrayType.getClass();    	compilable	  [FE]  AssertionError  	7	2	replace
22	[BUG]  [BUGGY]  Class  <?>  cls  =  type.getClass();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  type.getClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  type.getClass();	  Class    <?>    cls    =    toGenericArrayType.getClass();    	compilable	  [FE]  AssertionError  	7	2	replace
23	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getDeclaredClass();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getDeclaredClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  toGenericArrayType.getDeclaredClass();	  Class    <?>    cls    =    toGenericArrayType.getClass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
24	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getRawClass(),  toComponentType);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getRawClass(),  toComponentType);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getRawClass(),  toComponentType);	      Class    <?>    type    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	15	None	replace
25	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getRawClass()  ||  toGenericArrayType.getRawClass().isAssignableFrom(type);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getRawClass()  ||  toGenericArrayType.getRawClass().isAssignableFrom(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getRawClass()  ||  toGenericArrayType.getRawClass().isAssignableFrom(type);	      Class    <?>    type    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
26	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  toGenericArrayType.getClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  toGenericArrayType.getClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class    <?>    cls    =    toGenericArrayType.getClass();    Class  <?>  cls  =  toGenericArrayType.getClass();	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	add
27	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  ls  =  toGenericArrayType.getClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  ls  =  toGenericArrayType.getClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class    <?>    cls    =    toGenericArrayType.getClass();    Class  <?>  ls  =  toGenericArrayType.getClass();	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	add
28	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  fromGenericArrayType.getClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  fromGenericArrayType.getClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class    <?>    cls    =    toGenericArrayType.getClass();    Class  <?>  cls  =  fromGenericArrayType.getClass();	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	add
29	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  toGenericArrayType.getClass());  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  toGenericArrayType.getClass());  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class    <?>    cls    =    toGenericArrayType.getClass();    Class  <?>  cls  =  toGenericArrayType.getClass());	  	non-compiled	[CE]  ';'  expected	6	None	add
30	[BUG]  [BUGGY]  Class  <?>  cls  =  toComponentType.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toComponentType.getRawClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  toComponentType.getRawClass();	  Class    <?>    cls    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
31	[BUG]  [BUGGY]  Class  <?>  cls  =  type.getRawClass()  ||  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  type.getRawClass()  ||  toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  type.getRawClass()  ||  toGenericArrayType.getRawClass();	  Class    <?>    cls    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
32	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.getRawClass().isAssignableFrom(type);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.getRawClass().isAssignableFrom(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.getRawClass().isAssignableFrom(type);	      Class    <?>    type    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
33	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  +  1;  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  +  1;  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getRawClass()  +  1;	      Class    <?>    type    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
34	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.getRawClass().isArray();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.getRawClass().isArray();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.getRawClass().isArray();	      Class    <?>    type    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
35	[BUG]  [BUGGY]  Class  <?>  cls  =  toComponentType;  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toComponentType;  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  toComponentType;	  Class    <?>    cls    =    type;    	non-compiled	[CE]  incompatible  types	8	None	replace
36	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType;  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType;  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  toGenericArrayType;	  Class    <?>    cls    =    type;    	non-compiled	[CE]  incompatible  types	8	None	replace
37	[BUG]  [BUGGY]  Class  <?>  cls  =  type.getComponentType();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  type.getComponentType();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  type.getComponentType();	  Class    <?>    cls    =    type;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
38	[BUG]  [BUGGY]  Class  <?>  cls  =  type.getDeclaredType();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  type.getDeclaredType();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  type.getDeclaredType();	  Class    <?>    cls    =    type;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
39	[BUG]  [BUGGY]  Class  <?>  cls  =(Class  <?>)toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =(Class  <?>)toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =(Class  <?>)toGenericArrayType.getRawClass();	  Class    <?>    cls    =(Class    <?>)type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
40	[BUG]  [BUGGY]  Class  <?>  cls  =(Class  <?>)type.clone();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =(Class  <?>)type.clone();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =(Class  <?>)type.clone();	  Class    <?>    cls    =(Class    <?>)type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
41	[BUG]  [BUGGY]  Class  <?>  cls  =(Class  <?>)toComponentType.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =(Class  <?>)toComponentType.getRawClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =(Class  <?>)toComponentType.getRawClass();	  Class    <?>    cls    =(Class    <?>)type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
42	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  type.getGenericComponentType();	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
43	[BUG]  [BUGGY]  Type  toComponentType  =  types.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  types.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  types.getGenericComponentType();	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
44	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  cls.getGenericComponentType();	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
45	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
46	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getGenericComponentType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  getGenericComponentType(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  getGenericComponentType(type);	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
47	[BUG]  [BUGGY]  Type  bound  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  type.getRawClass();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  bound  =  type.getRawClass();	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
48	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getRawClass();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  toComponentType.getRawClass();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  toComponentType.getRawClass();	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
49	[BUG]  [BUGGY]  Type  toComponentType  =  type.getRawClass();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  type.getRawClass();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  type.getRawClass();	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
50	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getComponentType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getComponentType();	      Class    <?>    type    =    toGenericArrayType.getComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
51	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getReturnType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getReturnType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getReturnType();	      Class    <?>    type    =    toGenericArrayType.getComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
52	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getParameterType(0);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getParameterType(0);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getParameterType(0);	      Class    <?>    type    =    toGenericArrayType.getComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
53	[BUG]  [BUGGY]  Type  toComponentType  =  getGenericComponentType(type);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  getGenericComponentType(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  getGenericComponentType(type);	      Type    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	18	None	replace
54	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  toComponentType.getGenericParameterTypes();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  toComponentType.getGenericParameterTypes();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  toComponentType.getGenericParameterTypes();	      Class    <?>    toComponentType    =    toComponentType.getParameterTypes();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
55	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  toGENericArrayType.getClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  cls  =  toGENericArrayType.getClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class    <?>    cls    =    toGenericArrayType.getClass();    Class  <?>  cls  =  toGENericArrayType.getClass();	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	add
56	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  bls  =  toGenericArrayType.getClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  Class  <?>  bls  =  toGenericArrayType.getClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class    <?>    cls    =    toGenericArrayType.getClass();    Class  <?>  bls  =  toGenericArrayType.getClass();	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	add
57	[BUG]  [BUGGY]  Class  <?>  cls  =(Class  <?>)type.cloneTree();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =(Class  <?>)type.cloneTree();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =(Class  <?>)type.cloneTree();	  Class    <?>    cls    =(Class    <?>)type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
58	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  getGenericArrayType(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  getGenericArrayType(type);	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
59	[BUG]  [BUGGY]  Class  <?>  cls  =  type.toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  toGenericArrayType  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  type.toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  type.toGenericArrayType.getRawClass();	  Class    <?>    cls    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  toGenericArrayType	14	None	replace
60	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getGenericArrayType(type.getGenericComponentType());  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  getGenericArrayType(type.getGenericComponentType());  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  getGenericArrayType(type.getGenericComponentType());	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
61	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getParameterTypes();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getParameterTypes();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getParameterTypes();	      Class    <?>    toComponentType    =    toGenericArrayType.getParameterTypes();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
62	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  TypeUtils.getParameterTypes(type);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  TypeUtils.getParameterTypes(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  TypeUtils.getParameterTypes(type);	      Class    <?>    toComponentType    =    toGenericArrayType.getParameterTypes();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
63	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  TypeUtils.getGenericComponentType(type);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  TypeUtils.getGenericComponentType(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  TypeUtils.getGenericComponentType(type);	      Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
64	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
65	[BUG]  [BUGGY]  Type  bound  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  bound  =  toComponentType!=  null?  toComponentType.getRawClass()  :  type;	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
66	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getParameterType(0);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
67	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getGenericClass();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getGenericClass();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getGenericClass();	      Class    <?>    type    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
68	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getClass();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getClass();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getClass();	      Class    <?>    type    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
69	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getClass();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getClass();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getClass();	      Class    <?>    type    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
70	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getRawClass()  +  1;  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getRawClass()  +  1;  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getRawClass()  +  1;	      Class    <?>    type    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
71	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericComponentType();	      Class    <?>    type    =    toGenericArrayType.getComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
72	[BUG]  [BUGGY]  Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toGenericArrayType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toGenericArrayType.getGenericComponentType();	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
73	[BUG]  [BUGGY]  Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toGenericArrayType;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toGenericArrayType;  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toGenericArrayType;	      Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
74	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType.getGenericComponentType();	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
75	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType;  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType;	      Type    toGenericArrayType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
76	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getParameterType(toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type.getParameterType(toComponentType);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type.getParameterType(toComponentType);	      Type    toGenericArrayType    =    toGenericArrayType.getParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
77	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  this.toComponentType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  toComponentType  =  this.toComponentType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  toComponentType  =  this.toComponentType.getGenericComponentType();	      Class    <?>    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
78	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getDeclaredType()  :  toGenericArrayType.getDeclaredType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getDeclaredType()  :  toGenericArrayType.getDeclaredType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getDeclaredType()  :  toGenericArrayType.getDeclaredType();	      Type    toGenericArrayType    =    toGenericArrayType.getDeclaredType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
79	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getDeclaredType()  :  toGenericArrayType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getDeclaredType()  :  toGenericArrayType;  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getDeclaredType()  :  toGenericArrayType;	      Type    toGenericArrayType    =    toGenericArrayType.getDeclaredType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
80	[BUG]  [BUGGY]  Class  <?>  cls  =  this.type.getRawClass();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  this.type.getRawClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  this.type.getRawClass();	  Class    <?>    cls    =    type.getRawClass();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	14	None	replace
81	[BUG]  [BUGGY]  Class  <?>  cls  =  type.getDeclaredClass();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  cls  =  type.getDeclaredClass();  [BUGGY]      return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  cls  =  type.getDeclaredClass();	  Class    <?>    cls    =    type;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
82	[BUG]  [BUGGY]  Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType.getGenericComponentType();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toComponentType  =  type  instanceof  Class  <?>?((  Class  <?>)type).getGenericComponentType()  :  toComponentType.getGenericComponentType();	      Type    toComponentType    =    toComponentType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	18	None	replace
83	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.isArray();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.isArray();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.isArray();	      Class    <?>    type    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
84	[BUG]  [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.isAssignableFrom(type);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.isAssignableFrom(type);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Class  <?>  type  =  toComponentType.getRawClass()  ||  toComponentType.isAssignableFrom(type);	      Class    <?>    type    =    toComponentType.getRawClass();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
85	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
86	[BUG]  [BUGGY]  Type  bound  =  toComponentType!=  null?  type.getRawClass()  :  toComponentType.getRawClass();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    }  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  toComponentType!=  null?  type.getRawClass()  :  toComponentType.getRawClass();  [BUGGY]    Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	280	280	2	replace	Type  bound  =  toComponentType!=  null?  type.getRawClass()  :  toComponentType.getRawClass();	      Type    bound    =    toComponentType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
