bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(type,    toBound,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	20	None	replace
2	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  lowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  lowerBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	20	None	replace
3	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(type,    toBound,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	20	None	replace
4	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  lowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  lowerBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	20	None	replace
5	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	97	None	replace
6	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  toUpperBounds);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  toUpperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getRawTypes(),  toUpperBounds);	  Type[]    lowerBounds    =    toBound.getRawTypes(),    toLowerBounds);    	non-compiled	[CE]  ';'  expected	56	None	replace
7	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getRawTypes(),  typeVarAssigns);	  Type[]    lowerBounds    =    toBound.getRawTypes(),    toLowerBounds);    	non-compiled	[CE]  ';'  expected	56	None	replace
8	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds(),  toLowerBounds);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds(),  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds(),  toLowerBounds);	  Type[]    lowerBounds    =    toBound.getRawTypes(),    toLowerBounds);    	non-compiled	[CE]  ';'  expected	56	None	replace
9	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  toLowerBounds,  toUpperBounds);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  toLowerBounds,  toUpperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getRawTypes(),  toLowerBounds,  toUpperBounds);	  Type[]    lowerBounds    =    toBound.getRawTypes(),    toLowerBounds);    	non-compiled	[CE]  ';'  expected	56	None	replace
10	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);	  toBound    =    substituteTypeVariables(type,    toBound,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	11	None	replace
11	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  lowerBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  lowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  lowerBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(type,    toBound,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	11	None	replace
12	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBound.toLowerBounds();  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBound.toLowerBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBound.toLowerBounds();	  Type[]    toLowerBounds    =    toBound.toUpperBounds();    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	32	None	replace
13	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds,  toUpperBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
14	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(toBound,  lowerBounds);	  toBound    =    replacementTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
15	[BUG]  [BUGGY]  toBound  =  toBound.replaceAll(replacementTypeVariables(toBound,  lowerBounds));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceAll(replacementTypeVariables(toBound,  lowerBounds));  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceAll(replacementTypeVariables(toBound,  lowerBounds));	  toBound    =    replacementTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
16	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replacementTypeVariables(toBound,  lowerBounds);	  toBound    =    replacementTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
17	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(toBound,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replacementTypeVariables(toBound,  toUpperBounds);	  toBound    =    toLowerBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
18	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(toLowerBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(toLowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(toLowerBounds,  toLowerBounds);	  toBound    =    toLowerBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
19	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  toBound    =    replaceTypeVariables(bound,    toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
20	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toUpperBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toUpperBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  replaceTypeVariables(toBound,  toUpperBounds,  toLowerBounds);	  toBound    =    replaceTypeVariables(bound,    toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
21	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  toUpperBounds);	  toBound    =    replaceTypeVariables(bound,    toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
22	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(toBound,    upperBounds,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	81	None	replace
23	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);	  toBound    =    substituteTypeVariables(toBound,    upperBounds,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	81	None	replace
24	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toUpperBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toUpperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toUpperBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	66	None	replace
25	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	66	None	replace
26	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	66	None	replace
27	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  wildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  wildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toBound,  wildcardType);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    toWildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	14	None	replace
28	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toBound,  toWildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toBound,  toWildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(type,  toBound,  toWildcardType);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    toWildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	14	None	replace
29	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toBound,  upperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	62	None	replace
30	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    toBound);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
31	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	79	None	replace
32	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	79	None	replace
33	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  lowBounds  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  lowBounds	79	None	replace
34	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	38	None	replace
35	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRangeTypes();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getRangeTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getRangeTypes();	  Type[]    lowerBounds    =    toBound.getTypes();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	22	None	replace
36	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type    toBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	54	None	replace
37	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(bound,  toBound,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(bound,  toBound,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(bound,  toBound,  toLowerBounds);	  Type    toBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	54	None	replace
38	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  wildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  wildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  toLowerBounds,  wildcardType);	  Type    toBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	54	None	replace
39	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.getTypes();  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toLowerBounds.getTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toLowerBounds.getTypes();	  Type[]    lowerBounds    =    toLowerBounds.getTypes();    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	34	None	replace
40	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  lowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  lowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toBound,  lowerBounds);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	52	None	replace
41	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	52	None	replace
42	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	52	None	replace
43	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBounds.toArray(new  Type[toUpperBounds.size()  ]);  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBounds.toArray(new  Type[toUpperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBounds.toArray(new  Type[toUpperBounds.size()  ]);	  Type[]    toUpperBounds    =    toBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	36	None	replace
44	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    toUpperBounds    =    toBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	36	None	replace
45	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  +  1]);  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  +  1]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  +  1]);	  Type[]    toUpperBounds    =    toBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	36	None	replace
46	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(type,  toLowerBounds);	  toBound    =    toBound.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
47	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(bound,  toLowerBounds);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(bound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(bound,  toLowerBounds);	  toBound    =    toBound.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  bound	48	None	replace
48	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
49	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(toWildcardType,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(toWildcardType,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(toWildcardType,  toLowerBounds);	  toBound    =    toBound.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
50	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getAllTypes();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getAllTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getAllTypes();	  Type[]    toUpperBounds    =    toBound.getAllTypes();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	24	None	replace
51	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBound.getOwnerTypes();  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBound.getOwnerTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBound.getOwnerTypes();	  Type[]    toUpperBounds    =    toBound.getAllTypes();    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	24	None	replace
52	[BUG]  [BUGGY]  toBound  =  type.subtractTypeVariables(toBound,  toBound);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  type.subtractTypeVariables(toBound,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  type.subtractTypeVariables(toBound,  toBound);	  toBound    =    toBound.subtractTypeVariables(type,    toBound);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
53	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  type);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  type);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  type);	  toBound    =    toBound.subtractTypeVariables(type,    toBound);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
54	[BUG]  [BUGGY]  toBound  =  toBound,  type.subtractTypeVariables(toBound);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound,  type.subtractTypeVariables(toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound,  type.subtractTypeVariables(toBound);	  toBound    =    toBound.subtractTypeVariables(type,    toBound);    	non-compiled	[CE]  ';'  expected	28	None	replace
55	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  toBound    =    toUpperBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
56	[BUG]  [BUGGY]  toBound  =  toWildcardType.replacementTypeVariables(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toWildcardType.replacementTypeVariables(toBound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toWildcardType.replacementTypeVariables(toBound,  toLowerBounds);	  toBound    =    toUpperBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
57	[BUG]  [BUGGY]  toBound  =  toBound.replace(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replace(toBound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replace(toBound,  toLowerBounds);	  toBound    =    toUpperBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
58	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replace(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replace(toBound,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replace(toBound,  toUpperBounds);	  toBound    =    toUpperBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
59	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replace(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replace(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replace(toBound,  toLowerBounds,  typeVarAssigns);	  toBound    =    toUpperBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
60	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  toUpperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound,  toUpperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toBound,  toUpperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	5	None	replace
61	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toBound);	  Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	5	None	replace
62	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toUpperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toUpperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toUpperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	5	None	replace
63	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	45	None	replace
64	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
65	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
66	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
67	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  toUpperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  toUpperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  toUpperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
68	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]));  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]));	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    ]));    	non-compiled	[CE]  ';'  expected	40	None	replace
69	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toUpperBounds.size()  ]));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toUpperBounds.size()  ]));  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toUpperBounds.size()  ]));	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    ]));    	non-compiled	[CE]  ';'  expected	40	None	replace
70	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toBound,  lowerBounds);	  toBound    =    replaceTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
71	[BUG]  [BUGGY]  toBound  =  toBounds.replaceTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replaceTypeVariables(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replaceTypeVariables(toBound,  lowerBounds);	  toBound    =    replaceTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	63	None	replace
72	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(lowerBounds,  toBound);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(lowerBounds,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(lowerBounds,  toBound);	  toBound    =    replaceTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
73	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	6	None	replace
74	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toUpperBounds);	  toBound    =    toBound.subtractTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
75	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  toUpperBounds);	  toBound    =    toBound.subtractTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
76	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
77	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  toWildcardType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  toWildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(typeVarAssigns,  toWildcardType);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
78	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(type,  wildcardType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(type,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(type,  wildcardType);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
79	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(type,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(type,  typeVarAssigns);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
80	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);	  Type[]    toLowerBounds    =    toBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	replace
81	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  type);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  type);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  type);	  Type    toBound    =    substituteTypeVariables(toBound,    type);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	100	None	replace
82	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  type,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  type,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  type,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    type);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	100	None	replace
83	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  toUpperBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	47	None	replace
84	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  type,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  type,  toLowerBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	47	None	replace
85	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toWildcardType,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toWildcardType,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toWildcardType,  toLowerBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	47	None	replace
86	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  1]);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  1]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  1]);	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    +    1]);    	non-compiled	[CE]  ']'  expected	39	None	replace
87	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replaceAll(replacementTypeVariables(toBound,  toLowerBounds);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replaceAll(replacementTypeVariables(toBound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replaceAll(replacementTypeVariables(toBound,  toLowerBounds);	  toBound    =    toLowerBounds.replaceAll(replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  ')'  expected	50	None	replace
88	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replaceAll(replacementTypeVariables(toBound,  toLowerBounds));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replaceAll(replacementTypeVariables(toBound,  toLowerBounds));  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replaceAll(replacementTypeVariables(toBound,  toLowerBounds));	  toBound    =    toLowerBounds.replaceAll(replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
89	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  toUpperBounds));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  toUpperBounds));  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  toUpperBounds));	  toBound    =    toLowerBounds.replaceAll(replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
90	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  toUpperBounds);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  toUpperBounds);	  toBound    =    toLowerBounds.replaceAll(replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  ')'  expected	50	None	replace
91	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  1]);  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  1]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  1]);	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    +    1]);    	non-compiled	[CE]  ']'  expected	30	None	replace
92	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  lowerBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  lowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  lowerBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(toBound,    lowerBounds,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	80	None	replace
93	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	10	None	replace
94	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	10	None	replace
95	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBound.toArray(new  Type[toUpperBounds.size()  ]);  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBound.toArray(new  Type[toUpperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBound.toArray(new  Type[toUpperBounds.size()  ]);	  Type[]    toUpperBounds    =    toBound.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	35	None	replace
96	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    toUpperBounds    =    toBound.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	35	None	replace
97	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  +  1]);  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  +  1]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  +  1]);	  Type[]    toUpperBounds    =    toBound.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	35	None	replace
98	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getBaseTypes();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getBaseTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getBaseTypes();	  Type[]    upperBounds    =    toBounds.getTypes();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	71	None	replace
99	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	21	None	replace
100	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toUpperBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toUpperBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toUpperBounds.toUpperBounds();	  Type[]    upperBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	33	None	replace
101	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(typeVarAssigns,  toUpperBounds);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
102	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(type,  toLowerBounds);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
103	[BUG]  [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
104	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(toBound,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(toBound,  toUpperBounds);	  toBound    =    toBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
105	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	46	None	replace
106	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toUpperBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toUpperBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toUpperBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	46	None	replace
107	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBound.getUpperBounds();  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBound.getUpperBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBound.getUpperBounds();	  Type[]    toUpperBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	93	None	replace
108	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(toLowerBounds);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds(toLowerBounds);	  Type[]    lowerBounds    =    toBound.toUpperBounds(lowerBounds);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	67	None	replace
109	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(typeVarAssigns);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds(typeVarAssigns);	  Type[]    lowerBounds    =    toBound.toUpperBounds(lowerBounds);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	67	None	replace
110	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(bound);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(bound);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds(bound);	  Type[]    lowerBounds    =    toBound.toUpperBounds(lowerBounds);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	67	None	replace
111	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds(toLowerBounds);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds(toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toLowerBounds(toLowerBounds);	  Type[]    lowerBounds    =    toBound.toUpperBounds(lowerBounds);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	67	None	replace
112	[BUG]  [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBoundsReplacement(toBound,  toLowerBounds,  typeVarAssigns);	  toBound    =    toUpperBoundsReplacement(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
113	[BUG]  [BUGGY]  toBound  =  toUpperBoundsReplacement(bound,  toLowerBounds);  [CE]  cannot  find  symbol  bound  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBoundsReplacement(bound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBoundsReplacement(bound,  toLowerBounds);	  toBound    =    toUpperBoundsReplacement(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  bound	85	None	replace
114	[BUG]  [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBoundsReplacement(toBound,  lowerBounds);	  toBound    =    toUpperBoundsReplacement(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
115	[BUG]  [BUGGY]  toBound  =  toLowerBoundsReplacement(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBoundsReplacement(toBound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBoundsReplacement(toBound,  toLowerBounds);	  toBound    =    toUpperBoundsReplacement(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
116	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toLowerBounds,  typeVarAssigns);	  toBound    =    toBound.replaceTypeVariables(toLowerBounds,    toBound);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
117	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(toLowerBounds,    toBound);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
118	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toWildcardType,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toWildcardType,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toWildcardType,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(toLowerBounds,    toBound);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
119	[BUG]  [BUGGY]  toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.cloneTree().removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
120	[BUG]  [BUGGY]  toBound  =  toBound.cloneTree().getTypeVariables(typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.cloneTree().getTypeVariables(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.cloneTree().getTypeVariables(typeVarAssigns);	  toBound    =    toBound.cloneTree().removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
121	[BUG]  [BUGGY]  toBound  =  toBound.cloneTree(),  typeVarAssigns.removeTypeVariables(toBound);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.cloneTree(),  typeVarAssigns.removeTypeVariables(toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.cloneTree(),  typeVarAssigns.removeTypeVariables(toBound);	  toBound    =    toBound.cloneTree().removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  ';'  expected	60	None	replace
122	[BUG]  [BUGGY]  toBound  =  toBound.cloneTree().findTypeVariables(typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.cloneTree().findTypeVariables(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.cloneTree().findTypeVariables(typeVarAssigns);	  toBound    =    toBound.cloneTree().removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
123	[BUG]  [BUGGY]  Type  toBound  =  replacementTypeVariables(toBound,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replacementTypeVariables(toBound,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replacementTypeVariables(toBound,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	7	None	replace
124	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	96	None	replace
125	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	96	None	replace
126	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBound.toLowerBounds();  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBound.toLowerBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBound.toLowerBounds();	  Type[]    upperBounds    =    toBound.toLowerBounds();    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	43	None	replace
127	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray();	  Type[]    upperBounds    =    toLowerBounds.toArray();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	replace
128	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBound.toArray(new  Type[upperBounds.size()  ]);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBound.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBound.toArray(new  Type[upperBounds.size()  ]);	  Type[]    toLowerBounds    =    toBound.toArray();    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	72	None	replace
129	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.subtractTypeVariables(type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
130	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toWildcardType,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toWildcardType,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
131	[BUG]  [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  lowerBounds);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
132	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(toWildcardType,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(toWildcardType,  typeVarAssigns);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
133	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds,  toBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds,  toBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds,  toBounds);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toBounds	12	None	replace
134	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  lowerBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  lowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  lowerBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	12	None	replace
135	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns,  wildcardType);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns,  wildcardType);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	12	None	replace
136	[BUG]  [BUGGY]  toBound  =  toWildcardType.subtractTypeVariables(typeVarAssigns,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toWildcardType.subtractTypeVariables(typeVarAssigns,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toWildcardType.subtractTypeVariables(typeVarAssigns,  toUpperBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    toUpperBounds);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
137	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds,  toLowerBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    toUpperBounds);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
138	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(toWildcardType,  typeVarAssigns,  lowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(toWildcardType,  typeVarAssigns,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(toWildcardType,  typeVarAssigns,  lowerBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
139	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toLowerBounds,  lowerBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
140	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds,  lowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds,  lowerBounds);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	19	None	replace
141	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  wildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  wildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  wildcardType);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    wildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	8	None	replace
142	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(toLowerBounds,  typeVarAssigns);	  toBound    =    toBound.replacementTypeVariables(toLowerBounds,    toBound);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
143	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBound.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBound.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBound.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	29	None	replace
144	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toWildcardType,  toBound);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toWildcardType,  toBound);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(type,  toWildcardType,  toBound);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    wildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	13	None	replace
145	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(toWildcardType,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(toWildcardType,  toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(toWildcardType,  toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
146	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(lowerBounds,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(lowerBounds,  toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(lowerBounds,  toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
147	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toBound,  toUpperBounds);	  toBound    =    replaceTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
148	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toUpperBounds);	  toBound    =    replaceTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
149	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replaceTypeVariables(toBound,  toUpperBounds);	  toBound    =    replaceTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
150	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  upperBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toBound,  upperBounds);	  toBound    =    replaceTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
151	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toBound,  typeVarAssigns);	  toBound    =    replaceTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
152	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  upperBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  upperBounds);	  toBound    =    replaceTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
153	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replaceTypeVariables(toBound,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replaceTypeVariables(toBound,  toUpperBounds);	  toBound    =    toUpperBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
154	[BUG]  [BUGGY]  toBound  =  toWildcardType.replaceTypeVariables(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toWildcardType.replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toWildcardType.replaceTypeVariables(toBound,  toLowerBounds);	  toBound    =    toUpperBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
155	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(type,  toUpperBounds);	  toBound    =    toBound.replaceTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
156	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  toLowerBounds,  wildcardType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  toLowerBounds,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(type,  toLowerBounds,  wildcardType);	  toBound    =    toBound.replaceTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
157	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  toLowerBounds,  toUpperBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  toLowerBounds,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(type,  toLowerBounds,  toUpperBounds);	  toBound    =    toBound.replaceTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
158	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(bound,  toLowerBounds);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(bound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(bound,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  bound	1	None	replace
159	[BUG]  [BUGGY]  Type[]  toBounds  =  toBound.getTypes();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toBounds  =  toBound.getTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toBounds  =  toBound.getTypes();	  Type[]    upperBounds    =    toBound.getTypes();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
160	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toLowerBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toLowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toLowerBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	9	None	replace
161	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	replace
162	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  +  1]);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  +  1]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  +  1]);	  Type[]    toLowerBounds    =    toBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	78	None	replace
163	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  ]));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  ]));  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBounds.toArray(new  Type[toLowerBounds.size()  ]));	  Type[]    toLowerBounds    =    toBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  ';'  expected	78	None	replace
164	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(bound,  toLowerBounds);  [CE]  cannot  find  symbol  bound  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(bound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(bound,  toLowerBounds);	  toBound    =    toBound.subtractTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	27	None	replace
165	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(toWildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(toWildcardType,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(toWildcardType,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
166	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(lowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(lowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(lowerBounds,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
167	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toWildcardType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toWildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toWildcardType);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
168	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(wildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(wildcardType,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(wildcardType,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
169	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  wildcardType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  wildcardType);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
170	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	53	None	replace
171	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	53	None	replace
172	[BUG]  [BUGGY]  toBound  =  toBound.getTypeVariables().get(typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.getTypeVariables().get(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.getTypeVariables().get(typeVarAssigns);	  toBound    =    toBound.getTypeVariables().remove(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
173	[BUG]  [BUGGY]  toBound  =  toBound.getTypeVariables().get(typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.getTypeVariables().get(typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.getTypeVariables().get(typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.getTypeVariables().remove(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
174	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toUpperBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toUpperBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toUpperBounds,  toLowerBounds);	  toBound    =    toBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
175	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	69	None	replace
176	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toArray();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toArray();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toArray();	  Type[]    toUpperBounds    =    toBound.toArray();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	23	None	replace
177	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.toArray();  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toBound.toArray();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toBound.toArray();	  Type[]    toUpperBounds    =    toBound.toArray();    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	23	None	replace
178	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  _typeVarAssigns);  [CE]  cannot  find  symbol  _typeVarAssigns  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  _typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toBound,  _typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  _typeVarAssigns	94	None	replace
179	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  types);  [CE]  cannot  find  symbol  types  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  types);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toBound,  types);	  toBound    =    toBound.subtractTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  types	94	None	replace
180	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  typeVarAssigns,  wildcardType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  typeVarAssigns,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toBound,  typeVarAssigns,  wildcardType);	  toBound    =    toBound.subtractTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
181	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssign,  toLowerBounds);  [CE]  cannot  find  symbol  typeVarAssign  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssign,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(typeVarAssign,  toLowerBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssign	89	None	replace
182	[BUG]  [BUGGY]  toBound  =  toBounds.subtractTypeVariables(typeVarAssigns);  [CE]  cannot  find  symbol  toBounds  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.subtractTypeVariables(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.subtractTypeVariables(typeVarAssigns);	  toBound    =    typeVarAssigns.subtractTypeVariables(toBound);    	non-compiled	[CE]  cannot  find  symbol  toBounds	88	None	replace
183	[BUG]  [BUGGY]  toBound  =  toWildcardType.subtractTypeVariables(typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toWildcardType.subtractTypeVariables(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toWildcardType.subtractTypeVariables(typeVarAssigns);	  toBound    =    typeVarAssigns.subtractTypeVariables(toBound);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
184	[BUG]  [BUGGY]  toBound  =  tobound.subtractTypeVariables(typeVarAssigns);  [CE]  cannot  find  symbol  tobound  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  tobound.subtractTypeVariables(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  tobound.subtractTypeVariables(typeVarAssigns);	  toBound    =    typeVarAssigns.subtractTypeVariables(toBound);    	non-compiled	[CE]  cannot  find  symbol  tobound	88	None	replace
185	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBounds.toArray();	  Type[]    toLowerBounds    =    toUpperBounds.toArray();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	44	None	replace
186	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.getAllTypes();  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toBound.getAllTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toBound.getAllTypes();	  Type[]    toUpperBounds    =    toBound.getAllTypes();    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	24	None	replace
187	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	47	None	replace
188	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  toBound,  lowerBounds);	  toBound    =    toBound.subtractTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
189	[BUG]  [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
190	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns,  toBound);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns,  toBound);	  toBound    =    toBound.subtractTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
191	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replaceTypeVariables(toBound,  lowerBounds);	  toBound    =    toUpperBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
192	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replaceTypeVariables(toBound,  typeVarAssigns);	  toBound    =    toUpperBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
193	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replaceTypeVariables(type,  toLowerBounds);	  toBound    =    toUpperBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
194	[BUG]  [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  upperBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBoundsReplacement(toBound,  upperBounds);	  toBound    =    toUpperBoundsReplacement(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
195	[BUG]  [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  lowBounds);  [CE]  cannot  find  symbol  lowBounds  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  lowBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBoundsReplacement(toBound,  lowBounds);	  toBound    =    toUpperBoundsReplacement(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  lowBounds	85	None	replace
196	[BUG]  [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
197	[BUG]  [BUGGY]  toBound  =  type.subtractTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  type.subtractTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  type.subtractTypeVariables(toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
198	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(toBound,  lowerBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  replaceTypeVariables(toBound,  lowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  replaceTypeVariables(toBound,  lowerBounds,  toLowerBounds);	  toBound    =    replaceTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
199	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	66	None	replace
200	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	66	None	replace
201	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(upperBounds);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds(upperBounds);	  Type[]    lowerBounds    =    toBound.toUpperBounds(lowerBounds);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	67	None	replace
202	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(lowerBounds,  upperBounds);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds(lowerBounds,  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds(lowerBounds,  upperBounds);	  Type[]    lowerBounds    =    toBound.toUpperBounds(lowerBounds);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	67	None	replace
203	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds(upperBounds);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds(upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.toLowerBounds(upperBounds);	  Type[]    lowerBounds    =    toBound.toUpperBounds(lowerBounds);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	67	None	replace
204	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replacementTypeVariables(toBound,  typeVarAssigns);	  toBound    =    toLowerBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
205	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(toBound,  typeVarAssigns);	  toBound    =    toLowerBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
206	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(lowerBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(lowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(lowerBounds,  toLowerBounds);	  toBound    =    toBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
207	[BUG]  [BUGGY]  toBound  =  toBounds.replaceTypeVariables(lowerBounds,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replaceTypeVariables(lowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replaceTypeVariables(lowerBounds,  toLowerBounds);	  toBound    =    toBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	4	None	replace
208	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toLowerBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toLowerBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  typeVarAssigns.toLowerBounds();	  Type[]    upperBounds    =    toBound.toLowerBounds();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	43	None	replace
209	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toBound);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(typeVarAssigns,  toBound);	  toBound    =    toBound.replaceTypeVariables(toLowerBounds,    toBound);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
210	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(toUpperBounds,  toBound);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(toUpperBounds,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(toUpperBounds,  toBound);	  toBound    =    toBound.replacementTypeVariables(toLowerBounds,    toBound);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
211	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  replaceTypeVariables(toBound,  typeVarAssigns);	  toBound    =    replaceTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
212	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(name,  toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  name  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(name,  toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(name,  toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  name	26	None	replace
213	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    toLowerBounds    =    toBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	replace
214	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    toLowerBounds    =    toBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	replace
215	[BUG]  [BUGGY]  toBound  =  wildcardType.subtractTypeVariables(typeVarAssigns,  toBound);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  wildcardType.subtractTypeVariables(typeVarAssigns,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  wildcardType.subtractTypeVariables(typeVarAssigns,  toBound);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
216	[BUG]  [BUGGY]  toBound  =  wildcardType.subtractTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  wildcardType.subtractTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  wildcardType.subtractTypeVariables(toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
217	[BUG]  [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  upperBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  upperBounds);	  toBound    =    toBound.getTypeVariables().remove(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
218	[BUG]  [BUGGY]  toBound  =  typeVarAssigns.getTypeVariables().remove(toBound);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  typeVarAssigns.getTypeVariables().remove(toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  typeVarAssigns.getTypeVariables().remove(toBound);	  toBound    =    toBound.getTypeVariables().remove(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
219	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  type,  lowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  type,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  type,  lowerBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	20	None	replace
220	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(type,    toBound,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	20	None	replace
221	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  lowerBounds,  toLowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  lowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  lowerBounds,  toLowerBounds);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	46	None	replace
222	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(domain,  toLowerBounds);  [CE]  cannot  find  symbol  domain  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(domain,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(domain,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  domain	1	None	replace
223	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	53	None	replace
224	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	53	None	replace
225	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	53	None	replace
226	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  typeLowerBounds);  [CE]  cannot  find  symbol  typeLowerBounds  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  typeLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(typeVarAssigns,  typeLowerBounds);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol  typeLowerBounds	103	None	replace
227	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  upperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(typeVarAssigns,  upperBounds);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
228	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
229	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
230	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  upperBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  toLowerBounds,  upperBounds);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	9	None	replace
231	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  lowerBounds));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  lowerBounds));  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  lowerBounds));	  toBound    =    toLowerBounds.replaceAll(replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
232	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  upperBounds));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  upperBounds));  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replaceAll(replacementTypeVariables(toBound,  upperBounds));	  toBound    =    toLowerBounds.replaceAll(replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
233	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(type,  toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  replaceTypeVariables(type,  toBound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  replaceTypeVariables(type,  toBound,  toLowerBounds);	  toBound    =    replaceTypeVariables(bound,    toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
234	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(type,  lowerBounds);	  toBound    =    toBound.replaceTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
235	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  upperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(type,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(type,  upperBounds);	  toBound    =    toBound.replaceTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
236	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    wildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	8	None	replace
237	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]));  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]));	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    ]));    	non-compiled	[CE]  ';'  expected	40	None	replace
238	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	12	None	replace
239	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds,  toBound);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds,  toBound);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	12	None	replace
240	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  type,  wildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  type,  wildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  type,  wildcardType);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    wildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	13	None	replace
241	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  upperBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  upperBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  upperBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	21	None	replace
242	[BUG]  [BUGGY]  toBound  =  toBounds.replacementTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replacementTypeVariables(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replacementTypeVariables(toBound,  lowerBounds);	  toBound    =    replacementTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	86	None	replace
243	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(lowerBounds,  toBound);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(lowerBounds,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(lowerBounds,  toBound);	  toBound    =    replacementTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
244	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toBound.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toBound.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toBound.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	69	None	replace
245	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replacementTypeVariables(toBound,  lowerBounds);	  toBound    =    toUpperBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
246	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  upperBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replacementTypeVariables(toBound,  upperBounds);	  toBound    =    toUpperBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
247	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replacementTypeVariables(toBound,  typeVarAssigns);	  toBound    =    toUpperBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
248	[BUG]  [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toBound);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toBound);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    toBound);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
249	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  type);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  type);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    toBound);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
250	[BUG]  [BUGGY]  toBound  =  toUpperBounds.subtractTypeVariables(typeVarAssigns,  toBound);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.subtractTypeVariables(typeVarAssigns,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.subtractTypeVariables(typeVarAssigns,  toBound);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    toUpperBounds);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
251	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  lowBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  lowBounds  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  lowBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  lowBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(type,    toBound,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol  lowBounds	11	None	replace
252	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  wildcardType);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  upperBounds,  wildcardType);	  toBound    =    substituteTypeVariables(type,    toBound,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	11	None	replace
253	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.toArray(new  Type[upperBounds.size()  ]);  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toBound.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toBound.toArray(new  Type[upperBounds.size()  ]);	  Type[]    toUpperBounds    =    toBound.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	35	None	replace
254	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(upperBound,  typeVarAssigns);  [CE]  cannot  find  symbol  upperBound  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(upperBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(upperBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  upperBound	27	None	replace
255	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(domain,  toLowerBounds);  [CE]  cannot  find  symbol  domain  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(domain,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(domain,  toLowerBounds);	  toBound    =    toBound.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  domain	48	None	replace
256	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  lowerBounds);	  toBound    =    toBound.subtractTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
257	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  upperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(type,  upperBounds);	  toBound    =    toBound.subtractTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
258	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replace(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replace(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replace(toBound,  lowerBounds);	  toBound    =    toUpperBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
259	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replace(toBound,  upperBounds);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replace(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replace(toBound,  upperBounds);	  toBound    =    toUpperBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
260	[BUG]  [BUGGY]  toBound  =  toBound.replace(toBound,  upperBounds);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replace(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replace(toBound,  upperBounds);	  toBound    =    toUpperBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
261	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replace(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replace(toBound,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replace(toBound,  lowerBounds);	  toBound    =    toLowerBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
262	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replace(toBound,  upperBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replace(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replace(toBound,  upperBounds);	  toBound    =    toLowerBounds.replace(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
263	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  upperBounds);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes(),  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getRawTypes(),  upperBounds);	  Type[]    lowerBounds    =    toBound.getRawTypes(),    toLowerBounds);    	non-compiled	[CE]  ';'  expected	56	None	replace
264	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getTypes(),  toLowerBounds);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBound.getTypes(),  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBound.getTypes(),  toLowerBounds);	  Type[]    lowerBounds    =    toBound.getRawTypes(),    toLowerBounds);    	non-compiled	[CE]  ';'  expected	56	None	replace
265	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  lowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  lowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  lowerBounds);	  Type    toBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	54	None	replace
266	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  upperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  upperBounds);	  Type    toBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	54	None	replace
267	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  lowBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  lowBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  lowBounds);	  Type    toBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	54	None	replace
268	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	52	None	replace
269	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    toLowerBounds    =    toBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	78	None	replace
270	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toUpperBounds();  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toUpperBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  typeVarAssigns.toUpperBounds();	  Type[]    upperBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	33	None	replace
271	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	10	None	replace
272	[BUG]  [BUGGY]  toBound  =  wildcardType.subtractTypeVariables(type,  toBound);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  wildcardType.subtractTypeVariables(type,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  wildcardType.subtractTypeVariables(type,  toBound);	  toBound    =    toBound.subtractTypeVariables(type,    toBound);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
273	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(bound,  toBound);  [CE]  cannot  find  symbol  bound  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  replaceTypeVariables(bound,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  replaceTypeVariables(bound,  toBound);	  toBound    =    replaceTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  cannot  find  symbol  bound	3	None	replace
274	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	97	None	replace
275	[BUG]  [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  upperBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  upperBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
276	[BUG]  [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  typeVarAssigns.subtractTypeVariables(toBound,  toLowerBounds);	  toBound    =    typeVarAssigns.subtractTypeVariables(toBound);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
277	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    toUpperBounds    =    toBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	36	None	replace
278	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(lowerBounds,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(lowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(lowerBounds,  toLowerBounds);	  toBound    =    toBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
279	[BUG]  [BUGGY]  toBound  =  toBounds.replacementTypeVariables(lowerBounds,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replacementTypeVariables(lowerBounds,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replacementTypeVariables(lowerBounds,  toLowerBounds);	  toBound    =    toBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	84	None	replace
280	[BUG]  [BUGGY]  toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  toBound);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  toBound);	  toBound    =    toBound.cloneTree().removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
281	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowBounds,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowBounds,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  lowBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	96	None	replace
282	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	53	None	replace
283	[BUG]  [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toLowerBounds.replacementTypeVariables(type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toLowerBounds.replacementTypeVariables(type,  toLowerBounds);	  toBound    =    toLowerBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
284	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns,  upperBounds);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns,  upperBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    upperBounds);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
285	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toUpperBounds,  lowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toUpperBounds,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toUpperBounds,  lowerBounds);	  toBound    =    substituteTypeVariables(toBound,    toUpperBounds,    lowerBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	21	None	replace
286	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	29	None	replace
287	[BUG]  [BUGGY]  toBound  =  toBounds.replaceTypeVariables(toBound,  upperBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replaceTypeVariables(toBound,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replaceTypeVariables(toBound,  upperBounds);	  toBound    =    replaceTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	64	None	replace
288	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toUpperBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toUpperBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    toLowerBounds    =    toBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  toUpperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	68	None	replace
289	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  wildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  wildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toBound,  wildcardType);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    toWildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	14	None	replace
290	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(wildcardType,  type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(wildcardType,  type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(wildcardType,  type,  toLowerBounds);	  toBound    =    toBound.subtractTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
291	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  type,  upperBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  type,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  type,  upperBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	11	None	replace
292	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns,  upperBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns,  upperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toBound,  typeVarAssigns,  upperBounds);	  toBound    =    substituteTypeVariables(type,    toBound,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	11	None	replace
293	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(class,  toBound,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
294	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  2]);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  2]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  2]);	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    +    1]);    	non-compiled	[CE]  ']'  expected	39	None	replace
295	[BUG]  [BUGGY]  toBound  =  toBounds.replacementTypeVariables(type,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replacementTypeVariables(type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replacementTypeVariables(type,  toLowerBounds);	  toBound    =    toBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	84	None	replace
296	[BUG]  [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.getTypeVariables().remove(typeVarAssigns,  typeVarAssigns);	  toBound    =    toBound.getTypeVariables().remove(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
297	[BUG]  [BUGGY]  toBound  =  toBase.subtractTypeVariables(typeVarAssigns);  [CE]  cannot  find  symbol  toBase  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBase.subtractTypeVariables(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBase.subtractTypeVariables(typeVarAssigns);	  toBound    =    typeVarAssigns.subtractTypeVariables(toBound);    	non-compiled	[CE]  cannot  find  symbol  toBase	88	None	replace
298	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds,  typeVarAssigns);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds,  typeVarAssigns);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	10	None	replace
299	[BUG]  [BUGGY]  toBound  =  toBound.getTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.getTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.getTypeVariables(typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
300	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);	  Type[]    upperBounds    =    toLowerBounds.toArray();    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	replace
301	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  toBound    =    toUpperBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
302	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  lowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  lowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toBound,  lowerBounds);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	6	None	replace
303	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  upperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  upperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toBound,  upperBounds);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	6	None	replace
304	[BUG]  [BUGGY]  toBound  =  toBound.replaceAll(typeVarAssigns,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceAll(typeVarAssigns,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceAll(typeVarAssigns,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
305	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(width,  toLowerBounds);  [CE]  cannot  find  symbol  width  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(width,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(width,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  width	1	None	replace
306	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	69	None	replace
307	[BUG]  [BUGGY]  toBound  =  toBound.replacementTypeVariables(class,  toLowerBounds);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replacementTypeVariables(class,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replacementTypeVariables(class,  toLowerBounds);	  toBound    =    toBound.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
308	[BUG]  [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBoundsReplacement(toBound,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBoundsReplacement(toBound,  typeVarAssigns);	  toBound    =    toUpperBoundsReplacement(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
309	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns,  lowerBounds);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns,  lowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns,  lowerBounds);	  toBound    =    toBound.subtractTypeVariables(typeVarAssigns,    lowerBounds);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
310	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(toUpperBounds,  toBound);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(toUpperBounds,  toBound);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(toUpperBounds,  toBound);	  toBound    =    toBound.replaceTypeVariables(toLowerBounds,    toBound);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
311	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  bound,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  bound,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  bound,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	52	None	replace
312	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  2]);  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  2]);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  2]);	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    +    1]);    	non-compiled	[CE]  ']'  expected	30	None	replace
313	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  toWildcardType);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  toWildcardType);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  toWildcardType);	  Type    toBound    =    substituteTypeVariables(toBound,    toWildcardType,    wildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	13	None	replace
314	[BUG]  [BUGGY]  toBound  =  toBounds.replaceTypeVariables(type,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replaceTypeVariables(type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replaceTypeVariables(type,  toLowerBounds);	  toBound    =    toBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	4	None	replace
315	[BUG]  [BUGGY]  toBound  =  toBounds.replaceTypeVariables(toWildcardType,  toLowerBounds);  [CE]  cannot  find  symbol  toBounds  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBounds.replaceTypeVariables(toWildcardType,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBounds.replaceTypeVariables(toWildcardType,  toLowerBounds);	  toBound    =    toBounds.replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol  toBounds	4	None	replace
316	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(wildcardType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(wildcardType,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(wildcardType,  typeVarAssigns);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
317	[BUG]  [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.removeTypeVariables(typeVarAssigns,  type);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.removeTypeVariables(typeVarAssigns,  type);	  toBound    =    toBound.removeTypeVariables(typeVarAssigns,    wildcardType);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
318	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(wildcardType,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(wildcardType,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(wildcardType,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
319	[BUG]  [BUGGY]  toBound  =  toBound.replaceTypeVariables(wildcardType,  type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.replaceTypeVariables(wildcardType,  type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.replaceTypeVariables(wildcardType,  type,  toLowerBounds);	  toBound    =    toBound.replaceTypeVariables(type,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
320	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.subtractTypeVariables(class,  typeVarAssigns);	  toBound    =    toBound.subtractTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
321	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  lowerBounds,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  lowerBounds,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  lowerBounds,  toLowerBounds);	  Type    toBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	54	None	replace
322	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(type,  toLowerBounds,  toUpperBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(type,  toLowerBounds,  toUpperBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(type,  toLowerBounds,  toUpperBounds);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	9	None	replace
323	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds,  wildcardType);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds,  wildcardType);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds,  wildcardType);	  toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    upperBounds);    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	9	None	replace
324	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  toLowerBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  wildcardType,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    wildcardType);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	15	None	replace
325	[BUG]  [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(type,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toUpperBounds.replacementTypeVariables(type,  toLowerBounds);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toUpperBounds.replacementTypeVariables(type,  toLowerBounds);	  toBound    =    toUpperBounds.replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
326	[BUG]  [BUGGY]  toBound  =  toBound.cloneTree(),  wildcardType.removeTypeVariables(typeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.cloneTree(),  wildcardType.removeTypeVariables(typeVarAssigns);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.cloneTree(),  wildcardType.removeTypeVariables(typeVarAssigns);	  toBound    =    toBound.cloneTree().removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  ';'  expected	60	None	replace
327	[BUG]  [BUGGY]  toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  type);  [BUGGY]          for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	toBound  =  toBound.cloneTree().removeTypeVariables(typeVarAssigns,  type);	  toBound    =    toBound.cloneTree().removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
328	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]),  toUpperBounds);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {        [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]),  toUpperBounds);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	379	379	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]),  toUpperBounds);	  Type[]    toLowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    ]));    	non-compiled	[CE]  ';'  expected	40	None	replace
