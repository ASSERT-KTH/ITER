bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    typeArgs  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [CE]  cannot  find  symbol  typeArgs  [FE]    AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    typeArgs  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    typeArgs  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);		non-compiled	[CE]  cannot  find  symbol  typeArgs	6	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	add	    typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);		compilable	  [FE]  AssertionError  	6	2	add
3	[BUG]  [BUGGY]    typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);		compilable	  [FE]  AssertionError  	6	2	add
4	[BUG]  [BUGGY]    typeParams  =  getTypeParameters(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [CE]  cannot  find  symbol  typeParams  [FE]        AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    typeParams  =  getTypeParameters(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    typeParams  =  getTypeParameters(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);		non-compiled	[CE]  cannot  find  symbol  typeParams	6	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	add	    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }		compilable	  [FE]  AssertionError  	6	2	add
6	[BUG]  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }		compilable	  [FE]  AssertionError  	6	2	add
7	[BUG]  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }  else  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }  else  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  }  else  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <		non-compiled	[CE]  illegal  start  of  type	6	None	add
8	[BUG]  [BUGGY]  }  else  if(ownerType  instanceof  TypeVariable  <?>)  {  [CE]  variable  typeVarAssigns  might  not  have  been  initialized  [FE]    AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  if(ownerType  instanceof  TypeVariable  <?>)  {  [BUGGY]    typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	}  else  if(ownerType  instanceof  TypeVariable  <?>)  {	}  else  {  	non-compiled	[CE]  variable  typeVarAssigns  might  not  have  been  initialized	5	None	replace
9	[BUG]  [BUGGY]  }  else  if(!typeVarAssigns.contains(parameterizedOwnerType))  {  [CE]  cannot  find  symbol  parameterizedOwnerType  [FE]      AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  if(!typeVarAssigns.contains(parameterizedOwnerType))  {  [BUGGY]    typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	}  else  if(!typeVarAssigns.contains(parameterizedOwnerType))  {	}  else  {  	non-compiled	[CE]  cannot  find  symbol  parameterizedOwnerType	5	None	replace
10	[BUG]  [BUGGY]  }  else  if(typeVarAssigns  ==  null)  {  [CE]  variable  typeVarAssigns  might  not  have  been  initialized  [FE]        AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  if(typeVarAssigns  ==  null)  {  [BUGGY]    typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	}  else  if(typeVarAssigns  ==  null)  {	}  else  {  	non-compiled	[CE]  variable  typeVarAssigns  might  not  have  been  initialized	5	None	replace
11	[BUG]  [BUGGY]  }  else  if(ownerType  instanceof  TypeVariable  <?>  ||  ownerType  instanceof  TypeVariable  <?>)  {  [CE]  variable  typeVarAssigns  might  not  have  been  initialized  [FE]          AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  if(ownerType  instanceof  TypeVariable  <?>  ||  ownerType  instanceof  TypeVariable  <?>)  {  [BUGGY]    typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	}  else  if(ownerType  instanceof  TypeVariable  <?>  ||  ownerType  instanceof  TypeVariable  <?>)  {	}  else  {  	non-compiled	[CE]  variable  typeVarAssigns  might  not  have  been  initialized	5	None	replace
12	[BUG]  [BUGGY]    typeArg  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [CE]  cannot  find  symbol  typeArg  [FE]    AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    typeArg  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    typeArg  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);		non-compiled	[CE]  cannot  find  symbol  typeArg	6	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	add	    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }		compilable	  [FE]  AssertionError  	6	2	add
14	[BUG]  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>,  Type>();  }		compilable	  [FE]  AssertionError  	6	2	add
15	[BUG]  [BUGGY]  }  else  if(ownerType  instanceof  Class  <?>)  {  [CE]  variable  typeVarAssigns  might  not  have  been  initialized  [FE]    AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  if(ownerType  instanceof  Class  <?>)  {  [BUGGY]    typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	}  else  if(ownerType  instanceof  Class  <?>)  {	}  else  {  	non-compiled	[CE]  variable  typeVarAssigns  might  not  have  been  initialized	5	None	replace
16	[BUG]  [BUGGY]  }  else  if(!typeVarAssigns.contains(parameterizedType))  {  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  if(!typeVarAssigns.contains(parameterizedType))  {  [BUGGY]    typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	}  else  if(!typeVarAssigns.contains(parameterizedType))  {	}  else  {  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
17	[BUG]  [BUGGY]    Type[]  subtypeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    Type[]  subtypeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    Type[]  subtypeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);		non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>,Type>)	6	None	add
18	[BUG]  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>();  }  [CE]  >  expected  [FE]      AssertionError  [CONTEXT]  if  (ownerType  instanceof  ParameterizedType)  {  ParameterizedType  parameterizedOwnerType  =  (ParameterizedType)  ownerType;  typeVarAssigns  =  getTypeArguments(parameterizedOwnerType,  getRawType(parameterizedOwnerType),  subtypeVarAssigns);  [BUGGY]    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>();  }  [BUGGY]  }  else  {  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  ParameterizedType  parameterizedType  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  ParameterizedType  parameterizedOwnerType  parameterizedType  Type  ownerType  typeArg  boolean  Type[]  typeArgs  Class  cls  toClass  TypeVariable[]  typeParams  Map  subtypeVarAssigns  typeVarAssigns  int  i  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	1.0	615	615	2	replace	    if(typeVarAssigns  ==  null)  {  typeVarAssigns  =  new  HashMap  <  TypeVariable  <?>();  }		non-compiled	[CE]  >  expected	6	None	add
