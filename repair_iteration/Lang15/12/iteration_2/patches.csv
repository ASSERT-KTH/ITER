bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getDeclaredType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getDeclaredType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getDeclaredType();	  Type    toParameterizedType    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	108	None	replace
2	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getDeclaredType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getDeclaredType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getDeclaredType();	  Type    toParameterizedType    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	108	None	replace
3	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getDeclaredType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getDeclaredType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getDeclaredType();	  Type    toParameterizedType    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	108	None	replace
4	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
5	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toParameterizedType  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
6	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toParameterArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameterArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
7	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
8	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  fromParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  fromParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  fromParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
9	[BUG]  [BUGGY]  if(fromTypeVarAssigns.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  fromTypeVarAssigns  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(fromTypeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(fromTypeVarAssigns.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(fromTypeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  fromTypeVarAssigns	88	None	replace
10	[BUG]  [BUGGY]  if(toTypeVarAssigns.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  toTypeVarAssigns  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toTypeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toTypeVarAssigns.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(fromTypeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toTypeVarAssigns	88	None	replace
11	[BUG]  [BUGGY]  type.equals(toParameterizedType))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	type.equals(toParameterizedType))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(fromTypeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	88	None	replace
12	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    Class  <?>  toClass  =  getRawType(type,  toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	44	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  fromClass  =  getRawType(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    Class  <?>  fromClass  =  getRawType(type,  toParameterizedType);	  	compilable	  [FE]  AssertionError  	44	2	add
14	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  fromClass  =  getRawType(type,  toParameterizedType);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  fromClass  =  getRawType(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    Class  <?>  fromClass  =  getRawType(type,  toParameterizedType);	  	compilable	  [FE]  AssertionError  	44	2	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  itClass  =  getRawType(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    Class  <?>  itClass  =  getRawType(type,  toParameterizedType);	  	compilable	  [FE]  AssertionError  	44	2	add
16	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  itClass  =  getRawType(type,  toParameterizedType);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  itClass  =  getRawType(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    Class  <?>  itClass  =  getRawType(type,  toParameterizedType);	  	compilable	  [FE]  AssertionError  	44	2	add
17	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  toClass  =  getRawType(type,  fromParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Class  <?>  toClass  =  getRawType(type,  fromParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    Class  <?>  toClass  =  getRawType(type,  fromParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	44	None	add
18	[BUG]  [BUGGY]  tries.put(type,  new  AssertionError(toClass));  [CE]  cannot  find  symbol  toClass  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  tries.put(type,  new  AssertionError(toClass));  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	tries.put(type,  new  AssertionError(toClass));	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toClass	20	None	replace
19	[BUG]  [BUGGY]  tries.put(type,  new  AssertionError(toClass,  null));  [CE]  cannot  find  symbol  toClass  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  tries.put(type,  new  AssertionError(toClass,  null));  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	tries.put(type,  new  AssertionError(toClass,  null));	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toClass	20	None	replace
20	[BUG]  [BUGGY]  tries.put(type,  new  AssertionError(toClass),  null);  [CE]  cannot  find  symbol  toClass  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  tries.put(type,  new  AssertionError(toClass),  null);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	tries.put(type,  new  AssertionError(toClass),  null);	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toClass	20	None	replace
21	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
22	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toParameterizedType  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
23	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
24	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
25	[BUG]  [BUGGY]  Class  <?>  toClass  =  type.getRawType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  type.getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  type.getRawType(toParameterizedType);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
26	[BUG]  [BUGGY]  Class  <?>  toClass  =  toClass.getRawType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  toClass.getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  toClass.getRawType(toParameterizedType);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
27	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  toClass);  [CE]  variable  toClass  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  toClass);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toParameterizedType,  toClass);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    true;    }    	non-compiled	[CE]  variable  toClass  might  not  have  been  initialized	85	None	replace
28	[BUG]  [BUGGY]  if(toParameterizedType.isAssignable())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.isAssignable())  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.isAssignable())  {  return  false;  }	  return    false;    return    false;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
29	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toClass);  [CE]  no  suitable  method  found  for  getRawType(Class<CAP#1>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toClass);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toClass);	  if(toParameterizedType.equals(type))    {    return    false;    }    If(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Class<CAP#1>)	24	None	replace
30	[BUG]  [BUGGY]  Class  <?>  toClass  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  type.getRawType();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  type.getRawType();	  if(toParameterizedType.equals(type))    {    return    false;    }    If(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
31	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getType();	  Type    toParameterizedType    =    toParameterizedType.getType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	121	None	replace
32	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getType();	  Type    toParameterizedType    =    toParameterizedType.getType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	121	None	replace
33	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  unreachable  statement	103	None	add
34	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  Return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  Return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    Return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  not  a  statement	103	None	add
35	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  return(toParameterizedType!=  null)?  null  :  toParameterizedType.equals(type);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  return(toParameterizedType!=  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    return(toParameterizedType!=  null)?  null  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  unreachable  statement	103	None	add
36	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getAssignmentType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getAssignmentType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getAssignmentType();	  Type    toParameterizedType    =    type.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	49	None	replace
37	[BUG]  [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isUnknownType();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isUnknownType();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isUnknownType();	  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.isUnknownType();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
38	[BUG]  [BUGGY]  return  toParameterizedType.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return  toParameterizedType.isAssignableFrom(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return  toParameterizedType.isAssignableFrom(type);	  [Delete]    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
39	[BUG]  [BUGGY]  return  toParameterizedType.isAssignableFrom(toClass);  [CE]  cannot  find  symbol  toClass  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return  toParameterizedType.isAssignableFrom(toClass);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return  toParameterizedType.isAssignableFrom(toClass);	  [Delete]    	non-compiled	[CE]  cannot  find  symbol  toClass	2	None	replace
40	[BUG]  [BUGGY]  parent  ==  null?  null  :  parent.isAssignableFrom(toParameterizedType);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  null  :  parent.isAssignableFrom(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  null  :  parent.isAssignableFrom(toParameterizedType);	  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
41	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  toParameterizedType.getParent();  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  parent  ==  toParameterizedType.getParent();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  parent  ==  toParameterizedType.getParent();	  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
42	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  toParameterizedType.getParent();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  parent!=  toParameterizedType.getParent();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  parent!=  toParameterizedType.getParent();	  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
43	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  toParameterizedType.getParent())  {  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  parent  ==  toParameterizedType.getParent())  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  parent  ==  toParameterizedType.getParent())  {	  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
44	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getSuperclass(),  toClass);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getSuperclass(),  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getSuperclass(),  toClass);	  Type    toParameterizedType    =    type.toParameterizedType.getSuperclass();    	non-compiled	[CE]  ';'  expected	27	None	replace
45	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getReturnType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getReturnType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getReturnType();	  Type    toParameterizedType    =    type.toParameterizedType.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	27	None	replace
46	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeVarAssigns(type,  toParameterizedType);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeVarAssigns(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeVarAssigns(type,  toParameterizedType);	  Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
47	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  typeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  typeVarAssigns);	  Class    <?>    toClass    =    getTypeArguments(type,    toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	65	None	replace
48	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Type)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  type);	  Class    <?>    toClass    =    getTypeArguments(type,    toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Type)	65	None	replace
49	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  entry);  [CE]  cannot  find  symbol  entry  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  entry);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  entry);	  Class    <?>    toClass    =    getTypeArguments(type,    toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  entry	65	None	replace
50	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Class<CAP#1>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  toClass);	  Class    <?>    toClass    =    getTypeArguments(type,    toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Class<CAP#1>)	65	None	replace
51	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  parent.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  parent.equals(type))  {  return  false;  }	  parent!=    null    &&    parent.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
52	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getType();	  Type    toParameterizedType    =    fromTypeVarAssigns.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	50	None	replace
53	[BUG]  [BUGGY]  if(toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.isAssignableFrom(type))  {  return  false;  }	  if(type.isAssignableFrom(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
54	[BUG]  [BUGGY]  if(!toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(!toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(!toParameterizedType.isAssignableFrom(type))  {  return  false;  }	  if(type.isAssignableFrom(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
55	[BUG]  [BUGGY]  if(ToParameterizedType.isAssignableFrom(toParameterizedType))  {  return  false;  }  [CE]  cannot  find  symbol  ToParameterizedType  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(ToParameterizedType.isAssignableFrom(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(ToParameterizedType.isAssignableFrom(toParameterizedType))  {  return  false;  }	  if(type.isAssignableFrom(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ToParameterizedType	38	None	replace
56	[BUG]  [BUGGY]  Type  toParameter  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameter  =  type.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameter  =  type.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toParameter    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Type  toParameter  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toParameter    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	68	2	replace
58	[BUG]  [BUGGY]  Type  toParameter  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameter  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toParameter    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	68	2	replace
59	[BUG]  [BUGGY]  Class  <?>  toParameterizedType  =  getRawType(toParameterizedType);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toParameterizedType  =  getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toParameterizedType  =  getRawType(toParameterizedType);	  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))    {    return    false;    }    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	23	None	replace
60	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toClass,  null);  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toClass,  null);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toClass,  null);	  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))    {    return    false;    }    	non-compiled	[CE]  incompatible  types	23	None	replace
61	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType();	  Type    toParameterizedType    =    type.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	32	None	replace
62	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  toTypeArg);  [CE]  cannot  find  symbol  toTypeArg  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  toTypeArg);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toParameterizedType,  toTypeArg);	  Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    	non-compiled	[CE]  cannot  find  symbol  toTypeArg	72	None	replace
63	[BUG]  [BUGGY]  if(toParameterizedType.isAssignableFrom(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.isAssignableFrom(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.isAssignableFrom(type))  {  return  true;  }	  if(type.isAssignableFrom(toParameterizedType))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
64	[BUG]  [BUGGY]  if(!toParameterizedType.isAssignableFrom(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(!toParameterizedType.isAssignableFrom(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(!toParameterizedType.isAssignableFrom(type))  {  return  true;  }	  if(type.isAssignableFrom(toParameterizedType))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
65	[BUG]  [BUGGY]  Type  toTypeArg  =  fromParameterizedType.getRawType();  [CE]  cannot  find  symbol  fromParameterizedType  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  fromParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  fromParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toTypeArg    =    fromParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  fromParameterizedType	8	None	replace
66	[BUG]  [BUGGY]  Type  toTypeArg  =  typeVarAssigns.getRawType();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  typeVarAssigns.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  typeVarAssigns.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toTypeArg    =    fromParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
67	[BUG]  [BUGGY]  parent  ==  null?  null  :  parent.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  null  :  parent.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  null  :  parent.equals(type))  {  return  false;  }	  parent    ==    null?    null    :    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
68	[BUG]  [BUGGY]  Class  <?>  toTypeArg  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toTypeArg  =  type.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toTypeArg  =  type.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Class    <?>    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
69	[BUG]  [BUGGY]  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Class    <?>    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  incompatible  types	118	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(type.equals(toParameterizedType))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	}  else  if(type.equals(toParameterizedType))  {	  if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	17	2	replace
71	[BUG]  [BUGGY]  }  else  if(type.equals(toParameterizedType))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(type.equals(toParameterizedType))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	}  else  if(type.equals(toParameterizedType))  {	  if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	17	2	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(toParameterizedType.equals(type))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	}  else  if(toParameterizedType.equals(type))  {	  if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	17	2	replace
73	[BUG]  [BUGGY]  }  else  if(toParameterizedType.equals(type))  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(toParameterizedType.equals(type))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	}  else  if(toParameterizedType.equals(type))  {	  if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	17	2	replace
74	[BUG]  [BUGGY]  }  else  if(toClass.equals(toParameterizedType))  {  [CE]  cannot  find  symbol  toClass  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(toClass.equals(toParameterizedType))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	}  else  if(toClass.equals(toParameterizedType))  {	  if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toClass	17	None	replace
75	[BUG]  [BUGGY]  Type  <?>  toClass  =  getRawType(toParameterizedType);  [CE]  type  Type  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  <?>  toClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Type    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  type  Type  does  not  take  parameters	55	None	replace
76	[BUG]  [BUGGY]  Type  <?>  toClass  =  getRawType(type);  [CE]  type  Type  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  <?>  toClass  =  getRawType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  <?>  toClass  =  getRawType(type);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Type    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  type  Type  does  not  take  parameters	55	None	replace
77	[BUG]  [BUGGY]  Type  toTypeArg  =  type.getTypeArguments();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.getTypeArguments();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.getTypeArguments();	  Type    toTypeArg    =    toParameterizedType.getTypeArguments();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
78	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getTypeArguments();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getTypeArguments();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getTypeArguments();	  Type    toTypeArg    =    toParameterizedType.getTypeArguments();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	79	None	replace
79	[BUG]  [BUGGY]  Type  toTypeArg  =  types.getTypeArguments();  [CE]  cannot  find  symbol  types  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  types.getTypeArguments();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  types.getTypeArguments();	  Type    toTypeArg    =    toParameterizedType.getTypeArguments();    	non-compiled	[CE]  cannot  find  symbol  types	79	None	replace
80	[BUG]  [BUGGY]  Type  toTypeArg  =  type.getType();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.getType();	  Type    toTypeArg    =    toParameterizedType.getType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  type  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	type  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toTypeArg    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	6	2	replace
82	[BUG]  [BUGGY]  type  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  type  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	type  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toTypeArg    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	6	2	replace
83	[BUG]  [BUGGY]  Class  <?>  toClass  =  findRawType(type);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  findRawType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  findRawType(type);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    toClass    =    findRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
84	[BUG]  [BUGGY]  Class  <?>  toClass  =  findRawType(type,  toParameterizedType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  findRawType(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  findRawType(type,  toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    toClass    =    findRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
85	[BUG]  [BUGGY]  Class  <?>  toClass  =  findRawType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  findRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  findRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    toClass    =    findRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
86	[BUG]  [BUGGY]  Class  <?>  toClass  =  findRawType(toParameterizedType,  type);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  findRawType(toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  findRawType(toParameterizedType,  type);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    toClass    =    findRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
87	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getAssignedType(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getAssignedType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getAssignedType(type);	  Type    toParameterizedType    =    types.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	34	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	84	2	add
89	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	84	2	add
90	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  If(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  If(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    If(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	84	None	add
91	[BUG]  [BUGGY]  Type  toParameterizedType.handleType(toParameterizedType);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType.handleType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType.handleType(toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType);    	non-compiled	[CE]  ';'  expected	115	None	replace
92	[BUG]  [BUGGY]  type.handleType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  type.handleType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	type.handleType(toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
93	[BUG]  [BUGGY]  toParameterizedType.handleType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  toParameterizedType.handleType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	toParameterizedType.handleType(toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
94	[BUG]  [BUGGY]  Type  toTypeArg.handleType(toParameterizedType);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg.handleType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg.handleType(toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType);    	non-compiled	[CE]  ';'  expected	115	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
96	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
98	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
100	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  else  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  else  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
102	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  else  if(typeVarAssigns.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  else  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  else  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
104	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	86	2	add
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
106	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
108	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
109	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toClass.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  toClass  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toClass.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(toClass.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  toClass	19	None	add
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
111	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  else  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  else  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
113	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  else  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  else  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  else  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
114	[BUG]  [BUGGY]  Class  <?>  toClass  =  this.type.getRawType();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  this.type.getRawType();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  this.type.getRawType();	  return    false;    Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	63	None	replace
115	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getSuperclass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getSuperclass();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getSuperclass();	  Type    toParameterizedType    =    typeVarAssigns.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	89	None	replace
116	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  unreachable  statement	105	None	add
117	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  Return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  Return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    Return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  not  a  statement	105	None	add
118	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  return(toParameterizedType!=  null)?  false  :  toParameterizedType.equals(type);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  return(toParameterizedType!=  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    return(toParameterizedType!=  null)?  false  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  unreachable  statement	105	None	add
119	[BUG]  [BUGGY]  Type  toTypeArg  =  type.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Category    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
120	[BUG]  [BUGGY]  Category  toTypeArg  =  toParameterizedType.getRawType();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Category  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Category  toTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Category    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
121	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null,  typeVarAssigns);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null,  typeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null,  typeVarAssigns);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    null);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	12	None	replace
122	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null,  type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null,  type);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    null);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	12	None	replace
123	[BUG]  [BUGGY]  parentizedType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parentizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parentizedType.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
124	[BUG]  [BUGGY]  parentType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parentType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parentType.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
125	[BUG]  [BUGGY]  parent.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
126	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(type))  {  return  false;	  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
127	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(type))  {	  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
128	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getConstructor(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getConstructor(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getConstructor(type);	  Type    toParameterizedType    =    types.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	51	None	replace
129	[BUG]  [BUGGY]  result  =  toParameterizedType.isAssignableFrom(type);  [CE]  cannot  find  symbol  result  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  result  =  toParameterizedType.isAssignableFrom(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	result  =  toParameterizedType.isAssignableFrom(type);	  return    false;    if(type.isAssignableFrom(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  result	101	None	replace
130	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.type.assignable ",  toParameterizedType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.type.assignable ",  toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.throwAssertionError( "msg.bad.type.assignable ",  toParameterizedType);	  return    false;    if(type.isAssignableFrom(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	101	None	replace
131	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns,  entry);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns,  entry);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns,  entry);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    typeVarAssigns);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	13	None	replace
132	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  fromTypeVarAssigns);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  fromTypeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  fromTypeVarAssigns);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    typeVarAssigns);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	13	None	replace
133	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns,  null);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns,  null);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns,  null);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    typeVarAssigns);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	13	None	replace
134	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Type,Type)  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  type);	  Type    toTypeArg    =    getTypeArguments(type,    toParameterizedType.getRawType());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Type,Type)	78	None	replace
135	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toClass,  toParameterizedType.getRawType());  [CE]  cannot  find  symbol  toClass  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toClass,  toParameterizedType.getRawType());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toClass,  toParameterizedType.getRawType());	  Type    toTypeArg    =    getTypeArguments(type,    toParameterizedType.getRawType());    	non-compiled	[CE]  cannot  find  symbol  toClass	78	None	replace
136	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  toClass);  [CE]  cannot  find  symbol  toClass  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  toClass);	  Type    toTypeArg    =    getTypeArguments(type,    toParameterizedType.getRawType());    	non-compiled	[CE]  cannot  find  symbol  toClass	78	None	replace
137	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  null);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Type,<null>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  null);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType(),  null);	  Type    toTypeArg    =    getTypeArguments(type,    toParameterizedType.getRawType());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Type,<null>)	78	None	replace
138	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getSuperclass(),  toParameterizedType);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getSuperclass(),  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getSuperclass(),  toParameterizedType);	  Type    toParameterizedType    =    toParameterizedType.getSuperclass(),    type);    	non-compiled	[CE]  ';'  expected	122	None	replace
139	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type,  toClass);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type,  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type,  toClass);	  Type    toParameterizedType    =    toParameterizedType.getSuperclass(),    type);    	non-compiled	[CE]  ';'  expected	122	None	replace
140	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getSuperclass(),  toClass);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getSuperclass(),  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getSuperclass(),  toClass);	  Type    toParameterizedType    =    toParameterizedType.getSuperclass(),    type);    	non-compiled	[CE]  ';'  expected	122	None	replace
141	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getRawType();	  Type    toParameterizedType    =    typeVarAssigns.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	92	None	replace
142	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getDeclaredType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getDeclaredType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getDeclaredType();	  Type    toParameterizedType    =    type.toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	81	None	replace
143	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getConstructor(),  toClass);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getConstructor(),  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getConstructor(),  toClass);	  Type    toParameterizedType    =    type.toParameterizedType.getConstructor();    	non-compiled	[CE]  ';'  expected	81	None	replace
144	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  type.getRawValue();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  type.getRawValue();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  type.getRawValue();	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.getRawValue();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
145	[BUG]  [BUGGY]  return(toParameterizedType!=  null)?  null  :  toParameterizedType.getRawValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType!=  null)?  null  :  toParameterizedType.getRawValue();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType!=  null)?  null  :  toParameterizedType.getRawValue();	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.getRawValue();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
146	[BUG]  [BUGGY]  parent  ==  null?  null  :  parent.isAssignable(toParameterizedType);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  null  :  parent.isAssignable(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  null  :  parent.isAssignable(toParameterizedType);	  return    false;    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	60	None	replace
147	[BUG]  [BUGGY]  parent  ==  null?  null  :  parent.equals(type);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  null  :  parent.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  null  :  parent.equals(type);	  return    false;    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	60	None	replace
148	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    deClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	74	None	add
149	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  desClass  =  getRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  desClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    deClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  desClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	74	None	add
150	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  type  Type  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    deClass    =    getRawType(toParameterizedType);    Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  type  Type  does  not  take  parameters	74	None	add
151	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  variable  deClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    deClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  deClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	74	None	add
152	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(ToParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(ToParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    deClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(ToParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	74	None	add
153	[BUG]  [BUGGY]  if(toParameterizedType.isAssignableFrom(type)||  toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.isAssignableFrom(type)||  toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.isAssignableFrom(type)||  toParameterizedType.isAssignableFrom(type))  {  return  false;  }	  return    false;    if(toParameterizedType.isAssignableFrom(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
155	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
157	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
159	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
161	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    Class  <?>  toClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	22	2	add
163	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  Class  <?>  toClass  =  getRawType(toParameterizedType);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    Class  <?>  toClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	22	2	add
164	[BUG]  [BUGGY]  Type  toTypeArg  =  type.getRawType(),  toParameterizedType);  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.getRawType(),  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.getRawType(),  toParameterizedType);	  Type    toTypeArg    =    type.getRawType();    	non-compiled	[CE]  ';'  expected	41	None	replace
165	[BUG]  [BUGGY]  Type  toTypeArg  =  types.getRawType();  [CE]  cannot  find  symbol  types  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  types.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  types.getRawType();	  Type    toTypeArg    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol  types	41	None	replace
166	[BUG]  [BUGGY]  Class  <?>  toClass  =  getType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    deClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
167	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeVarAssigns(type,  toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeVarAssigns(type,  toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeVarAssigns(type,  toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    deClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
168	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;	  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
169	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;	  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
170	[BUG]  [BUGGY]  parentizedType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parentizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parentizedType.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(fromParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	117	None	replace
171	[BUG]  [BUGGY]  Constructor  <?>  toParameterizedType  =  toParameterizedType.getConstructor();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Constructor  <?>  toParameterizedType  =  toParameterizedType.getConstructor();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Constructor  <?>  toParameterizedType  =  toParameterizedType.getConstructor();	  if(toParameterizedType.equals(type))    {    return    false;    }    if(fromParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
172	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.equals(type);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.equals(type);	  parent    ==    null    &&    toParameterizedType.equals(type);    	non-compiled	[CE]  not  a  statement	98	None	replace
173	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.isAssignableFrom(type);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  toParameterizedType.isAssignableFrom(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.isAssignableFrom(type);	  parent    ==    null    &&    toParameterizedType.equals(type);    	non-compiled	[CE]  not  a  statement	98	None	replace
174	[BUG]  [BUGGY]  Type  toParameterArg  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterArg  =  type.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterArg  =  type.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toParameterArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  fromTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Type  fromTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    fromTypeArg    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	120	2	replace
176	[BUG]  [BUGGY]  Type  fromTypeArg  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  fromTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  fromTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    fromTypeArg    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	120	2	replace
177	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.getAssignedType();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  toParameterizedType.getAssignedType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.getAssignedType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    fromTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
178	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.equals(parent))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  toParameterizedType.equals(parent))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.equals(parent))  {  return  false;  }	  parent!=    null    &&    parent.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
179	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.equals(toParameterizedType))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  toParameterizedType.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.equals(toParameterizedType))  {  return  false;  }	  parent!=    null    &&    parent.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
180	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getOwnerClass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getOwnerClass();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getOwnerClass();	  Type    toParameterizedType    =    toParameterizedType.getOwnerClass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	112	None	replace
181	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getOwnerClass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getOwnerClass();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getOwnerClass();	  Type    toParameterizedType    =    toParameterizedType.getOwnerClass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	112	None	replace
182	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getOwnerClass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getOwnerClass();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getOwnerClass();	  Type    toParameterizedType    =    toParameterizedType.getOwnerClass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	112	None	replace
183	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  fromTypeArg);  [CE]  cannot  find  symbol  fromTypeArg  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  fromTypeArg);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(type,  fromTypeArg);	  Class    <?>    toClass    =    getRawType(type,    entry);    	non-compiled	[CE]  cannot  find  symbol  fromTypeArg	46	None	replace
184	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getRawType(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getRawType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getRawType(type);	  Type    toParameterizedType    =    types.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	31	None	replace
185	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getRawType(toParameterizedType);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getRawType(toParameterizedType);	  Type    toParameterizedType    =    types.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	31	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	15	2	add
187	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	15	2	add
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	15	2	add
189	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	15	2	add
190	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false	  	non-compiled	[CE]  ';'  expected	15	None	add
191	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
192	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
193	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
194	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
195	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
196	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  type  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  type  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  type  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
197	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    itClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	56	None	add
198	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [CE]  type  Type  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    itClass    =    getRawType(toParameterizedType);    Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  type  Type  does  not  take  parameters	56	None	add
199	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(ToParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(ToParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    itClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(ToParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	56	None	add
200	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [CE]  variable  itClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    itClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  itClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	56	None	add
201	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  class  <?>  itClass  =  getRawType(toParameterizedType);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  class  <?>  itClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    itClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(toParameterizedType);  class  <?>  itClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
202	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Class  <?>  toClass  =  getRawType(toParameterizedType,  type);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	71	None	add
203	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Type  <?>  toClass  =  getRawType(toParameterizedType,  type);  [CE]  type  Type  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Type  <?>  toClass  =  getRawType(toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Type  <?>  toClass  =  getRawType(toParameterizedType,  type);	  	non-compiled	[CE]  type  Type  does  not  take  parameters	71	None	add
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  fromClass  =  getRawType(toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Class  <?>  fromClass  =  getRawType(toParameterizedType,  type);	  	compilable	  [FE]  AssertionError  	71	2	add
205	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  fromClass  =  getRawType(toParameterizedType,  type);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  fromClass  =  getRawType(toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Class  <?>  fromClass  =  getRawType(toParameterizedType,  type);	  	compilable	  [FE]  AssertionError  	71	2	add
206	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  toClass  =  getRawType(ToParameterizedType,  type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  toClass  =  getRawType(ToParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Class  <?>  toClass  =  getRawType(ToParameterizedType,  type);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	71	None	add
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  itClass  =  getRawType(toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Class  <?>  itClass  =  getRawType(toParameterizedType,  type);	  	compilable	  [FE]  AssertionError  	71	2	add
208	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  itClass  =  getRawType(toParameterizedType,  type);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  itClass  =  getRawType(toParameterizedType,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Class  <?>  itClass  =  getRawType(toParameterizedType,  type);	  	compilable	  [FE]  AssertionError  	71	2	add
209	[BUG]  [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.equals(type);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.equals(type);	  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  true  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return(toParameterizedType  ==  null)?  true  :  toParameterizedType.equals(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	106	2	replace
211	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  true  :  toParameterizedType.equals(type);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  true  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  true  :  toParameterizedType.equals(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	106	2	replace
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.getRawType().equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return(toParameterizedType  ==  null)?  false  :  toParameterizedType.getRawType().equals(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	106	2	replace
213	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.getRawType().equals(type);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.getRawType().equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  false  :  toParameterizedType.getRawType().equals(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	106	2	replace
214	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type,  toClass);  [CE]  cannot  find  symbol  toClass  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type,  toClass);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type,  toClass);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol  toClass	106	None	replace
215	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getSuperclass(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getSuperclass(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getSuperclass(type);	  Type    toParameterizedType    =    types.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	26	None	replace
216	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.get(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.get(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.get(type);	  Type    toParameterizedType    =    types.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	26	None	replace
217	[BUG]  [BUGGY]  Type  toParameterizedType.handleMissingClass(toParameterizedType);  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  ';'  expected	113	None	replace
218	[BUG]  [BUGGY]  Type  toClass  =  toParameterizedType.handleMissingClass(toParameterizedType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toClass  =  toParameterizedType.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toClass  =  toParameterizedType.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
219	[BUG]  [BUGGY]  type.handleMissingClass(toParameterizedType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  type.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	type.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
220	[BUG]  [BUGGY]  toParameterizedType.handleMissingClass(toParameterizedType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  toParameterizedType.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	toParameterizedType.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
221	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Class  <?>  toClass  =  getRawType(type,  type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Class  <?>  toClass  =  getRawType(type,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    type);    Class  <?>  toClass  =  getRawType(type,  type);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	47	None	add
222	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Class  <?>  toClass  =  getRawType(type,  type;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Class  <?>  toClass  =  getRawType(type,  type;  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    type);    Class  <?>  toClass  =  getRawType(type,  type;	  	non-compiled	[CE]  ')'  expected	47	None	add
223	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Type  <?>  toClass  =  getRawType(type,  type);  [CE]  type  Type  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Type  <?>  toClass  =  getRawType(type,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    type);    Type  <?>  toClass  =  getRawType(type,  type);	  	non-compiled	[CE]  type  Type  does  not  take  parameters	47	None	add
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Class  <?>  fromClass  =  getRawType(type,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class    <?>    toClass    =    getRawType(type,    type);    Class  <?>  fromClass  =  getRawType(type,  type);	  	compilable	  [FE]  AssertionError  	47	2	add
225	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Class  <?>  fromClass  =  getRawType(type,  type);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  Class  <?>  fromClass  =  getRawType(type,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    type);    Class  <?>  fromClass  =  getRawType(type,  type);	  	compilable	  [FE]  AssertionError  	47	2	add
226	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getAssignedType(),  toParameterizedType);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getAssignedType(),  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getAssignedType(),  toParameterizedType);	  Type    toParameterizedType    =    toParameterizedType.getAssignedType(),    type);    	non-compiled	[CE]  ';'  expected	109	None	replace
227	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getAssignedType(),  type,  toClass);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getAssignedType(),  type,  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getAssignedType(),  type,  toClass);	  Type    toParameterizedType    =    toParameterizedType.getAssignedType(),    type);    	non-compiled	[CE]  ';'  expected	109	None	replace
228	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getRawType(),  type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getRawType(),  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getRawType(),  type);	  Type    toParameterizedType    =    toParameterizedType.getAssignedType(),    type);    	non-compiled	[CE]  ';'  expected	109	None	replace
229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawType().equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawType().equals(type);	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	104	2	replace
230	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawType().equals(type);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawType().equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawType().equals(type);	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	104	2	replace
231	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type,  toClass);  [CE]  cannot  find  symbol  toClass  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type,  toClass);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type,  toClass);	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol  toClass	104	None	replace
232	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getName().equals(type);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getName().equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getName().equals(type);	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
233	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  final  Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	final  Class  <?>  toClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    toClass    =    getRawType(toParameterizedType);    	compilable	  [FE]  AssertionError  	52	2	replace
234	[BUG]  [BUGGY]  final  Class  <?>  toClass  =  getRawType(toParameterizedType);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  final  Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	final  Class  <?>  toClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    toClass    =    getRawType(toParameterizedType);    	compilable	  [FE]  AssertionError  	52	2	replace
235	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns,  toClass);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns,  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns,  toClass);	  Type    toParameterizedType    =    getTypeArguments(type,    fromTypeVarAssigns);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	73	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
237	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
239	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
241	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
242	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  If(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  If(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    If(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	94	None	add
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
244	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
245	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
246	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
247	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toClass.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  toClass  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toClass.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(toClass.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol  toClass	35	None	add
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
249	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
250	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    fromClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	53	None	add
251	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [CE]  variable  fromClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    fromClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  fromClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	53	None	add
252	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [CE]  type  Type  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    fromClass    =    getRawType(toParameterizedType);    Type  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  type  Type  does  not  take  parameters	53	None	add
253	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [CE]  variable  fromClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    fromClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  fromClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	53	None	add
254	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getRawType(),  toClass);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getRawType(),  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getRawType(),  toClass);	  Type    toParameterizedType    =    type.toParameterizedType.getRawType();    	non-compiled	[CE]  ';'  expected	93	None	replace
255	[BUG]  [BUGGY]  Class  <?>  type  =  getRawType(toParameterizedType);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  type  =  getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  type  =  getRawType(toParameterizedType);	  if(type.equals(toParameterizedType))    {    return    false;    }    Class    <?>    type    =    getRawType(toParameterizedType);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	18	None	replace
256	[BUG]  [BUGGY]  Category  <?>  type  =  getRawType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Category  <?>  type  =  getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Category  <?>  type  =  getRawType(toParameterizedType);	  if(type.equals(toParameterizedType))    {    return    false;    }    Class    <?>    type    =    getRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
257	[BUG]  [BUGGY]  Class  <?>  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toParameterizedType  =  getTypeArguments(type,  toClass,  null);	  return    false;    Type    toParameterizedType    =    getTypeArguments(type,    toClass,    null);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	82	None	replace
258	[BUG]  [BUGGY]  Class  <?>  toParameterizedType  =  getRawType(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toParameterizedType  =  getRawType(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toParameterizedType  =  getRawType(type);	  return    false;    Type    toParameterizedType    =    getTypeArguments(type,    toClass,    null);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	82	None	replace
259	[BUG]  [BUGGY]  aughtExceptionHandler.handleType(type,  toClass);  [CE]  cannot  find  symbol  toClass  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleType(type,  toClass);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleType(type,  toClass);	  aughtExceptionHandler.handleType(toParameterizedType,    toClass);    	non-compiled	[CE]  cannot  find  symbol  toClass	114	None	replace
260	[BUG]  [BUGGY]  aughtExceptionHandler.handleType(toClass,  toParameterizedType);  [CE]  cannot  find  symbol  toClass  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleType(toClass,  toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleType(toClass,  toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType,    toClass);    	non-compiled	[CE]  cannot  find  symbol  toClass	114	None	replace
261	[BUG]  [BUGGY]  aughtExceptionHandler.handleType(type,  toParameterizedType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleType(type,  toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleType(type,  toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType,    toClass);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	114	None	replace
262	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  type,  null);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  type,  null);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  type,  null);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    type);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	14	None	replace
263	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toClass);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toClass);	  Class    <?>    toClass    =    getTypeArguments(type);    	non-compiled	[CE]  incompatible  types	64	None	replace
264	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  entry);  [CE]  cannot  find  symbol  entry  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  entry);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  entry);	  Class    <?>    toClass    =    getTypeArguments(type);    	non-compiled	[CE]  cannot  find  symbol  entry	64	None	replace
265	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Type)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  type);	  Class    <?>    toClass    =    getTypeArguments(type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Type)	64	None	replace
266	[BUG]  [BUGGY]  Constructor  <?>  toParameterizedType  =  toParameterizedType.getRawType();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Constructor  <?>  toParameterizedType  =  toParameterizedType.getRawType();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Constructor  <?>  toParameterizedType  =  toParameterizedType.getRawType();	  if(toParameterizedType.equals(type))    {    return    false;    }    if(ToParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
267	[BUG]  [BUGGY]  Type  toTypeArg  =  type.getDeclaredType();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.getDeclaredType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.getDeclaredType();	  Type    toTypeArg    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
268	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.getDeclaredType(),  type);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  toParameterizedType.getDeclaredType(),  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.getDeclaredType(),  type);	  Type    toTypeArg    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  ';'  expected	42	None	replace
269	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  type.getSuperclass());  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  type.getSuperclass());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  type.getSuperclass());	  Type    toParameterizedType    =    getTypeArguments(type.getSuperclass());    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	90	None	replace
270	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  type);	  Type    toParameterizedType    =    getTypeArguments(type.getSuperclass());    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	90	None	replace
271	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  toClass);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  toClass);	  Type    toParameterizedType    =    getTypeArguments(type.getSuperclass());    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	90	None	replace
272	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getClass());  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getClass());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type.getClass());	  Type    toParameterizedType    =    getTypeArguments(type.getSuperclass());    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	90	None	replace
273	[BUG]  [BUGGY]  Type  toTypeArg.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toTypeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
274	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns,  null);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns,  null);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns,  null);	  Type    toParameterizedType    =    getTypeArguments(type,    fromTypeVarAssigns);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	73	None	replace
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	96	2	replace
276	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))  {  return  true;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	96	2	replace
277	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	96	2	replace
278	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	96	2	replace
279	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getAssignedType(toParameterizedType);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getAssignedType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getAssignedType(toParameterizedType);	  Type    toParameterizedType    =    type.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	32	None	replace
280	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getToParameterizedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getToParameterizedType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getToParameterizedType();	  Type    toParameterizedType    =    type.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	32	None	replace
281	[BUG]  [BUGGY]  return  toParameterizedType.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return  toParameterizedType.isAssignableFrom(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return  toParameterizedType.isAssignableFrom(toParameterizedType);	  [Delete]    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
282	[BUG]  [BUGGY]  return  type.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return  type.isAssignableFrom(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return  type.isAssignableFrom(toParameterizedType);	  [Delete]    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
283	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  if(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  if(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    if(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
284	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getAssignedType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getAssignedType();	  Type    toParameterizedType    =    type.toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	81	None	replace
285	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getOwnerClass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getOwnerClass();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getOwnerClass();	  Type    toParameterizedType    =    type.toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	81	None	replace
286	[BUG]  [BUGGY]  if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  type.getRawType();  }  [CE]  cannot  find  symbol  toClass  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  type.getRawType();  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  type.getRawType();  }	  return    false;    Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol  toClass	63	None	replace
287	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(type))  {	  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
289	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
290	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }  if(type.equals(type))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(type.equals(type))    {    return    false;    }    if(type.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
291	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getTypeArguments(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getTypeArguments(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getTypeArguments(type);	  Type    toParameterizedType    =    fromTypeVarAssigns.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	50	None	replace
292	[BUG]  [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isAssignableFrom(toParameterizedType);	  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
293	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  null);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class  <?>  toClass  =  getRawType(toParameterizedType,  null);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	16	2	replace
294	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  null);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  null);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toParameterizedType,  null);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    false;    }    	compilable	  [FE]  AssertionError  	16	2	replace
295	[BUG]  [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);	  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
296	[BUG]  [BUGGY]  return!type.equals(toParameterizedType)&&!typeVarAssigns.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!type.equals(toParameterizedType)&&!typeVarAssigns.isAssignableFrom(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.equals(toParameterizedType)&&!typeVarAssigns.isAssignableFrom(toParameterizedType);	  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
297	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getTypeArguments();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getTypeArguments();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getTypeArguments();	  Type    toParameterizedType    =    fromTypeVarAssigns.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	83	None	replace
298	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(type))  {  return  true;	  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
299	[BUG]  [BUGGY]  Type  toTypeArg  =  types.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();  [CE]  cannot  find  symbol  types  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  types.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  types.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Category    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  types	9	None	replace
300	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getAssignedType(),  toParameterizedType);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getAssignedType(),  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getAssignedType(),  toParameterizedType);	  Type    toParameterizedType    =    toParameterizedType.getAssignedType(),    type);    	non-compiled	[CE]  ';'  expected	109	None	replace
301	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getAssignedType(),  toClass);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getAssignedType(),  toClass);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getAssignedType(),  toClass);	  Type    toParameterizedType    =    toParameterizedType.getAssignedType(),    type);    	non-compiled	[CE]  ';'  expected	109	None	replace
302	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type).getAssignedType(),  type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type).getAssignedType(),  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type).getAssignedType(),  type);	  Type    toParameterizedType    =    toParameterizedType.getAssignedType(),    type);    	non-compiled	[CE]  ';'  expected	109	None	replace
303	[BUG]  [BUGGY]  Type  toTypeArg  =  type.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Class    <?>    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
304	[BUG]  [BUGGY]  Type  toTypeArg  =  typeVarAssigns.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  typeVarAssigns.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  typeVarAssigns.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Class    <?>    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
305	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    deClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)	75	None	replace
306	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  variable  deClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    deClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  deClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	74	None	add
307	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [CE]  variable  deClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    deClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  deClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	74	None	add
308	[BUG]  [BUGGY]  return!typeParameterizedType.isAssignableFrom(toParameterizedType)&&!toParameterizedType.equals(type);  [CE]  cannot  find  symbol  typeParameterizedType  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!typeParameterizedType.isAssignableFrom(toParameterizedType)&&!toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!typeParameterizedType.isAssignableFrom(toParameterizedType)&&!toParameterizedType.equals(type);	  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol  typeParameterizedType	99	None	replace
309	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)||  toTypeVarAssigns.contains(type))  {  return  false;  }  [CE]  cannot  find  symbol  toTypeVarAssigns  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toTypeVarAssigns.contains(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)||  toTypeVarAssigns.contains(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(fromParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toTypeVarAssigns	117	None	replace
310	[BUG]  [BUGGY]  parent!=  null;  if(toParameterizedType.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null;  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null;  if(toParameterizedType.equals(type))  {  return  false;  }	  return    false;    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	60	None	replace
311	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getTypeArguments());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getTypeArguments());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getTypeArguments());	  Type    toTypeArg    =    toParameterizedType.getTypeArguments();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
312	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType).getTypeArguments();  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType).getTypeArguments();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType).getTypeArguments();	  Type    toTypeArg    =    toParameterizedType.getTypeArguments();    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)	79	None	replace
313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
314	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
315	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(typeVarAssigns.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(typeVarAssigns.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
316	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(typeVarAssigns.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  if(typeVarAssigns.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(type.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(typeVarAssigns.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	94	2	add
317	[BUG]  [BUGGY]  Type  toTypeArg  =  type.toParameterizedType.getRawType();  [CE]  cannot  find  symbol  toParameterizedType  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  toParameterizedType	6	None	replace
318	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType;  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType;  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType;	  Type    toParameterizedType    =    type.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	25	None	replace
319	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  }  [CE]  cannot  find  symbol  toClass  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))  {  return  false;  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  }	  return    false;    Type    toParameterizedType    =    getTypeArguments(type,    toClass,    null);    	non-compiled	[CE]  cannot  find  symbol  toClass	82	None	replace
320	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  else  {  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  }  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  else  {  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))  {  return  false;  }  else  {  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  }	  return    false;    Type    toParameterizedType    =    getTypeArguments(type,    toClass,    null);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	82	None	replace
321	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  getRawType(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType,  typeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(type,  toParameterizedType,  typeVarAssigns);	  Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	45	None	replace
322	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.handleType(toParameterizedType);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.handleType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.handleType(toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	115	None	replace
323	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType;  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType;  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType;	  aughtExceptionHandler.handleType(toParameterizedType);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	115	None	replace
324	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.handleType(toParameterizedType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  toParameterizedType.handleType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.handleType(toParameterizedType);	  aughtExceptionHandler.handleType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
325	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getType(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getType(type);	  Type    toParameterizedType    =    typeVarAssigns.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	92	None	replace
326	[BUG]  [BUGGY]  if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  getRawType(type);  }  [CE]  cannot  find  symbol  toClass  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  getRawType(type);  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  getRawType(type);  }	  return    false;    Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  cannot  find  symbol  toClass	61	None	replace
327	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  fromTypeVarAssigns,  typeVarAssigns);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  fromTypeVarAssigns,  typeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  fromTypeVarAssigns,  typeVarAssigns);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    typeVarAssigns);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	13	None	replace
328	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getSuperclass(),  toParameterizedType);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getSuperclass(),  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getSuperclass(),  toParameterizedType);	  Type    toParameterizedType    =    toParameterizedType.getSuperclass(),    type);    	non-compiled	[CE]  ';'  expected	122	None	replace
329	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }	  parent    ==    null    ||    toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
330	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getType();	  Type    toParameterizedType    =    type.toParameterizedType.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	93	None	replace
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(type  ==  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return(type  ==  null)?  false  :  toParameterizedType.equals(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	106	2	replace
332	[BUG]  [BUGGY]  return(type  ==  null)?  false  :  toParameterizedType.equals(type);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(type  ==  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(type  ==  null)?  false  :  toParameterizedType.equals(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	106	2	replace
333	[BUG]  [BUGGY]  parent  ==  null  &&  type.equals(toParameterizedType);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  type.equals(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  type.equals(toParameterizedType);	  parent    ==    null    &&    toParameterizedType.equals(type);    	non-compiled	[CE]  not  a  statement	98	None	replace
334	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getDeclaredType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getDeclaredType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getDeclaredType();	  Type    toParameterizedType    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	108	None	replace
335	[BUG]  [BUGGY]  return!toParameterizedType.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isUnknownType();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!toParameterizedType.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isUnknownType();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.isAssignableFrom(toParameterizedType)&&!toParameterizedType.isUnknownType();	  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.isUnknownType();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
336	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,<null>)  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  null);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  null);	  Class    <?>    toClass    =    getTypeArguments(type,    toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,<null>)	65	None	replace
337	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getTypeArguments(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getTypeArguments(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getTypeArguments(type);	  Type    toParameterizedType    =    typeVarAssigns.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	80	None	replace
338	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  if(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  if(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    if(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
339	[BUG]  [BUGGY]  parent  ==  null  ||  type.equals(toParameterizedType))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  type.equals(toParameterizedType))  {  return  false;  }	  parent    ==    null    &&    type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	76	None	replace
340	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getRawType(toParameterizedType);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getRawType(toParameterizedType);	  Type    toParameterizedType    =    type.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	30	None	replace
341	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Type  <?>  toClass  =  getRawType(type,  toParameterizedType);  [CE]  type  Type  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  Type  <?>  toClass  =  getRawType(type,  toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(type,    toParameterizedType);    Type  <?>  toClass  =  getRawType(type,  toParameterizedType);	  	non-compiled	[CE]  type  Type  does  not  take  parameters	44	None	add
342	[BUG]  [BUGGY]  if(ToParameterizedType.isAssignableFrom(toParameterizedType))  {  return  true;  }  [CE]  cannot  find  symbol  ToParameterizedType  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(ToParameterizedType.isAssignableFrom(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(ToParameterizedType.isAssignableFrom(toParameterizedType))  {  return  true;  }	  if(type.isAssignableFrom(toParameterizedType))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  ToParameterizedType	91	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(type  ==  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return(type  ==  null)?  null  :  toParameterizedType.equals(type);	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	104	2	replace
344	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  toParameterizedType.equals(type);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(type  ==  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(type  ==  null)?  null  :  toParameterizedType.equals(type);	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    	compilable	  [FE]  AssertionError  	104	2	replace
345	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.handleMissingClass(toParameterizedType);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	113	None	replace
346	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.handleMissingClass(toParameterizedType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  toParameterizedType.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
347	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getType());  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getType());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type.getType());	  Type    toParameterizedType    =    toParameterizedType.getType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	121	None	replace
348	[BUG]  [BUGGY]  Preconditions.checkState(type.equals(toParameterizedType));  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Preconditions.checkState(type.equals(toParameterizedType));  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Preconditions.checkState(type.equals(toParameterizedType));	  if(type.equals(toParameterizedType))    {    return    false;    }    Class    <?>    type    =    getRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	18	None	replace
349	[BUG]  [BUGGY]  return!toTypeVarAssigns.equals(type)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  toTypeVarAssigns  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!toTypeVarAssigns.equals(type)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toTypeVarAssigns.equals(type)&&!toParameterizedType.isAssignableFrom(toParameterizedType);	  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  toTypeVarAssigns	110	None	replace
350	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }	  parent!=    null    &&    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
351	[BUG]  [BUGGY]  ParenthesizedType  toParameterizedType  ==  null?  null  :  toParameterizedType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  ParenthesizedType  toParameterizedType  ==  null?  null  :  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	ParenthesizedType  toParameterizedType  ==  null?  null  :  toParameterizedType.equals(type))  {  return  false;  }	  parent    ==    null?    null    :    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	11	None	replace
352	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
353	[BUG]  [BUGGY]  Type  toTypeArg  =  type.toTypeArgument();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.toTypeArgument();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.toTypeArgument();	  Type    toTypeArg    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
354	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getType();	  Type    toParameterizedType    =    types.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	31	None	replace
355	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getType());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getType());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getType());	  Type    toTypeArg    =    toParameterizedType.getType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
356	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType).getType();  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType).getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType).getType();	  Type    toTypeArg    =    toParameterizedType.getType();    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)	43	None	replace
357	[BUG]  [BUGGY]  ParenthesizedType  toParameterizedType  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  ParenthesizedType  toParameterizedType  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	ParenthesizedType  toParameterizedType  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  }	  parent    ==    null    &&    toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
358	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }	  parent    ==    null    &&    toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
359	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	84	2	add
360	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	84	2	add
361	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	84	2	add
362	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	84	2	add
363	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
364	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getDeclaredType());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getDeclaredType());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getDeclaredType());	  Type    toTypeArg    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
365	[BUG]  [BUGGY]  Type  toTypeArg  =  this.toParameterizedType.getDeclaredType();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  this.toParameterizedType.getDeclaredType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  this.toParameterizedType.getDeclaredType();	  Type    toTypeArg    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	42	None	replace
366	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  toClass  =  getRawType(toParameterizedType,  type;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  Class  <?>  toClass  =  getRawType(toParameterizedType,  type;  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    Class  <?>  toClass  =  getRawType(toParameterizedType,  type;	  	non-compiled	[CE]  ')'  expected	71	None	add
367	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toTypeVarAssigns);  [CE]  cannot  find  symbol  toTypeVarAssigns  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toTypeVarAssigns);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toTypeVarAssigns);	  if(toParameterizedType.equals(type))    {    return    false;    }    If(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toTypeVarAssigns	24	None	replace
368	[BUG]  [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(ToParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(ToParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Class        <?>        toClass        =        getRawType(toParameterizedType);        Class    <?>    itClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(ToParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	56	None	add
369	[BUG]  [BUGGY]  }  else  if(type.isAssignableFrom(toParameterizedType))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(type.isAssignableFrom(toParameterizedType))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	}  else  if(type.isAssignableFrom(toParameterizedType))  {	  if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
370	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getOwnerClass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getOwnerClass();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getOwnerClass();	  Type    toParameterizedType    =    toParameterizedType.getOwnerClass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	112	None	replace
371	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  type.getOwnerClass());  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  type.getOwnerClass());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  type.getOwnerClass());	  Type    toParameterizedType    =    toParameterizedType.getOwnerClass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	112	None	replace
372	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
373	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns  ==  null)  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
374	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
375	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }  if(typeVarAssigns!=  null)  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(typeVarAssigns.equals(type))    {    return    false;    }    if(typeVarAssigns!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
376	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(typeVarAssigns  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(typeVarAssigns  ==  null)  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(typeVarAssigns  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(typeVarAssigns.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toTypeVarAssigns.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	21	2	replace
378	[BUG]  [BUGGY]  if(typeVarAssigns.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(typeVarAssigns.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toTypeVarAssigns.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	21	2	replace
379	[BUG]  [BUGGY]  if(fromTypeVarAssigns.equals(type))  {  return  false;  }  if(toTypeVarAssigns.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  fromTypeVarAssigns  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(fromTypeVarAssigns.equals(type))  {  return  false;  }  if(toTypeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(fromTypeVarAssigns.equals(type))  {  return  false;  }  if(toTypeVarAssigns.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toTypeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  fromTypeVarAssigns	21	None	replace
380	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(type);	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	20	None	replace
381	[BUG]  [BUGGY]  Return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawValue();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawValue();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawValue();	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.getRawValue();    	non-compiled	[CE]  not  a  statement	107	None	replace
382	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getType(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getType(type);	  Type    toParameterizedType    =    types.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	51	None	replace
383	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
384	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizer  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizer  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizer  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
385	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
386	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getImplicitPrototype();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  type.getImplicitPrototype();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getImplicitPrototype();	  Type    toParameterizedType    =    type.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	49	None	replace
387	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getOwnType(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.getOwnType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getOwnType(type);	  Type    toParameterizedType    =    types.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	34	None	replace
388	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  fromTypeVarAssigns);  [CE]  cannot  find  symbol  fromTypeVarAssigns  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  fromTypeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toParameterizedType,  fromTypeVarAssigns);	  Class    <?>    toClass    =    getRawType(toParameterizedType,    type);    	non-compiled	[CE]  cannot  find  symbol  fromTypeVarAssigns	72	None	replace
389	[BUG]  [BUGGY]  ParenthesizedType  toParameterizedType  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  ParenthesizedType  toParameterizedType  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	ParenthesizedType  toParameterizedType  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  }	  parent    ==    null    &&    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
390	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }	  parent    ==    null    &&    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
391	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
392	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns  ==  null)  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
393	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
394	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  toArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Type  toArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
395	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.equals(typeVarAssigns))  {  return  true;  }	  parent!=    null    &&    toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
396	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  entry);  [CE]  cannot  find  symbol  entry  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  entry);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toParameterizedType,  entry);	  Class    <?>    toClass    =    getRawType(type,    entry);    	non-compiled	[CE]  cannot  find  symbol  entry	46	None	replace
397	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  null);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  null);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type.getSuperclass(),  null);	  Type    toParameterizedType    =    getTypeArguments(type.getSuperclass());    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	90	None	replace
398	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(typeVarAssigns))  {  return  false;  }	  parent    ==    null    ||    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	97	None	replace
399	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(typeVarAssigns))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  parent.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  parent.equals(typeVarAssigns))  {  return  false;  }	  parent!=    null    &&    parent.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
400	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.getTypeArguments(type);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  toParameterizedType.getTypeArguments(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.getTypeArguments(type);	  Type    toTypeArg    =    toParameterizedType.getTypeArguments();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
401	[BUG]  [BUGGY]  Type  toTypeArg  =  this.toParameterizedType.getTypeArguments();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  this.toParameterizedType.getTypeArguments();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  this.toParameterizedType.getTypeArguments();	  Type    toTypeArg    =    toParameterizedType.getTypeArguments();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	79	None	replace
402	[BUG]  [BUGGY]  parent  ==  null?  false  :  toParameterizedType.equals(type);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  false  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  false  :  toParameterizedType.equals(type);	  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
403	[BUG]  [BUGGY]  return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.equals(toParameterizedType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.equals(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.equals(toParameterizedType);	  return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
404	[BUG]  [BUGGY]  return  true;  Class  <?>  toClass  =  getRawType(toParameterizedType);  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return  true;  Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return  true;  Class  <?>  toClass  =  getRawType(toParameterizedType);	  return    false;    Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  unreachable  statement	61	None	replace
405	[BUG]  [BUGGY]  if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  getRawType(toParameterizedType);  }  [CE]  cannot  find  symbol  toClass  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  getRawType(toParameterizedType);  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toClass  ==  null)  {  return  false;  Class  <?>  toClass  =  getRawType(toParameterizedType);  }	  return    false;    Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  cannot  find  symbol  toClass	61	None	replace
406	[BUG]  [BUGGY]  parent  ==  null?  false  :  type.equals(toParameterizedType);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  false  :  type.equals(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  false  :  type.equals(toParameterizedType);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
407	[BUG]  [BUGGY]  parent  ==  null?  null  :  parent.isAssignableFrom(parent);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  null  :  parent.isAssignableFrom(parent);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  null  :  parent.isAssignableFrom(parent);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
408	[BUG]  [BUGGY]  parent  ==  null?  false  :  parent.isAssignableFrom(parent);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null?  false  :  parent.isAssignableFrom(parent);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  false  :  parent.isAssignableFrom(parent);	  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
409	[BUG]  [BUGGY]  }  else  if(toParameterizedType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(toParameterizedType.isPrimitive())  {  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	}  else  if(toParameterizedType.isPrimitive())  {	  if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
410	[BUG]  [BUGGY]  if(toClass  ==  null)  {  return  false;  }  else  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  }  [CE]  cannot  find  symbol  toClass  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toClass  ==  null)  {  return  false;  }  else  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toClass  ==  null)  {  return  false;  }  else  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  }	  return    false;    Class    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  toClass	62	None	replace
411	[BUG]  [BUGGY]  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  else  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  else  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  else  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  }	  return    false;    Class    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
412	[BUG]  [BUGGY]  Class  <?>  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  }	  parent    ==    null    ||    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
413	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  ||  toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.isAssignableFrom(type))  {  return  false;  }	  parent    ==    null    ||    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	97	None	replace
414	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getDeclaredType(type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getDeclaredType(type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getDeclaredType(type);	  Type    toParameterizedType    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	108	None	replace
415	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getDeclaredType(),  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getDeclaredType(),  type);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getDeclaredType(),  type);	  Type    toParameterizedType    =    toParameterizedType.getDeclaredType();    	non-compiled	[CE]  ';'  expected	108	None	replace
416	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  toTypeVarAssigns);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  toTypeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  toTypeVarAssigns);	  Type    toParameterizedType    =    getTypeArguments(type,    toClass,    typeVarAssigns);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	13	None	replace
417	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	15	2	add
418	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	15	2	add
419	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
420	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.getName().equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(type.getName().equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    false;    }    if(type.getName().equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
421	[BUG]  [BUGGY]  return  false;  Class  <?>  toClass  =  toParameterizedType.getRawType();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return  false;  Class  <?>  toClass  =  toParameterizedType.getRawType();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return  false;  Class  <?>  toClass  =  toParameterizedType.getRawType();	  return    false;    Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  incompatible  types	63	None	replace
422	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.evaluate(type);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.evaluate(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.evaluate(type);	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
423	[BUG]  [BUGGY]  parent!=  null;  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null;  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null;  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }	  return    false;    if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	60	None	replace
424	[BUG]  [BUGGY]  Type  toTypeArg  =  type.toTypeArgument().getRawType();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  type.toTypeArgument().getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.toTypeArgument().getRawType();	  Type    toTypeArg    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
425	[BUG]  [BUGGY]  return!type.equals(toParameterizedType)&&!type.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!type.equals(toParameterizedType)&&!type.isAssignableFrom(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.equals(toParameterizedType)&&!type.isAssignableFrom(toParameterizedType);	  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
426	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawClass());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawClass());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawClass());	  Type    toTypeArg    =    getTypeArguments(type,    toParameterizedType.getRawType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
427	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(toParameterizedType,  type.getRawType());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  getTypeArguments(toParameterizedType,  type.getRawType());  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(toParameterizedType,  type.getRawType());	  Type    toTypeArg    =    getTypeArguments(type,    toParameterizedType.getRawType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
428	[BUG]  [BUGGY]  Type  toParameterizedType  =  toTypeVarAssigns.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toTypeVarAssigns.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toTypeVarAssigns.getRawType();	  Type    toParameterizedType    =    typeVarAssigns.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	92	None	replace
429	[BUG]  [BUGGY]  TypeUtils.handleMissingClass(toParameterizedType);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  TypeUtils.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	TypeUtils.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
430	[BUG]  [BUGGY]  ClassUtils.handleMissingClass(toParameterizedType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  ClassUtils.handleMissingClass(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	ClassUtils.handleMissingClass(toParameterizedType);	  aughtExceptionHandler.handleMissingClass(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
431	[BUG]  [BUGGY]  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(toParameterizedType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(toParameterizedType);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(toParameterizedType);	  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
432	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  0  :  toParameterizedType.equals(type);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  0  :  toParameterizedType.equals(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  0  :  toParameterizedType.equals(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	non-compiled	[CE]  incompatible  types	106	None	replace
433	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.evaluate(type);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.evaluate(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  false  :  toParameterizedType.evaluate(type);	  return(toParameterizedType    ==    null)?    false    :    toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
434	[BUG]  [BUGGY]  Type  toParameterizedType  =  toTypeVarAssigns.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toTypeVarAssigns.getConstructor();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toTypeVarAssigns.getConstructor();	  Type    toParameterizedType    =    typeVarAssigns.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	80	None	replace
435	[BUG]  [BUGGY]  Type  toParameterizedType  =  toTypeVarAssigns.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toTypeVarAssigns.getAssignedType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toTypeVarAssigns.getAssignedType();	  Type    toParameterizedType    =    typeVarAssigns.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	33	None	replace
436	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)||  toClass.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  toClass  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toClass.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)||  toClass.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  toClass	96	None	replace
437	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  }  [CE]  type  Type  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  }  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  }	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Type    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  type  Type  does  not  take  parameters	55	None	replace
438	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  }  else  {  return  toClass;  }  [CE]  type  Type  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  }  else  {  return  toClass;  }  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))  {  Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  }  else  {  return  toClass;  }	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Type    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  type  Type  does  not  take  parameters	55	None	replace
439	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.toType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.toType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.toType();	  Type    toParameterizedType    =    toParameterizedType.getType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	121	None	replace
440	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Type  toParameterArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toParameterArg    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	70	2	replace
441	[BUG]  [BUGGY]  Type  toParameterArg  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterArg  =  toParameterizedType.getRawType();	          Type    toTypeArg    =    toParameterizedType.getRawType();    Type    toParameterArg    =    toParameterizedType.getRawType();    	compilable	  [FE]  AssertionError  	70	2	replace
442	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.toArray(new  Type[types.size()  ]);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  types.toArray(new  Type[types.size()  ]);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.toArray(new  Type[types.size()  ]);	  Type    toParameterizedType    =    types.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	31	None	replace
443	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
444	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameter    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameter  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	67	None	add
445	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(type);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleMissingClass(type);	  if(toParameterizedType.equals(type))    {    return    true;    }    If(toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	37	None	replace
446	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.values().getRawValue();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.values().getRawValue();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.values().getRawValue();	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.getRawValue();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
447	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getValue();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getValue();	  return(toParameterizedType    ==    null)?    null    :    toParameterizedType.getRawValue();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
449	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        false;        }        if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	19	2	add
450	[BUG]  [BUGGY]  }  else  if(type.isAssignableFrom(toParameterizedType))  {  if(type.equals(toParameterizedType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  }  else  if(type.isAssignableFrom(toParameterizedType))  {  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	}  else  if(type.isAssignableFrom(toParameterizedType))  {  if(type.equals(toParameterizedType))  {  return  false;  }	  if(type.equals(toParameterizedType))    {    return    false;    }    Class    <?>    type    =    getRawType(toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
451	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getRawClass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getRawClass();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getRawClass();	  Type    toParameterizedType    =    toParameterizedType.getOwnerClass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	112	None	replace
452	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(ToParameterizedType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	116	2	replace
453	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(ToParameterizedType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	116	2	replace
454	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)||  toClass.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  toClass  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toClass.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)||  toClass.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(ToParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toClass	116	None	replace
455	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)||  toTypeArg.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  toTypeArg  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toTypeArg.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)||  toTypeArg.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(ToParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toTypeArg	116	None	replace
456	[BUG]  [BUGGY]  Type  toParameterizedType  =  toClass.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toClass.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toClass.getRawType();	  Type    toParameterizedType    =    type.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	30	None	replace
457	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)||  toTypeVarAssigns.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  toTypeVarAssigns  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)||  toTypeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)||  toTypeVarAssigns.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toTypeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toTypeVarAssigns	21	None	replace
458	[BUG]  [BUGGY]  if(toParameterizedType.equals(type)&&  toTypeVarAssigns.contains(type))  {  return  false;  }  [CE]  cannot  find  symbol  toTypeVarAssigns  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type)&&  toTypeVarAssigns.contains(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type)&&  toTypeVarAssigns.contains(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    if(toTypeVarAssigns.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toTypeVarAssigns	21	None	replace
459	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
460	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))        {        return        true;        }        if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type)||  toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	35	2	add
461	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  fromTypeVarAssigns);  [CE]  cannot  find  symbol  fromTypeVarAssigns  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  fromTypeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  fromTypeVarAssigns);	  Class    <?>    toClass    =    getTypeArguments(type);    	non-compiled	[CE]  cannot  find  symbol  fromTypeVarAssigns	64	None	replace
462	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(toParameterizedType);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(toParameterizedType);	  Class    <?>    toClass    =    getTypeArguments(type);    	non-compiled	[CE]  incompatible  types	64	None	replace
463	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent!=  null  &&  toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.isAssignableFrom(type))  {  return  false;  }	  parent!=    null    &&    toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
464	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  oldTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  oldTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  oldTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
465	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  ofTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  Type  ofTypeArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    fromTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();  Type  ofTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	119	None	add
466	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  this.toParameterizedType);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  this.toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(type,  this.toParameterizedType);	  Class    <?>    toClass    =    getRawType(type,    entry);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	46	None	replace
467	[BUG]  [BUGGY]  Type  toParameterizedType  =  toClass.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toClass.getConstructor();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toClass.getConstructor();	  Type    toParameterizedType    =    types.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	51	None	replace
468	[BUG]  [BUGGY]  Type  toParameterizedType  =  toClass.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toClass.getAssignedType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toClass.getAssignedType();	  Type    toParameterizedType    =    type.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	32	None	replace
469	[BUG]  [BUGGY]  Type  toTypeArg  =  this.toParameterizedType.getType();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  this.toParameterizedType.getType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  this.toParameterizedType.getType();	  Type    toTypeArg    =    toParameterizedType.getType();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	43	None	replace
470	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.toTypeArgument();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toTypeArg  =  toParameterizedType.toTypeArgument();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.toTypeArgument();	  Type    toTypeArg    =    toParameterizedType.getType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
471	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type,  fromTypeArg);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type,  fromTypeArg);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type,  fromTypeArg);	  Type    toParameterizedType    =    toParameterizedType.getSuperclass(),    type);    	non-compiled	[CE]  ';'  expected	122	None	replace
472	[BUG]  [BUGGY]  Class  <?>  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  }	  parent    ==    null    ||    toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class  <?>  deClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    deClass    =    getRawType(toParameterizedType);    	compilable	  [FE]  AssertionError  	75	2	replace
474	[BUG]  [BUGGY]  Class  <?>  deClass  =  getRawType(toParameterizedType);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  deClass  =  getRawType(toParameterizedType);	          Class    <?>    toClass    =    getRawType(toParameterizedType);    Class    <?>    deClass    =    getRawType(toParameterizedType);    	compilable	  [FE]  AssertionError  	75	2	replace
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	84	2	add
476	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(toParameterizedType.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	84	2	add
477	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))        {        return        false;        }        if(type.equals(toParameterizedType))    {    return    true;    }    if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
478	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  type.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  type.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  type.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
479	[BUG]  [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getClass();  Type  toParameterArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]          Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getClass();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	                Type        toTypeArg        =        toParameterizedType.getRawType();        Type    toParameterArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getClass();  Type  toParameterArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	69	None	add
480	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  toParameterizedType.getParent();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  parent  ==  null  &&  parent  ==  toParameterizedType.getParent();  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  parent  ==  toParameterizedType.getParent();	  if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
481	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  fromTypeVarAssigns);  [CE]  cannot  find  symbol  fromTypeVarAssigns  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  fromTypeVarAssigns);  [BUGGY]      return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType,  fromTypeVarAssigns);	  Class    <?>    toClass    =    getTypeArguments(type,    toParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  fromTypeVarAssigns	65	None	replace
482	[BUG]  [BUGGY]  aughtExceptionHandler.handleType(toParameterizedType,  type);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError      [CONTEXT]      }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleType(toParameterizedType,  type);  [BUGGY]      }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleType(toParameterizedType,  type);	  aughtExceptionHandler.handleType(toParameterizedType,    toClass);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	114	None	replace
