bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Class  <?>  toClass  =  getRawType(type);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]    AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Class  <?>  toClass  =  getRawType(type);  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Class  <?>  toClass  =  getRawType(type);		non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	24	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	    Class  <?>  toClass  =  getRawType(toParameterizedType);		compilable	  [FE]  AssertionError  	24	2	add
3	[BUG]  [BUGGY]    Class  <?>  toClass  =  getRawType(toParameterizedType);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Class  <?>  toClass  =  getRawType(toParameterizedType);		compilable	  [FE]  AssertionError  	24	2	add
4	[BUG]  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getRawType();  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Type  toParameterizedType  =  toParameterizedType.getRawType();		non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	24	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Type  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	    Type  toTypeArg  =  toParameterizedType.getRawType();		compilable	  [FE]  AssertionError  	24	2	add
6	[BUG]  [BUGGY]    Type  toTypeArg  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Type  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Type  toTypeArg  =  toParameterizedType.getRawType();		compilable	  [FE]  AssertionError  	24	2	add
7	[BUG]  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getSuperclass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getSuperclass();  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Type  toParameterizedType  =  toParameterizedType.getSuperclass();		non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	24	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  return  false;  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return  false;	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
9	[BUG]  [BUGGY]  return  false;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  return  false;  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return  false;	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
11	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
13	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
15	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	23	2	replace
16	[BUG]  [BUGGY]    Type  toParameterizedType  =  getTypeArguments(type,  toClass);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Type  toParameterizedType  =  getTypeArguments(type,  toClass);  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Type  toParameterizedType  =  getTypeArguments(type,  toClass);		non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	24	None	add
17	[BUG]  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getAssignedType();  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Type  toParameterizedType  =  toParameterizedType.getAssignedType();		non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	24	None	add
18	[BUG]  [BUGGY]  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.equals(type);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.equals(type);  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.equals(type);	return  true;  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
19	[BUG]  [BUGGY]  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.isUnknownType();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.isUnknownType();  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.isUnknownType();	return  true;  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
20	[BUG]  [BUGGY]  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(type);  [BUGGY]  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(type);	return  true;  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
21	[BUG]  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {  [BUGGY]    Type  toParameterizedType  =  toParameterizedType.getConstructor();  [BUGGY]  return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	    Type  toParameterizedType  =  toParameterizedType.getConstructor();		non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	24	None	add
