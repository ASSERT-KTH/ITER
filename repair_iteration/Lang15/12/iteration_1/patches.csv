bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent!=  null  &&  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.equals(type))  {  return  false;  }	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
2	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  [Delete]  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	[Delete]	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(toParameterizedType))  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent!=  null  &&  parent.equals(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  parent.equals(toParameterizedType))  {  return  false;  }	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
4	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent!=  null  &&  parent.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  parent.equals(type))  {  return  false;  }	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
5	[BUG]  [BUGGY]  return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.equals(type);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.equals(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.equals(type);	  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
6	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	5	None	add
7	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterizedType  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterizedType  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	5	None	add
8	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  fromParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toTypeArg  =  fromParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toTypeArg  =  fromParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	5	None	add
9	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Category  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Category  toTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
10	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
11	[BUG]  [BUGGY]  parent  ==  null?  null  :  toParameterizedType.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent  ==  null?  null  :  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null?  null  :  toParameterizedType.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
12	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);	      Type    toParameterizedType    =    getTypeArguments(type,    toClass);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	16	None	replace
13	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  typeVarAssigns);	      Type    toParameterizedType    =    getTypeArguments(type,    toClass);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	16	None	replace
14	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  type);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  toClass,  type);	      Type    toParameterizedType    =    getTypeArguments(type,    toClass);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	16	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	14	2	add
16	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	14	2	add
17	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  If(type.equals(toParameterizedType))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  If(type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))    {    return    false;    }    If(type.equals(toParameterizedType))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
18	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  Class  <?>  type  =  getRawType(toParameterizedType);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  Class  <?>  type  =  getRawType(toParameterizedType);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))    {    return    false;    }    Class  <?>  type  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	14	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	10	2	add
20	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    if(toParameterizedType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	10	2	add
21	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(toTypeVarAssigns.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  toTypeVarAssigns  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(toTypeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    if(toTypeVarAssigns.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  toTypeVarAssigns	10	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	10	2	add
23	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(type.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    if(type.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	10	2	add
24	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  If(toParameterizedType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  If(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    If(toParameterizedType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	10	None	add
25	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getSuperclass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  type.getSuperclass();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getSuperclass();	      Type    toParameterizedType    =    toParameterizedType.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	7	None	replace
26	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getSuperclass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  types.getSuperclass();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getSuperclass();	      Type    toParameterizedType    =    toParameterizedType.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	7	None	replace
27	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getSuperclass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getSuperclass();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getSuperclass();	      Type    toParameterizedType    =    toParameterizedType.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	7	None	replace
28	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
29	[BUG]  [BUGGY]  parent!=  null  &&  toParameterizedType.equals(type))  {  return  true;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent!=  null  &&  toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  toParameterizedType.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
30	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  type.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getRawType();	      Type    toParameterizedType    =    toParameterizedType.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	4	None	replace
31	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  types.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getRawType();	      Type    toParameterizedType    =    toParameterizedType.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	4	None	replace
32	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  type.getAssignedType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getAssignedType();	      Type    toParameterizedType    =    toParameterizedType.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	17	None	replace
33	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getAssignedType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getAssignedType();	      Type    toParameterizedType    =    toParameterizedType.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	17	None	replace
34	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  types.getAssignedType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getAssignedType();	      Type    toParameterizedType    =    toParameterizedType.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	17	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	12	2	add
36	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    true;    }    if(toParameterizedType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	12	2	add
37	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  If(toParameterizedType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  If(toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    true;    }    If(toParameterizedType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	12	None	add
38	[BUG]  [BUGGY]  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }	  return    false;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
39	[BUG]  [BUGGY]  return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.isUnknownType();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.isUnknownType();  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.isAssignableFrom(toParameterizedType)||!toParameterizedType.isUnknownType();	  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.isUnknownType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
40	[BUG]  [BUGGY]  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.isUnknownType();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.isUnknownType();  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.isUnknownType();	  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.isUnknownType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
41	[BUG]  [BUGGY]  Type  toTypeArg  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toTypeArg  =  type.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  type.getRawType();	      Type    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
42	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.getDeclaredType();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toTypeArg  =  toParameterizedType.getDeclaredType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.getDeclaredType();	      Type    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
43	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.getType();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toTypeArg  =  toParameterizedType.getType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.getType();	      Type    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class  <?>  toClass  =  getRawType(type,  toParameterizedType);	      Class    <?>    toClass    =    getRawType(type);    	compilable	  [FE]  AssertionError  	1	2	replace
45	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(type,  toParameterizedType);	      Class    <?>    toClass    =    getRawType(type);    	compilable	  [FE]  AssertionError  	1	2	replace
46	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  entry);  [CE]  cannot  find  symbol  entry  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getRawType(type,  entry);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(type,  entry);	      Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  cannot  find  symbol  entry	1	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class  <?>  toClass  =  getRawType(type,  type);	      Class    <?>    toClass    =    getRawType(type);    	compilable	  [FE]  AssertionError  	1	2	replace
48	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getRawType(type,  type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(type,  type);	      Class    <?>    toClass    =    getRawType(type);    	compilable	  [FE]  AssertionError  	1	2	replace
49	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  type.getConstructor();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.getConstructor();	      Type    toParameterizedType    =    toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	21	None	replace
50	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getConstructor();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getConstructor();	      Type    toParameterizedType    =    toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	21	None	replace
51	[BUG]  [BUGGY]  Type  toParameterizedType  =  types.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  types.getConstructor();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  types.getConstructor();	      Type    toParameterizedType    =    toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	21	None	replace
52	[BUG]  [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	2	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	2	2	add
54	[BUG]  [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  fromClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  fromClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	2	2	add
55	[BUG]  [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  [CE]  type  Type  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Type  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Type  <?>  toClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  type  Type  does  not  take  parameters	2	None	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	2	2	add
57	[BUG]  [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  itClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  itClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	2	2	add
58	[BUG]  [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  findRawType(toParameterizedType);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  toClass  =  findRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  toClass  =  findRawType(toParameterizedType);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	2	None	add
59	[BUG]  [BUGGY]  return  false;  return  false;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  return  false;  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    return  false;	  	non-compiled	[CE]  unreachable  statement	8	None	add
60	[BUG]  [BUGGY]  return  false;  if(toParameterizedType.equals(type))  {  return  false;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  if(toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    if(toParameterizedType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	8	None	add
61	[BUG]  [BUGGY]  return  false;  Class  <?>  toClass  =  getRawType(type);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  Class  <?>  toClass  =  getRawType(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    Class  <?>  toClass  =  getRawType(type);	  	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	8	None	add
62	[BUG]  [BUGGY]  return  false;  Class  <?>  toClass  =  getRawType(toParameterizedType);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  Class  <?>  toClass  =  getRawType(toParameterizedType);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    Class  <?>  toClass  =  getRawType(toParameterizedType);	  	non-compiled	[CE]  unreachable  statement	8	None	add
63	[BUG]  [BUGGY]  return  false;  Class  <?>  toClass  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  Class  <?>  toClass  =  type.getRawType();  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    Class  <?>  toClass  =  type.getRawType();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
64	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type)  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type);	      Class    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type)	3	None	replace
65	[BUG]  [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getTypeArguments(type,  toParameterizedType);	      Class    <?>    toClass    =    getRawType(toParameterizedType);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType)	3	None	replace
66	[BUG]  [BUGGY]  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(type);	  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();	  	compilable	  [FE]  AssertionError  	5	2	add
68	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameter  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameter  =  toParameterizedType.getRawType();	  	compilable	  [FE]  AssertionError  	5	2	add
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();	  	compilable	  [FE]  AssertionError  	5	2	add
70	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  toParameterArg  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  toParameterArg  =  toParameterizedType.getRawType();	  	compilable	  [FE]  AssertionError  	5	2	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	Class  <?>  toClass  =  getRawType(toParameterizedType,  type);	      Class    <?>    toClass    =    getRawType(toParameterizedType);    	compilable	  [FE]  AssertionError  	3	2	replace
72	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Class  <?>  toClass  =  getRawType(toParameterizedType,  type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Class  <?>  toClass  =  getRawType(toParameterizedType,  type);	      Class    <?>    toClass    =    getRawType(toParameterizedType);    	compilable	  [FE]  AssertionError  	3	2	replace
73	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type,  fromTypeVarAssigns);	      Type    toParameterizedType    =    getTypeArguments(type,    toClass);    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	16	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	2	2	add
75	[BUG]  [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Class  <?>  toClass  =  getRawType(toParameterizedType);  Class  <?>  deClass  =  getRawType(toParameterizedType);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Class    <?>    toClass    =    getRawType(toParameterizedType);    Class  <?>  deClass  =  getRawType(toParameterizedType);	  	compilable	  [FE]  AssertionError  	2	2	add
76	[BUG]  [BUGGY]  parent  ==  null  &&  type.equals(toParameterizedType))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent  ==  null  &&  type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  type.equals(toParameterizedType))  {  return  false;  }	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
77	[BUG]  [BUGGY]  parent!=  null  &&  type.equals(toParameterizedType))  {  return  false;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent!=  null  &&  type.equals(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent!=  null  &&  type.equals(toParameterizedType))  {  return  false;  }	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
78	[BUG]  [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType());  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Type)  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType());  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  getTypeArguments(type,  toParameterizedType.getRawType());	      Type    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Type)	6	None	replace
79	[BUG]  [BUGGY]  Type  toTypeArg  =  toParameterizedType.getTypeArguments();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toTypeArg  =  toParameterizedType.getTypeArguments();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toTypeArg  =  toParameterizedType.getTypeArguments();	      Type    toTypeArg    =    toParameterizedType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
80	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getConstructor();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getConstructor();	      Type    toParameterizedType    =    toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	21	None	replace
81	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getConstructor();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getConstructor();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getConstructor();	      Type    toParameterizedType    =    toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	21	None	replace
82	[BUG]  [BUGGY]  return  false;  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    Type  toParameterizedType  =  getTypeArguments(type,  toClass,  null);	  	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	8	None	add
83	[BUG]  [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getAssignedType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  fromTypeVarAssigns.getAssignedType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  fromTypeVarAssigns.getAssignedType();	      Type    toParameterizedType    =    toParameterizedType.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	17	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	14	2	add
85	[BUG]  [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.equals(toParameterizedType))  {  return  false;  }  if(type.equals(toParameterizedType))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.equals(toParameterizedType))    {    return    false;    }    if(type.equals(toParameterizedType))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	14	2	add
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	10	2	add
87	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(typeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    if(typeVarAssigns.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	10	2	add
88	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(fromTypeVarAssigns.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  fromTypeVarAssigns  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(fromTypeVarAssigns.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    if(fromTypeVarAssigns.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  fromTypeVarAssigns	10	None	add
89	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getSuperclass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getSuperclass();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getSuperclass();	      Type    toParameterizedType    =    toParameterizedType.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	7	None	replace
90	[BUG]  [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass());  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  getTypeArguments(type.getSuperclass());  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  getTypeArguments(type.getSuperclass());	      Type    toParameterizedType    =    toParameterizedType.getSuperclass();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	7	None	replace
91	[BUG]  [BUGGY]  if(type.isAssignableFrom(toParameterizedType))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(type.isAssignableFrom(toParameterizedType))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(type.isAssignableFrom(toParameterizedType))  {  return  true;  }	  return    false;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
92	[BUG]  [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  typeVarAssigns.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  typeVarAssigns.getRawType();	      Type    toParameterizedType    =    toParameterizedType.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	4	None	replace
93	[BUG]  [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getRawType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  type.toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  type.toParameterizedType.getRawType();	      Type    toParameterizedType    =    toParameterizedType.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	4	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	12	2	add
95	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(type.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    true;    }    if(type.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	12	2	add
96	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(ToParameterizedType.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  ToParameterizedType  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  true;  }  if(ToParameterizedType.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    true;    }    if(ToParameterizedType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol  ToParameterizedType	12	None	add
97	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(type))  {  return  false;  }	  if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
98	[BUG]  [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent  ==  null  &&  toParameterizedType.equals(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  &&  toParameterizedType.equals(type);	  if(toParameterizedType.equals(type))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
99	[BUG]  [BUGGY]  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(type);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.isAssignableFrom(type)&&!toParameterizedType.equals(type);	  return!toParameterizedType.isAssignableFrom(type)||!toParameterizedType.equals(type);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
100	[BUG]  [BUGGY]  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!type.equals(toParameterizedType)&&!toParameterizedType.isAssignableFrom(toParameterizedType);	  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
101	[BUG]  [BUGGY]  return  false;  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    if(type.isAssignableFrom(toParameterizedType))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
102	[BUG]  [BUGGY]  return  false;  if(toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return  false;  if(toParameterizedType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return    false;    if(toParameterizedType.isAssignableFrom(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);	  return    false;    	compilable	  [FE]  AssertionError  	9	2	replace
104	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.equals(type);	  return    false;    	compilable	  [FE]  AssertionError  	9	2	replace
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);	  return    false;    	compilable	  [FE]  AssertionError  	9	2	replace
106	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  false  :  toParameterizedType.equals(type);	  return    false;    	compilable	  [FE]  AssertionError  	9	2	replace
107	[BUG]  [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawValue();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawValue();  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return(toParameterizedType  ==  null)?  null  :  toParameterizedType.getRawValue();	  return    false;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
108	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getDeclaredType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getDeclaredType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getDeclaredType();	      Type    toParameterizedType    =    toParameterizedType.getAssignedType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	17	None	replace
109	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getAssignedType(),  type);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getAssignedType(),  type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getAssignedType(),  type);	      Type    toParameterizedType    =    toParameterizedType.getAssignedType();    	non-compiled	[CE]  ';'  expected	17	None	replace
110	[BUG]  [BUGGY]  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(toParameterizedType);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(toParameterizedType);	  return!toParameterizedType.equals(type)&&!toParameterizedType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
111	[BUG]  [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	parent  ==  null  ||  toParameterizedType.equals(type))  {  return  true;  }	  if(toParameterizedType.equals(type))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
112	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getOwnerClass();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getOwnerClass();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getOwnerClass();	      Type    toParameterizedType    =    toParameterizedType.getConstructor();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	21	None	replace
113	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(toParameterizedType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  aughtExceptionHandler.handleMissingClass(toParameterizedType);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleMissingClass(toParameterizedType);	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	15	None	replace
114	[BUG]  [BUGGY]  aughtExceptionHandler.handleType(toParameterizedType,  toClass);  [CE]  cannot  find  symbol  toClass  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  aughtExceptionHandler.handleType(toParameterizedType,  toClass);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleType(toParameterizedType,  toClass);	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toClass	15	None	replace
115	[BUG]  [BUGGY]  aughtExceptionHandler.handleType(toParameterizedType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  aughtExceptionHandler.handleType(toParameterizedType);  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	aughtExceptionHandler.handleType(toParameterizedType);	  if(type.equals(toParameterizedType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	15	None	replace
116	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(ToParameterizedType.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  ToParameterizedType  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(ToParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    if(ToParameterizedType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  ToParameterizedType	10	None	add
117	[BUG]  [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(fromParameterizedType.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  fromParameterizedType  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  if(toParameterizedType.equals(type))  {  return  false;  }  if(fromParameterizedType.equals(type))  {  return  false;  }  [BUGGY]    }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	if(toParameterizedType.equals(type))    {    return    false;    }    if(fromParameterizedType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  fromParameterizedType	10	None	add
118	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Class  <?>  toTypeArg  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Class  <?>  toTypeArg  =  toParameterizedType.getRawType();	  	non-compiled	[CE]  variable  toTypeArg  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	5	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	add	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();	  	compilable	  [FE]  AssertionError  	5	2	add
120	[BUG]  [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]      Type  toTypeArg  =  toParameterizedType.getRawType();  Type  fromTypeArg  =  toParameterizedType.getRawType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	        Type    toTypeArg    =    toParameterizedType.getRawType();    Type  fromTypeArg  =  toParameterizedType.getRawType();	  	compilable	  [FE]  AssertionError  	5	2	add
121	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getType();  [CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getType();  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getType();	      Type    toParameterizedType    =    toParameterizedType.getRawType();    	non-compiled	[CE]  variable  toParameterizedType  is  already  defined  in  method  isAssignable(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	4	None	replace
122	[BUG]  [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    }    if  (toParameterizedType  ==  null)  {  return  false;  }  if  (toParameterizedType.equals(type))  {    [BUGGY]  Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type);  [BUGGY]    return  true;  }  Class<?>  toClass  =  getRawType(toParameterizedType);    Map<TypeVariable<?>,  Type>  fromTypeVarAssigns  =  getTypeArguments(type,  toClass,  null);  if  (fromTypeVarAssigns  ==  null)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  ParameterizedType  toParameterizedType  Type>  typeVarAssigns  [VARIABLES]  ParameterizedType  toParameterizedType  Type  fromTypeArg  toTypeArg  type  Entry  entry  boolean  Class  toClass  Map  fromTypeVarAssigns  toTypeVarAssigns  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	193	193	2	replace	Type  toParameterizedType  =  toParameterizedType.getSuperclass(),  type);	      Type    toParameterizedType    =    toParameterizedType.getSuperclass();    	non-compiled	[CE]  ';'  expected	7	None	replace
