bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[size()  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[size()  -  1]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[size()  -  1]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds,  typeVarAssigns)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds,  typeVarAssigns)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  lowerBounds,  typeVarAssigns)  {	  for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
5	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  for(Type  toBound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  for(Type  toBound  :  toUpperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    for(Type  toBound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toUpperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
7	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  for(Type  toBound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  for(Type  toBound  :  toUpperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  for(Type  toBound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
9	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
10	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	      Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  bound);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  bound);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  bound);	      Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  for(Type  toBound  :  lowerBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  for(Type  toBound  :  lowerBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    lowerBounds)    {    for(Type  toBound  :  lowerBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
22	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    lowerBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
23	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    lowerBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
24	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  for(Type  toBound  :  upperBounds)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  for(Type  toBound  :  upperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    lowerBounds)    {    for(Type  toBound  :  upperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
25	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowBounds)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    lowerBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
26	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.getTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.getTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.getTypes();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toLowerBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toLowerBounds();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toLowerBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toLowerBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toLowerBounds();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
31	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(type,  toBound,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);	      Type    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);	      Type    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
39	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	      Type    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
40	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  typeVarAssigns);	      Type    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toLowerBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
44	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
45	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  toLowerBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardTypes)  {  [CE]  cannot  find  symbol  toWildcardTypes  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toWildcardTypes)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardTypes)  {	  for(Type    toBound    :    upperBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toWildcardTypes	4	None	replace
48	[BUG]  [BUGGY]  for(Type  toBound  :  typeVarAssigns)  {  [CE]  for-each  not  applicable  to  expression  type  [FE]      AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  typeVarAssigns)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  typeVarAssigns)  {	  for(Type    toBound    :    upperBounds)    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	4	None	replace
49	[BUG]  [BUGGY]  for(Type  toBound  :  this.toLowerBounds)  {  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  this.toLowerBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  this.toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	2	None	replace
50	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  bound  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }	      for(Type    toBound    :    toLowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  bound	6	None	replace
51	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  bound  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }	      for(Type    toBound    :    toLowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  bound	6	None	replace
52	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardTypes)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toWildcardTypes  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toWildcardTypes)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardTypes)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }	      for(Type    toBound    :    toLowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toWildcardTypes	6	None	replace
53	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [CE]  for-each  not  applicable  to  expression  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toWildcardType)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }	      for(Type    toBound    :    toLowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	6	None	replace
54	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toLowerBounds);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
57	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
58	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
59	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  bound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  bound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  bound,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
60	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray();  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.toArray();	      Type[]    toUpperBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getTypes();  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toWildcardType.getTypes();	      Type[]    toUpperBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toUpperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toUpperBounds.size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toUpperBounds.size()  ]);	      Type[]    toUpperBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  upperBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  upperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    for(Type  toBound  :  upperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
65	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  lowerBounds)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  lowerBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    for(Type  toBound  :  lowerBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
66	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  topBounds)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  topBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    for(Type  toBound  :  topBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
67	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  typeVarAssigns)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  typeVarAssigns)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    for(Type  toBound  :  typeVarAssigns)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
68	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  new  Type[]  {  }  )  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  for(Type  toBound  :  new  Type[]  {  }  )  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    for(Type  toBound  :  new  Type[]  {  }  )  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
69	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds;  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
70	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
71	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
74	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    lowerBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
75	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound);  for(Type  toBound  :  lowerBounds)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    lowerBounds)    {    Type  toBound  =  substituteTypeVariables(toBound);  for(Type  toBound  :  lowerBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
76	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
79	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
80	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
81	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  bound  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  upperBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }	      for(Type    toBound    :    toLowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  bound	6	None	replace
82	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  bound  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }	      for(Type    toBound    :    toLowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  bound	6	None	replace
83	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  typeVarAssigns);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  for(Type  toBound  :  topBounds)  {  [CE]  cannot  find  symbol  topBounds  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  topBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  topBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  cannot  find  symbol  topBounds	2	None	replace
85	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);	      Type    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
86	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);	      Type    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
87	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds,  upperBounds)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  lowerBounds,  upperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  lowerBounds,  upperBounds)  {	  for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
88	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  upperBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  upperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  upperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
89	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
90	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    upperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
91	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBound);  for(Type  toBound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBound);  for(Type  toBound  :  toUpperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  toUpperBound);  for(Type  toBound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
92	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
93	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
94	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
95	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  typeVarAssigns);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
96	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[upperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[upperBounds.size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
97	[BUG]  [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  upperBounds.toArray(new  Type[typeVarAssigns.size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
98	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
99	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
100	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
101	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  typeVarAssigns.getTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  typeVarAssigns.getTypes();  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  typeVarAssigns.getTypes();	      Type[]    toUpperBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
102	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  upperBounds.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  upperBounds.getTypes();  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  upperBounds.getTypes();	      Type[]    toUpperBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
103	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  For(Type  toBound  :  toUpperBounds)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  For(Type  toBound  :  toUpperBounds)  {  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type    toBound    :    toUpperBounds)    {    For(Type  toBound  :  toUpperBounds)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
104	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds);	      Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
105	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
106	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);	      Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
107	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);	      Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
108	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
109	[BUG]  [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  upperBounds.toArray(new  Type[size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
110	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);	      Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
111	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
112	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
113	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.getAllTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.getAllTypes();  [BUGGY]      toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.getAllTypes();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
114	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);	      Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
117	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);	      Type    toLowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
118	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  upperBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  upperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  upperBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
119	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]        for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }    [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [BUGGY]    for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  toUpperBounds);	      Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
