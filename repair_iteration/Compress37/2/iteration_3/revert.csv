projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319paxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(paxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headerSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getMethod());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getParent());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getParent());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaderSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getGlobalPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(headers.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!currEntry.hasPaxHeaders()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF){applyPaxHeadersToCurrentEntry(headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!currEntry.hasPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getURL());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getHeaderSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headerSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry.getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(globalPaxHeaders,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headerEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getKey(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getMethod(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getMethod(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getMethod(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getMethod(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getMethod(),longNameData);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319ApplyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319aplicePaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applicationPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,currEntry.getName(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,currEntry.getName(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getPaxHeader(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getURL());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getURL());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,isHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,fileSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,fileEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319ApplyPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applicationPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319aplicablesToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry,headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry,headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers,currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry,headers,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry,headers,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319aplicPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||headers.isEmpty()){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||headers.isEmpty()){applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLYPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||headers.isEmpty()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319ImplementedPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getURL(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getURI());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getGlobalPaxHeaders(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getRecordSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getPaxHeader(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getURL());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getName(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getName(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getKey(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getValue());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getSourceName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getPaxHeaders(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getGlobalPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaders(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getPaxHeaders(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,fullNameData);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,cached);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersFromCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(headers,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(headers,currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeader(),globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,globalPaxHeaders,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(globalPaxHeaders,headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeader(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers,isHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers,this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers,fileSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(currEntry,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(currEntry.getMethod());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(currEntry.getParent());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(currEntry.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headerOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headerSize,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),blockSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),this.headerSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry.getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319||hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeadersFromCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319aplicablesToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319executePaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry,headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,currEntry.getName(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,currEntry.getName(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getName(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getName(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getName(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getName(),longNameData);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaders()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319aplicablesToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax(),headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax(),headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax(),headers,isHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax(),headers,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax(),headers,this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPax(),headers,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getParent(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getNext());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(headers,currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(headers.getPax(),headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(headers,currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,headers,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getSize(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getSize()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getSize()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getString(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getShortName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319ApplyPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(cursorEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers,currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,cached);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry,headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry,headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry,headers,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry,headers,isHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319ImplementedPaxHeadersToCurrentEntry(currEntry,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getParent(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getNext());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getSourceName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319ApplyPaxHeadersToCurrentEntry(currEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(cursorEntry.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,headers.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getPax(),headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getSize()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getSize(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getSize()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319aplicePaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appliquePaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaderSize(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaderSize()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaderSize(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPaxHeaderSize(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getHeaderSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getHeaderSize(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),longNameData);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getName(),currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319NavigatePaxHeaderscurrEntry=getNextPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319NavigatePaxHeaderscurrEntry=getNextTarEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319NavigatePaxHeaderscurrEntry=getPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319NavigatePaxHeaderscurrEntry=getNextTarEntry();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(headers.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(entry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headerEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headerEntry.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(headers,currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{applyPaxHeadersToCurrentEntry(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headerData);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headerBuf);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getParent());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF&&currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers,currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getGlobalPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers,currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers,currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(currEntry.getName(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,maxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getPaxHeaderSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendsPaxHeaderstoCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendsPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appliquePaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersFromCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersFromCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(globalPaxHeaders.getPax());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers.getMethod());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getMethod());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxEOF){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxEOF){applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getURL());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSwitcherPaxingEnabled(true){applyPaxHeadersToCurrentEntry(headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxEOF){applyPaxHeadersToCurrentEntry(headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applicationapplyPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF&&currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSwitcherPaxingEnabled(currEntry.getName(),hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry.getPaxHeader());}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers.getPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxEOF){applyPaxHeadersToCurrentEntry(currEntry.getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowHitEOF){applyPaxHeadersToCurrentEntry(currEntry.getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxEOF){applyPaxHeadersToCurrentEntry(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowHitEOF){applyPaxHeadersToCurrentEntry(currEntry.getName(),headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getPax()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,headers.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,currEntry.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||!currEntry.hasPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||!currEntry.hasPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headers,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxHeaders(hasHitEOF){applyPaxHeadersToCurrentEntry(headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowHitEOF){applyPaxHeadersToCurrentEntry(headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowHitEOF&&applyPaxHeadersToCurrentEntry(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||!currEntry.hasPaxHeaders()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||!currEntry.hasPaxHeaders()){applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(globalPaxHeaders,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(headers.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319mockPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeaders(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeaders(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319readPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getMethod(),this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkip(hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry.getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkipPaxHeaders(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSwitchPaxHeaders(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319readPaxHeaders(currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319APPLICATIONS||!currEntry.isPaxHeader();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getHost());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,cachedHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeadersToCurrentEntry(currEntry,headers,this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry,headers.getPaxHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(headers.getPax(),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(globalPaxHeaders.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers.getLongNameData());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkip(hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowSkip(hasHitEOF){applyPaxHeadersToCurrentEntry(currEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headerEntry);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319appendPaxHeaders(currEntry.getMethod());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getHeaderSize()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF&&applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319if(!hasHitEOF&&currEntry.getPaxHeaders().size()>0){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(currEntry.getName(),headerSize,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(globalPaxHeaders,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319allowPaxHeaders(currEntry.getPaxHeader());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersToCurrentEntry(headers,zipEncoding.decode(currEntry.getName()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(headers,cachedHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319implementPaxHeadersToCurrentEntry(currEntry,headers,this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeaders(currEntry.getPax(),headers,currEntry.getName());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319applyPaxHeadersFromCurrentEntry(currEntry.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319AppendPaxHeadersToCurrentEntry(headers,this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{currEntry.setName(zipEncoding.decode(longNameData));if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{currEntry.setName(zipEncoding.decode(longNameData));if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{currEntry.setName(zipEncoding.decode(longNameData));if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{currEntry.setName(zipEncoding.decode(longNameData));if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}finally{getNextTarEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java319try{currEntry.setName(zipEncoding.decode(longNameData));if(currEntry.isPaxHeader()){applyPaxHeadersToCurrentEntry(currEntry);}else{getNextTarEntry
