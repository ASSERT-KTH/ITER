bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(entrySize  -  entryOffset  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]    NegativeArraySizeException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (isDirectory())  {  return  0;  }  [BUGGY]  if(entrySize  -  entryOffset  ==  Integer.MAX_VALUE)  {  [BUGGY]  return  Integer.MAX_VALUE;  }  return  (int)  (entrySize  -  entryOffset);  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  globalPaxHeaders  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	187	187	1	replace	if(entrySize  -  entryOffset  ==  Integer.MAX_VALUE)  {	if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  if(entrySize  -  entryOffset  <  =  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]      NegativeArraySizeException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (isDirectory())  {  return  0;  }  [BUGGY]  if(entrySize  -  entryOffset  <  =  Integer.MAX_VALUE)  {  [BUGGY]  return  Integer.MAX_VALUE;  }  return  (int)  (entrySize  -  entryOffset);  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  globalPaxHeaders  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	187	187	1	replace	if(entrySize  -  entryOffset  <  =  Integer.MAX_VALUE)  {	if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  if(entrySize  -  entryOffset  >=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]        NegativeArraySizeException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (isDirectory())  {  return  0;  }  [BUGGY]  if(entrySize  -  entryOffset  >=  Integer.MAX_VALUE)  {  [BUGGY]  return  Integer.MAX_VALUE;  }  return  (int)  (entrySize  -  entryOffset);  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  globalPaxHeaders  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	187	187	1	replace	if(entrySize  -  entryOffset  >=  Integer.MAX_VALUE)  {	if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  if(entrySize  -  entryOffset  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]          NegativeArraySizeException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (isDirectory())  {  return  0;  }  [BUGGY]  if(entrySize  -  entryOffset  <  Integer.MAX_VALUE)  {  [BUGGY]  return  Integer.MAX_VALUE;  }  return  (int)  (entrySize  -  entryOffset);  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  globalPaxHeaders  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	187	187	1	replace	if(entrySize  -  entryOffset  <  Integer.MAX_VALUE)  {	if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  if(entrySize  -  entryOffset!=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]            NegativeArraySizeException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (isDirectory())  {  return  0;  }  [BUGGY]  if(entrySize  -  entryOffset!=  Integer.MAX_VALUE)  {  [BUGGY]  return  Integer.MAX_VALUE;  }  return  (int)  (entrySize  -  entryOffset);  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  globalPaxHeaders  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	187	187	1	replace	if(entrySize  -  entryOffset!=  Integer.MAX_VALUE)  {	if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              NegativeArraySizeException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (isDirectory())  {  return  0;  }  [BUGGY]    [BUGGY]  return  Integer.MAX_VALUE;  }  return  (int)  (entrySize  -  entryOffset);  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  globalPaxHeaders  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	187	187	1	replace	  	if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  if(entrySize  -  entryOffset  <  Integer.MIN_VALUE  ||  entrySize  >  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]    NegativeArraySizeException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (isDirectory())  {  return  0;  }  [BUGGY]  if(entrySize  -  entryOffset  <  Integer.MIN_VALUE  ||  entrySize  >  Integer.MAX_VALUE)  {  [BUGGY]  return  Integer.MAX_VALUE;  }  return  (int)  (entrySize  -  entryOffset);  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  globalPaxHeaders  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	187	187	1	replace	if(entrySize  -  entryOffset  <  Integer.MIN_VALUE  ||  entrySize  >  Integer.MAX_VALUE)  {	if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
