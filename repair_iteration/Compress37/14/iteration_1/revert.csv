projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.clone());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),value);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.inputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInput();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=coll.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.entrySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,true,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.numRecords);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,result);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.valueSet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders!=null?null:globalPaxHeaders.clone());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setLength(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getIntValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setEncoding(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.hasNext());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.peek());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.height);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false);
