projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.clone());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),value);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.inputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInput();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=coll.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.entrySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,true,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.numRecords);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,result);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.valueSet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders!=null?null:globalPaxHeaders.clone());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setLength(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getIntValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setEncoding(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.hasNext());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.peek());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.height);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders().getInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeadersInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders().get(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders(i.getRecordSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,hasHitEOF,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,0,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,hasHitEOF+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,hasHitEOF,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,hasHitEOF,result);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size()-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size()-3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=is.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.read(remainder);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readUTF();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,coll.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,coll.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.valueSet(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(GlobalPaxHeaders.keySet(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(GlobalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll.read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll.recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),dataArea,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.valueSet()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.valueArray());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.valueSet(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,width);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length-1,coll.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=is.readInput();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.getInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readFully();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readOut();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders),0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders)+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders),null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454(TarArchiveEntry<K,V>)i).setLength(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setEnd(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setMask(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setPaint(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setMask(1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,true,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=is.readInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInputStream(true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInputStream(IResource.DEFAULT_KEY);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454FinalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454staticfinalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,width);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(GlobalPaxHeaders.keySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(GlobalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()/2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.numRecords+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.numRecords-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.numRecords+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.numRecords)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),dataArea,value);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),value);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),value,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,0,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,width);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,null,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size()-3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size()-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1+length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1,globalPaxHeaders.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1,globalPaxHeaders.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1,globalPaxHeaders.length*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1,globalPaxHeaders.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length/1,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length*2,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.bytes);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.getCharset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.available);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.readInt()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=this.coll.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.intValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=col.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.peek()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.peek(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,globalPaxHeaders.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,globalPaxHeaders.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,globalPaxHeaders.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,globalPaxHeaders.length+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),0,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.length+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.length-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.hasNext());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.next());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.next());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,col.hasNext());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.remaining());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.iterator());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.entrySet(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.length+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(GlobalPaxHeaders.values(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(result,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,result.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getIntValue()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getIntValue()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=this.coll.getIntValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getIntValue(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=col.getIntValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),dataArea,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),hasHitEOF,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),result);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),is);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),dataArea);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),restLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),this.recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,16);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length/2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.recordSize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.recordSize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.getSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.getRecordSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.recordSize,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-1,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()+1,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-2,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()-4,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream(read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayOutputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalByteArrayInputStreamcoll=newByteArrayInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalInputStreamcoll=newByteArrayInputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayOutputStream(read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.readInt()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=i.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=col.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.getInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.int();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,encoding,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(encoding,hasHitEOF,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(encoding,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,zipEncoding,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,hasHitEOF,stringEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size()-3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size()-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=coll.read(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=coll.read(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=coll.read()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=col.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=coll.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnnull;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=is.inputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newBufferedInputStream(i.inputStream());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=IOUtilities.inputStream(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=TarArchiveEntry.inputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayOutputStream(i.inputStream());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),width);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),read)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values()+read)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())+0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())+SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read(remainder);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454charlen=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerlen=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read(remainingSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAME)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.read(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.read(this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.read(0,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.read(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders==null?null:globalPaxHeaders.clone());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders==null?null:globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders!=null?null:globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders==null?null:globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),coll.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),coll.recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),coll.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),coll.inputEnd);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.height+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.height-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.width);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.getHeight());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.height+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i)+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i),globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i),globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i+1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),dataArea,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),hasHitEOF,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),result);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),is);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders,false,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(),col);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setEncoding(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454(TarArchiveEntry<K,V>)i).setEncoding(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setRawEncoding(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setEncoding(urlEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454(TarArchiveEntry<K,V>)i).setEncoding(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setEncoding(codeBuffer);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders!=null?null:globalPaxHeaders.toArray());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readOutputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setSize(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setCharacters(0,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setCharacters(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_SIZE)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454FinalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454staticfinalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(newHashMap<String,String>()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,0,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,dataArea,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,maxSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-2,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length*1,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globals);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.valueSet(),value);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,8);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.getKeySet(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.getKey(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,SMALL_BUFFER_SIZE);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.getHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.readSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.hasNext()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.reset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length+1,totalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders==null?null:globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454FinalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.getKeySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,length,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readOutput();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length,0,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.length-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.records);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.lengthRecords);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),dataArea);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setTarEncoding(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setZipEncoding(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setCurrentEncoding(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setPaint(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setZipEncoding(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setPadding(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(headers));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i==null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&coll.get(ch)!=0){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),coll+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size-4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read(remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read(remainderSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.read(remainderLimit);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream(length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream(in.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length/1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),data);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders(null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders(i.next());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=IOUtils.readInt(coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.values(),restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),available);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),maxSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.read(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.in.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readIn();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i==null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){while(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),parameters);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),key);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),value,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i).headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=this.i.inputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,resultLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i!=null){if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()*2-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size()*2+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=str.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.readInt()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,col);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())+4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values()-1)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.size(),hasHitEOF,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,0,coll.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers).reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.size(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.keySet(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.height,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.readBytes());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.getHeaderSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.size()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),coll).reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getLocalFileHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=getGlobalPaxHeaders(i.getModule());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=IOUtils.readFully(coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=coll.read(0,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,256);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.read(remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.height-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.valueSet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,hasHitEOF,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,zipEncoding,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,true,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),this.headerSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders!=null?null:globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders!=null?null:globalPaxHeaders.toArray(headers));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454staticfinalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.values(),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.length)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders.entrySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,dataArea,this.hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,globalPaxHeaders.values());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream(i.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream(recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newByteArrayInputStream(0,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(!hasHitEOF){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<len;++i){returncoll.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.pop());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.peek(),restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){coll.close();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setLenient(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).clear();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).append('n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i).recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.hasNext()){if(!hasHitEOF){returncoll;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length/2,globalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=IOUtils.readString(coll,i.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=IOUtils.readFully(remainders,i.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=IOUtils.readFully(coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=IOUtils.readInt(coll,i.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454ch=IOUtils.readFully(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.headers,height);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.available();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getLongValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integeri=coll.getIntValue(remainder);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=i.readInputStream(remainder);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){returncoll.get(ch
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=0;ch<len;ch++){returncoll.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(remainders,false);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.length-1,totalPaxHeaders.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(result.size(),result);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),this.hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet(),restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454intlen=i.getLength();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=0;ch<len;ch++){coll.put(ch,i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=0;ch<len;ch++){coll.put(ch,i.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnthis;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){returncol;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.get(i.getKey()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders),i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.toArray(remainders),replicationSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.remainder());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.getKey());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i.getSource());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454staticfinalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Map<String,String>headers=newHashMap<String,String>(globalPaxHeaders.keySet());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newBufferedReader(i.inputStream());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newFileInputStream(i.getVersion());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454InputStreamcoll=newFileInputStream(i.inputStream());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454Integerch=this.coll.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,this.recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,this.headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).encode(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454((TarArchiveEntry<K,V>)i).setEncoding(ARRAYEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(globalPaxHeaders,coll.recordSize)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,hasHitEOF,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java454finalMap<String,String>headers=newHashMap<String,String>(remainders,i.hasNext());
