projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(record);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parsePaxHeaders(this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(paxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444(TarArchiveEntry)this.globalPaxHeaders.get(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444InputStreamis=getGlobalPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444(TarArchiveEntry)this.globalPaxHeaders.clone();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444(TarArchiveEntry)this.globalPaxHeaders.get(paxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444(TarArchiveEntry)this.globalPaxHeaders.get(entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444(TarArchiveEntry)this.globalPaxHeaders.get(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444(TarArchiveEntry)this.globalPaxHeaders.get(recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(record);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(paxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=getGlobalPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(headers,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(compiler);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(record);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(record,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(globalPaxHeaders,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(globalPaxHeaders,true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(paxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(tr);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parsePaxHeaders(record);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=this.globalPaxHeaders.parsePaxHeaders(is);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parsePaxHeaders(paxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parsePaxHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parsePaxHeaders(null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parseHeaders(this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=getPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=newHashMap<String,String>();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=this.globalPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=globalPaxHeaders();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parsePaxHeaders(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(recordSize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(recordSize,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(recordSize,headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getParent();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getNextEntry();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(record,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=globalPaxHeaders.parsePaxHeaders(this);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(globalPaxHeaders,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(recordSize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(headers,encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=getPaxHeaders(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(zipEncoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=globalPaxHeaders.parsePaxHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=globalPaxHeaders.parsePaxHeaders(paxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseGlobalPaxHeaders(this,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getNextPaxHeaders();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){skipPaxHeaders();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(globalPaxHeaders,headers.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=zipEncoding.parsePaxHeaders(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=zipEncoding.parsePaxHeaders(encoding);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parseHeaders(this,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(record.getHeaders());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=parsePaxHeaders(globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java444finalMap<String,String>headers=is.parsePaxHeaders(this,headers);
