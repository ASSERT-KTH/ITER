projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=coll.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrentSize())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.next())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.get())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrent())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.recordSize())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrentLimit())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460whil((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!headers.contains(ch)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=coll.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.get())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch<SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers[i]=headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch!=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch==i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()==-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()>=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())>>-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.in())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.next())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getValue())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.next())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=globalPaxHeaders.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.get(i))!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((read=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.record())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460While((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=I.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remaining())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrentSize())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getNext())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!remainders.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.hasNext())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=currEntry.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.get())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.next())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch<=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remove())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.isExported())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainderLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.in())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=this.headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remainder())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
