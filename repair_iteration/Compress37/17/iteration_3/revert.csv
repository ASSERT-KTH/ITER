projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=coll.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrentSize())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.next())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.get())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrent())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.recordSize())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrentLimit())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460whil((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!headers.contains(ch)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=coll.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.get())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch<SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers[i]=headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch!=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch==i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()==-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()>=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.read())>>-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.in())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.next())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getValue())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.next())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=globalPaxHeaders.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.get(i))!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((read=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.record())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460While((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=I.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remaining())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrentSize())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getNext())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!remainders.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.hasNext())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=currEntry.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.get())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.next())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch<=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remove())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.isExported())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainderLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.in())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=this.headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remainder())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=col.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=col.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(intch=headers.size();ch>=0;ch<SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch<SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(intch=headers.size();ch>=SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>>0;ch<SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()!=0)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainders.read()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainingLen!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(i.read()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrent())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,headers)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,restLen)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i],hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(inti=0;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.get())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.get())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.in())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.in())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460whil((ch=i.in())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.in())>>-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(headers.hasNext()&&!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||!headers.contains(ch)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(headers.hasNext()&&!headers.contains(ch)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!headers.containsKey(ch)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(inti=0,len=headers.size();i<len;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(inti=0,len=headers.size();i<len;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,headers.size();i<len;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers[i]=headers[0];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers[0]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(inti=0,headers.size();i<len;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remainder())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainingLen<i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)>>-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<restLen)!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i=headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i=coll.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainingLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(inti=0;i<headers.size();i++){headers[i]=headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers[i]=newString(headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers[i]=globalPaxHeaders[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.length();i++){headers[i]=headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460Headers[]headers=headers.toArray(newHeaders[headers.size()]);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||isEnabled(TarArchiveEntry.BLOCK_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE,restLen)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE,headers)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE,headers.length)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE,true)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE,headers.size())){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&hasHitEOF&&(ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch=coll.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i==null&&!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&isEOF&&(ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||!remainders.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(remainders.hasNext()&&!remainders.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&i.next()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&restLen.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()==0)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(i.read()==-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()>-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null||headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalMap.Entry<String,String>headers=headers.entrySet();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){returnentryOffset;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalMap.Entry<String,String>headers:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){returnentrySize;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIl
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalStringkeyword=headers.get(i.getKeyword());if(keyword==null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword==null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.next())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.hasNext())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.read())>>-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.seek())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.seek())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460whil((ch=i.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(remainingLen!=0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[0]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=globalPaxHeaders.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i==null&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&i.next()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i>=null&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&coll.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null||i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.isExported())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.isExtern())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.isExported())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.isExported())!=0){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getNext())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainderLen=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainderLen=i.read())!=0){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainderLen=i.read()+1)!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasMoreElement()&&(remainderLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(remainderLen=i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>>0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>>0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=len;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=len;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch>>0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.recordLimit())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.recordSize())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch<i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch==i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch<=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES,headers)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((restLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()<1){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>1){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.next())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>>0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=len;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>>0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch>>0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()>>-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()[Delete]-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()>=0)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.in())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.in())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.in())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.record())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=coll.record())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(inti=0;i<headers.size();i++){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i],hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.length();i++){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,headers)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,true)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.CLUSH_PASSED_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_PASSED_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=headers.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalintch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=currEntry.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((currEntry=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((currEntry.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=currEntry.getKey())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=currEntry.getValue())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.containsKey(i.getKeyword())){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(i.getKeyword())){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null||headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnentry;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){returnentry;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460Headers.Entry<String,String>headers=headers.entrySet();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460whil((ch=headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=headers.get(ch))!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE,restLen)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE,read)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE+1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE,true)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE,headers.length)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)||hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,true)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers.size())){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.contains(ch)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getKey())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(ch==i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalintch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],header
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.getCurrentLimit())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.seek())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.seek())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=globalPaxHeaders.get(i))!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.get(len))!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.get(i))==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.get(i),len)!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.get(remaining))!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460whil((ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<ch)!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i<ch.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(ch!=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i!=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,headerLimit=headers.size();i<len;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,read=headers.size();i<read;++i){headers[i]=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!headers.get(ch)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!remainders.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&!headers.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i].replace('n','r'));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460While((ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.current())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch],
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remaining())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460While(i.hasNext()&&!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(i.read()>=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(i.read()>=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(read==-1){if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(read!=-1){if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE)||hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE)&&hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i<headers.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(ch<i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.WRITE_PASSED_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<heads.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();++i){headers.get(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460headers.put(i,headers[i]);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(inti=0;i<headers.size();++i){headers.get(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(i.read()==-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(headers.read()==-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=headers.size()&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=headers.length&&i.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&i.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()==0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(Map.Entry<String,String>header:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(Map.Entry<String,String>headers:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(remainingLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i<i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch>=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SECOND)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=this.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers.length)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intnumRecords=this.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_KEY)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_KEY)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(headers.size()<0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(Map.Entry<String,String>header:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch==i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=headers.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(read==-1){if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(read!=-1){if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460While(i.hasNext()&&!remainders.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.hasNext())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i=i.getNext())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,read=headers.size();i<read;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,headerLimit=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((read=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((read=i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.isArray())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch!=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(i=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=hasHitEOF&&(i=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(read=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.length();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword)
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(i.read()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(headers.read()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!isEOF&&(i.read()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(remainderLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(len=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&(remainderLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=headers.remove())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(inti=0;i<headers.size();i++){headers[i]=headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(inti=0;i<headers.size();i++){headers[i]=newString(headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers[i]=(byte)headers.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>=SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers==null){for(intch=headers.size();ch>=0;ch>=SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch<len;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch>=SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE)&&hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE)||hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(TarArchiveEntry.BLOCK_SIZE),hasHitEOF){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.isEmpty()&&!headers.isEmpty()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.get(remainders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460finalintnumRecords=headers.size()+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&restLen>0){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_BUFFER_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.n())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460IntegernumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.read()<0)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch{i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.skip())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(i.seek()!=-1)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(0,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=1;ch<SMALL_BUFFER_SIZE;ch++){returnheaders[ch];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch<SMALL_BUFFER_SIZE;ch++){returnheaders[CH];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=i.remove())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&headers.hasNext()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&i.canRead()){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0||headers.get(keyword)!=null){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){headers.put(keyword,headers.get(keyword));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460headers[i]=headers[i].toString();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers[i]=headers[j].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE||isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE,headers.size())){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(restLen=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.read()){if(headers!=null){for(intch=headers.size();ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.read()>-1){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.read()>0){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch<0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.read()>-1){if(headers!=null){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(keyword,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(ch!=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0;i<headers.size();i++){headers.put(i,headers[i].replace('n','/'));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_ENCODING_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.INTEGER_PASSED_TO_STREAM)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers.get(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((ch=this.headers.get(i))!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i!=null&&!hasHitEOF&&(ch=i.read()+1)!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers[i]=headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460intheaderLimit=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_SIZE)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(i.hasNext()&&headers.contains(ch)){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch<0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.read()>-1){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.read()>0){for(intch=headers.size();ch>=0;ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){for(intch=headers.size();ch>=0;ch>0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460for(intch=headers.size();ch>=0;ch++){headers.put(ch,headers[ch]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()<0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while(!hasHitEOF&&(height=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.hasNext())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers!=null){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIl
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownew
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){finalStringkeyword=headers.get(i.getKeyword());if(keyword!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()<0){for(Map.Entry<String,String>entry:headers.entrySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(headers.size()>0){for(Map.Entry<String,String>entry:headers.keySet()){returnheaders.entrySet();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())!=-1){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java460while((i.read())!=-1){if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
