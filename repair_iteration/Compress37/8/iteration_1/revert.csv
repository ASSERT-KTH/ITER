projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.readNow());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount(1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableStart());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableEnd,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordCount();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLimits();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entries.length);
