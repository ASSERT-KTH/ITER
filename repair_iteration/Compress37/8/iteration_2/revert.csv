projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.readNow());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount(1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableStart());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableEnd,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordCount();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLimits();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entries.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableEnd()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableEnd()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableEnd()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableStart());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableEnd()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=currEntry.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652bytenumToRead=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen+1,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,numToRead+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-entrySize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-entrySize,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()/entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()*entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.length()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.length()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.length()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.length()-1,this.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,cache.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,numRecords);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,accessSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,count);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessibleOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(hasHitEOF||isDirectory()||entryOffset!=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=numToRead){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,fullNameData.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,accessLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(0,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessibleSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(length,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652bytenumRecords=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableCount()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableCount()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,this.availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableCount()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,this.availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessCount()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessCount(1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,0,accessCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,offset,accessCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLimit();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652IntegernumRecords=currEntry.getRecordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize(entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableCount()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.readCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableCount()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=is.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.entrySize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.entryLimit);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.currEntrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,this.entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords!=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords==0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){for(inti=0;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableStart()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-offset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-offset,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()*offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-offset,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.available(),numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.available()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.available()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableEnd);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableEnd,offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(lastRead,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(!hasHitEOF||isDirectory()||entryOffset!=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,accessCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableStart()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=is.min(numToRead,is.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=is.min(numToRead,numRecords.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.available()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,this.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,available()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableOffset()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessibleRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableSize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessSize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,numToRead-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entries.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessLen()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessLen()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,offset,accessLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,0,accessLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(!hasHitEOF||isDirectory()||entryOffset!=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(!hasHitEOF||isDirectory()||entryOffset>>entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,this.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.readNow()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes()*1000);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableAsBytes());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()*entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-entrySize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()/entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.available()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(entrySize,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,currEntry.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,cache.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(0,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()-1)-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()-offset)-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()-1)/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()+1)-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available())/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(remainderLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(remainderSize,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableLen,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(length,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=entrySize;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.length-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=this.currEntry.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=entrySize.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,offset-availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize-availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,buf.length-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessibleLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords!=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,remainingLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderSize,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,numToRead+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=is.max(numToRead,is.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.available()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(is.available(),numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.available()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableRecords()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=is.availableRecords();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableRecords()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableRecords()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,hasHitEOF,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,hasHitEOF,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,hasHitEOF,isDirectory());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessibleCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessRecords()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessRecords(),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessRecords()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessRecords()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize+availableOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,offset+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset+numRecords);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+entrySize,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+1,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableRecords.length,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableRecords.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-offset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()*offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.available()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF,isDirectory());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLimits()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLimits()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLimits(entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLimits(offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652IntegernumRecords=currEntry.getRecordLimits();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordSize()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordLimit();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.length();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordSize()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getName();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-offset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-offset,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-offset,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords!=0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){for(inti=0;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableOffset()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableOffset()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableOffset()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.release());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(hasHitEOF||isDirectory()||entryOffset!=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652||hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()/2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*2+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*2-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*4);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(0,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableRecords()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,this.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,count(numRecords()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,accessSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,fullRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount(1),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount(2));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount(1)-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount(1)+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount(0));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessibleEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.readNow()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.readNow()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,this.readNow());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.readNow()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.readNow()-totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()/1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordCount()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordCount()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordCount()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordLength();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordCount(entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords!=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652for(inti=0;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()*offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-offset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-offset,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead!=0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==0){if(hasHitEOF||isDirectory()||entryOffset!=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652||hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableLen()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableLen()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()*offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-offset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-offset,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,rest.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,rest.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,remaining.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableCount())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableCount()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entries.length+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entries.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entries.length-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entries.length*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.available()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.available()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.available()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-1,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,numToRead-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length-1,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length-1+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length-1,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableRecords.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords.length-1,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=currEntry.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=rest.read(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,entryLimit,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize+1,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessSize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,numToRead+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableSize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount()*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableEnd()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableEnd()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableEnd()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,rest.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,remaining.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableSize,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableRead,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(0,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entrySize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=cache.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableLength());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableEnd()-start);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-buf.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,numRecords);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,accessRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableRecords()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,availableLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,restLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableRecords.length,numToRead-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableRecords.length,availableRecords.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=numToRead){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(hasHitEOF||isDirectory()||entryOffset==available){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,offset-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,availableLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,availableLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.readNow());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.readNow());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.readNow());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLimit,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+entrySize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+entrySize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryLimit+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.available(),rest.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.available(),restLen.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.available(),rest.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,restLen.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes(2));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes(1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.entrySize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,numToRead+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652ch=is.read(buf,offset,0,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableSize*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,0,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,numToRead+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableRead,numToRead-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=this.currEntry.getRecordCount();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(currEntry!=null){if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){if(hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-buf.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableCount,numToRead(1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.availableEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,numRecords);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableLen-availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numToRead;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.available()-buf.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords==0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords!=0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords!=null){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableSize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()*2-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainderLen,totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=is.min(numToRead,restLen.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.available()-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.readRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableLen,offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableLimit,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableNumber());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,restLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen-offset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,numToRead-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,accessRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-start);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords==0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numToRead;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,restLen-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(availableLen,rest.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,availableLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,restSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,remainingSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordStart();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=this.currEntry.recordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordSize()+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableEnd(),numToRead-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableLen,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF||isDirectory());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,hasHitEOF-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableOffset+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(entrySize,entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,entries.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entries.length,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-buf.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-inputSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableEnd()-start);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableCount())+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,accessibleCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessStart());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableRecords.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(recordSize,availableRecords.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-inputSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,currEntry.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(!hasHitEOF||isDirectory()||entryOffset>=numToRead){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>=0){if(!hasHitEOF||isDirectory()||entryOffset>=numToRead){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,cache.length());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,entryLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entryLen,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(0,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=is.min(numToRead,restLen.availableCount());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,availableLen()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableEnd(),numToRead-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,hasHitEOF+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(currEntry==null){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){if(!hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize()+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize()+offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=this.currEntry.getRecordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords==0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords!=null){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numToRead;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,restLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableRead,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,accessLimit);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords==0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numRecords>0){for(inti=0;i<numToRead;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=this.currEntry.getRecordLimits();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,remaining.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableSize,remainder.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordSize(entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordSize()+entryOffset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,currEntry.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize(1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset(1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead<0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getBytes(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,foundRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=is.read(buf,offset,numToRead+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-entrySize)-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset()-entrySize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,rest.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.available(),rest.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,availableLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,availableLen-offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(entrySize,entries.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>=entrySize){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(!hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(!hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,is.available()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes(offset)-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableAsBytes())-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(entrySize,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessibleOffset()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(remainder.length,entryLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,remaining.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,availableSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumToRead=Math.min(numToRead,this.available());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.readLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,rest.available()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entrySize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessRecords()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableOffset()+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entryLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(entrySize,availableOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,entryOffset+entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIOException("".);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset==entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("".);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(hasHitEOF||isDirectory()||entryOffset>=entrySize){thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,accessLen());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableLen*2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){for(inti=0;i<numRecords;i++){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){for(inti=0;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,available()-entrySize)-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entrySize)-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(hasHitEOF||isDirectory()||entryOffset==entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(hasHitEOF||isDirectory()||entryOffset>=entrySize)return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>0){if(hasHitEOF||isDirectory()||entryOffset==entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.releaseEnd());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(entrySize,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSimits();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.recordLimits();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordStart();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>0){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize)return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(entrySize>=entrySize){if(!hasHitEOF||isDirectory()||entryOffset>=entrySize){return-1;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=currEntry.getRecordSize()+entryOffset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableOffset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead>=0){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652if(numToRead==-1){for(inti=0;i<numRecords;++i){buffer[i]=currEntry.getValue();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen(4));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen(2));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,this.available()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,is.available()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,entryLimit);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(1,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,entryLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,entrySize+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.max(numToRead,availableAsIterables()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableStart()-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,is.availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,entries.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(1,availableRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryLen-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(0,entrySize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.releaseRecords());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableLen()-entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-entryOffset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,availableRecords()-offset,entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,this.availableRecords.length-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(availableRecords.length,entrySize-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,offset-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,entryOffset-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,accessLen-entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652numToRead=Math.min(numToRead,offset+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java652intnumRecords=is.read(buf,offset,-1);
