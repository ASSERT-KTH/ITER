projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(keyword,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<len;read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}elseif(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnedheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext())){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()>read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()<len){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.next());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(ch=='n'||ch=='r'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){headers.put(len,headers);}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,headers.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.put(keyword,headers.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch)
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='e'||ch=='E'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='['||ch==']'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='r'||ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){headers.put(keyword,headers.get(0).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers=headers.get(ch);read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<heads.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){read++;}else{headers.put(0,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){read++;}else{headers.put(headers,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(headers,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<globalPaxHeaders.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(key)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(headers.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(headers.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<this.headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='9'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==':'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='0'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.equals(headers.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.getLength()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'||ch=='@'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<headers.get(0);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch!='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch!='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch>='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch>='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch=='r'){read++;}elseheaders.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers.contains(ch)){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)||headers.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()==read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()!=read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read(i.next()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()>restLen){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(index+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=coll.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461whilst((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())==-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&i.hasMoreElements()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&coll.isEmpty()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&coll.size()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&i.hasMoreElement()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(Map.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalMap.Entry<String,String>headers=headers.entrySet();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalMap.Entry<String,String>headers=newHashMap<String,String>(headers.entrySet()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)&&headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(ch)&&!headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.containsValue(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(2);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&i.hasNext())){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&coll.isEmpty())){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext())&&(i.hasNext())){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,null);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){headers.put(keyword,coll.toString(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<length;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=1;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.length;read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.read()>-1)){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<len;read++){headers.put(keyword,coll.toString(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.read()>-1)){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){for(intread=0;read<len;read++){headers.put(keyword,coll.toString(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.read()).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<len;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<ch;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.get(keyword,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<n;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<length;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=-1){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){while((ch=i.read())!=-1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasMoreElements()){if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)currEntry.next()).reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461(TarArchiveEntry<K,V>)i.next()).reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).getMethod().reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRecordSize(read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).getMethod();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){read++;}else{headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){read++;}else{headers.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){heads.put(keyword,coll.toString(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='t'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{thrownewIllegalArgumentException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Readerreader=headers.get(i.next());if(read==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{thrownewIllegalStateException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Readerreader=headers.get(i.next());if(read>=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(headers,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==','||ch=='@'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'||ch=='@'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers!=null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers==null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers!=null||headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(ch)||!headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()==0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.size()==0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()<0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size()+1;read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=1;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size()+len;read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<this.headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size()-1;read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.length;read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)){if(!hasHitEOF&&headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF&&headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)){!hasHitEOF&&headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers!=null&&headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers!=null&&coll.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.get(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(!i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()>read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()<len){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()!=read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()>=read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size()+1;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=1;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<this.headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size()+len;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size()-1;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.length;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(globalPaxHeaders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(i.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(ch.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(globalPaxHeaders.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(remainders.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(headers.size()+read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()<0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()==0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.size()<0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=read;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(i,headers[i]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=read;i<headers.size();++i){headers.put(i,headers[0]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.get(0);++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(headers.size()+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(headers.size()*1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(ch.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString()+"n");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(word,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index-2);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index-2);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index-3);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.containsKey(ch)){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,header
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size()-read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers=globalPaxHeaders.get(ch);read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers=newHashMap<String,String>(headers.size());read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers=newHashMap<String,String>();read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers=newHashMap<String,String>(headers);read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers=coll.get(ch);read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers=newHashMap<String,String>(headers.get(ch));read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers==null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.get(0);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>1){for(intread=0;read<headers.get(0);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<headers.get(1);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()==0){for(intread=0;read<headers.get(0);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>=0){for(intread=0;read<headers.get(0);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.get(1);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasMoreElements()){if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>1){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch))read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)&&headers.size()>0)read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_SIZE)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_SIZE)||isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){while(!i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,coll.toString(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,headers.get(keyword).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,col.toString(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.getValue()).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,ch.toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers==null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null||headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){if(i.next()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()<1){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>1){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.get(ch).length()!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnedheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)){read++;}else{headers.put(ch,headers);returnedheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null&&headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers==null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers.put(ch,headers);}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!headers.contains(ch)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!headers.contains(ch)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,coll.toString(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){for(intread=0;read<SMALL_BUFFER_SIZE;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){for(intread=0;read<globalPaxHeaders.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){for(intread=0;read<this.headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){for(intread=0;read<i.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){for(intread=0;read<ch.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers==null||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){if(i.hasNext()){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch))read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)&&headers.size()>0)read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null)read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index+2);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index,len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){returnheaders.get(index+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.nextToken();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.nextInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.getValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==']'||ch=='['){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==']'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='['||ch==']'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='['&&ch==']'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,coll.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,headers.get(keyword));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,coll.toString(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,globalPaxHeaders.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,col.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.getValue());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(ch=='n'||ch=='r'){headers.put(len,headers);}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(ch=='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='n'||ch=='r'){headers.put(len,headers);}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){headers.put(len,headers);}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.getLength()==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.getLength()!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.getLength()>=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.getLength()<=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch.hasNext()||i.getLength()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||ch.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.containsKey(ch)){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.next()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.next()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch+=i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||!i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>read){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(ch=='r'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,headers[i]);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.getInt(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.getInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=globalPaxHeaders.readInt();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.readInt()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.getIntValue(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.readInt(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<globalPaxHeaders.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()==0){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()!=0){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>=0){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers!=null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers==null||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.read()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size()-1;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=1;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size()+1;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<this.headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size()+len;read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read>=headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()==0){for(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()!=0){for(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>=0){for(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>1){for(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<headers.get(ch);read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)&&headers.size()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.next(),read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,read,i.next());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.next()+read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.nextToken());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.nextLine());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.next(),restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch!='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch!='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch>='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch>='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.length;read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<len;read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read=0;read<len;read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=0;read<len;read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(i,headers.get(i).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.put(keyword,coll.toString(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.put(keyword,globalPaxHeaders.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.put(keyword,headers.get(ch),read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461whil((ch=i.read())!=-1){headers.put(keyword,headers.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.put(keyword,coll.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>1){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()<0){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.getKeyword(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.remove(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.setHitEOF(hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.setHitEOF(hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.writeHexString(headers,ch,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.writeHexString(headers,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(zipEncoding!=null&&!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!zipEncoding.equals(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(key)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(key)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(key)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch=='t'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(ch=='n'||ch=='t'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='t'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index+2);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='0'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<'0'||ch>'9'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<'0'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<'0'||ch>'9'){if(ch>='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i.read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(remainders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnedheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.equals(globalPaxHeaders.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.hasNext()||ch.equals(globalPaxHeaders.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.hasNext()||ch.equals(i.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.hasNext()||ch.equals(headers.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.hasNext()||ch.equals(bodys.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES))read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.AUTO_CLOSE_SIZE)||isEnabled(Feature.AUTO_CLOSE_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.AUTO_CLOSE_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.AUTO_CLOSE_SIZE)&&isEnabled(Feature.AUTO_CLOSE_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.read()>-1)){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.read()>-1)){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.put(keyword,coll.toString(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(ch=='n'||ch=='r'){read++;}else{headers.put(0,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){headers.put(0,headers);}else{headers.put(0,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||read!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&restLen!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read>=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)&&headers.size()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='.'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||read=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='n'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='a'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='A'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.length;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<ch;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(ch==':'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==':'){if(read==0||ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)&&headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||!i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||i.next()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||i.hasNext()<len){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){while(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=headers.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(globalPaxHeaders,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(globalPaxHeaders,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.in.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,headers[i].getValue());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<len;read++){headers.put(keyword,headers.get(0).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){headers.put(keyword,headers.get(1).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(keyword,headers.get(0).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len;read++){headers.put(keyword,headers.get(i.read()).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(ch=='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(ch!='#'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){for(intread=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(headers.size()>read){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>read){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.get(ch);read++){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){finalintread=0;read<headers.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='n'||ch=='r'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((read=i.read())!=-1){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While((ch=i.read())!=-1){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461whil((ch=i.read())!=-1){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())==-1){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(len,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='9'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='9'||ch>'9'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='9'){if(ch=='n'||ch>='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(ch=='9'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.read(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toStr
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers==null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){while(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(i,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(len,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(0,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(p,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null&&headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null&&headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers==null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<globalPaxHeaders.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<globalPaxHeaders.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(ch,headers.get(keyword).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(keyword,headers.get(ch),coll.toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(keyword,headers.get(ch),encoding.toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(keyword,headers.get(ch).toString(),read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(keyword,headers.get(ch),i.toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(ch,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.read()>-1)){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.put(keyword,coll.toString(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=headers.size()-read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=headers.size()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){while(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&!hasHitEOF)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&!hasHitEOF)){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()<restLen){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()!=len){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()==len){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()>=len){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.size()==0&&i.hasNext()&&headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.hasNext()&&!headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.hasNext()&&coll.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.contains(ch)||headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.hasNext()&&ch.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461whil((ch=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())>=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((read=i.read())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.next())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,coll.toString(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)&&!headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(!i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){finalintread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null&&headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers==null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i,len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i+1,len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)&&!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)||!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.length;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<ch;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,coll.toString(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&coll.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='t'||ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(i,headers[i].getHeaderSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize()+read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size()-read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()<0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()==0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>=0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)&&headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.get(ch)-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.size()>read){read++;}else{headers.put(0,headers.get(ch)-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<this.headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<this.headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()>0){for(intread=0;read<this.headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<this.headers.size();read++){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='E'||ch=='E'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='-'||ch=='+'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()==0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch)
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch)}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAME)&&i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAME)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_SIZE+1)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,coll);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,newBigInteger(len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,newBigInteger(read));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,newBigInteger(len),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()>read){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()<len){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!i.hasNext()){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()!=read){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.next()){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){while(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.next()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.hasNext()||i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=1;read<headers.size();read++){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size();read++){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<len;read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<SMALL_BUFFER_SIZE;read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size()-read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.read(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.read(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.read(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.get(ch,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{headers.get(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{headers.get(ch,coll);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{headers.get(ch,len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&headers.contains(ch))){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&headers.get(ch)!=0)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext())&&!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext())&&headers.get(ch).length()!=0){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(headers,read,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(headers,read,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(headers,read,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(headers,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(remainders,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(globalPaxHeaders,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(headers,read,remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasMoreElements()){if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.AUTO_CLOSE_SOURCE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE))read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.read()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(!i.read()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){for(intread=0;read<len;read++){headers.put(keyword,coll.toString(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.get(0);read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES,read)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES,read)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){read++;}else{headers.put(headers,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='n'){read++;}else{headers.put(headers,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){headers.put(headers,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=headers.size()-read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=headers.size()+read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaders.size()>0){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.get(1);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.get(0);read++){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaders.size(){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaders.size()>0){for(intread=0;read<headers.get(1);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,coll.toString(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()==0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()==0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()==0){for(intread=0;read<heads.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers==null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461longread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,headers[ch].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.size()/2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()|=read>0){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){while(i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&coll.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadByteArrayOutputStreamcoll=newReadByteArrayOutputStream();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.next()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<ch;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers==null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read|=i.hasNext()){read++;}elseif(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){reader++;}elseif(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(index-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(index-2);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE,headers)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&i.hasNext())){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&!remainders.contains(ch))){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&headers.get(ch)!=null)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalinthasHitEOF=headers.size()>0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE,read)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE)||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).headerSize.reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).headerReset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<len;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<numRecords;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<length;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<numRecords;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read(headers,0,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read(headers,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!zipEncoding.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='e'||ch=='E'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){read++;}else{headers.put(0,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){headers=headers.get(ch);read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers=headers.get(ch);read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.contains(ch))read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<'9'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+='9'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,headers.get(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers==null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAME)&&i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||i.isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.hasNext();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.hasNext();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ptr,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<heads.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(i+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read<=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<n;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461whilst((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(headers.size()-1+read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While((ch=i.read())!=-1){headers.put(keyword,headers.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch),hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<heads.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasChildren()){if(!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasChildren()){if(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<heads.size();read++){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME,headers)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME)||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME,headers)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<n;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<ch;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null){while(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.get(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.contains(ch)){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.indexOf(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.read(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(globalPaxHeaders,i.next());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(remainders,i.next());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.remainder());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch==':'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(ch==':'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch==':'||ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)||headers.size()==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<names.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<len.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>1){for(intread=0;read<headers.get(1);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>=1){for(intread=0;read<headers.get(0);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(headers,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(headers,0,read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch)
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<this.headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<this.headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getKey());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getKey());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.get(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='['||ch>']'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=0){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.contains(ch))read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch!='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<heads.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(headers.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()&&i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES,headers)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadOnly=isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnglobalPaxHeaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheads.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnHeaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadOnly=i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(i.read()>-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<heads.size();read++){returnheaders.get(index+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_SIZE)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()>=0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(needEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='r'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.get(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(ch)&&headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadOnly=i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){for(intread=0;read<len;read++){headers.put(keyword,i.next()).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){for(intread=0;read<len;read++){headers.put(keyword,i.next().toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.read()).toString();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461i.setEnabled(Feature.QUOTE_FIELD_NAMES)&&read!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<globalPaxHeaders.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<heads.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!hitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(needEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(needHitEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if('n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(null!=ch){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null;for(Map.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=0){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.hasNext()&&ch.equals(headers.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()&&ch.equals(headers.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.next().hasNext()||ch.equals(headers.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()||ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.read(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.read()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<heads.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()<1){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){while(headers!=null){if(!headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>=0){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()!=0){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()<=0){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=globalPaxHeaders.get(headers.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(globalPaxHeaders.size()+read);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==':'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(needEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='r'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(null!=ch){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()&&ch.getLength()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!i.hasEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){!i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!i.hasEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.get(ch)!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)||headers.size()==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<length;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!hasHitEOF){read++;}else{headers.get(0,headers.size()-1);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<headers.size();++i){headers.put(0,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<headers.size();++i){headers.put(i,headers[0]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(i,headers[i]);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<heads.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.hasNext()&&headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.get(ch)!=null&&headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.size()==0&&headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.contains(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(i.hasNext()&&headers.get(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.hasNext()&&headers.get(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hitEOF){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Len<SMALL_BUFFER_SIZE){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Len<SMALL_BUFFER_SIZE){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Len<SMALL_BUFFER_SIZE||len>SMALL_BUFFER_SIZE){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Len<SMALL_BUFFER_SIZE||len>SMALL_BUFFER_SIZE){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.clear();for(intread=0;read<globalPaxHeaders.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){for(intread=0;read<globalPaxHeaders.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<globalPaxHeaders.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,coll.toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.read(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!headers.contains(ch))read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.containsKey(ch)||globalPaxHeaders.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.containsKey(ch)||headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)||!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0||headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.getLength();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()==0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>=0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()<0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<globalPaxHeaders.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461For(intread=0;read<heads.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){if(headers.contains(ch)){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.hasNext()){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<heads.size();++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.get(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.readInt(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.getIntValue();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(0).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<length;read++){headers.put(keyword,headers.get(0).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,headers.get(0).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(key)||headers.containsKey(key)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(key)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='e'||ch=='E'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='N'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(!i.hasNext()){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.contains(ch)){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i!=null&&i.hasNext()){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()&&!read.equals(headers.next())){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()&&!read.isEmpty()){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()&&!headers.isEmpty()){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()&&!read.equals(headers.get(ch))){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='n'||ch=='r'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<heads.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch),i.toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}elseif(!hitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.next()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.next()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.hasNext()||i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch=='.'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch)
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(0).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(1).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.get(i,headers.get(i).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers.get(i).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&isEnabled(SourcePaxHeaders.UTF_8)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,headers[0]);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<heads.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.get(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(word,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.containsKey(ch)||headers.get(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0||headers.get(ch)!=null){for(intread=0;read<headers.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<globalPaxHeaders.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<heads.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch<'n'||ch>'r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(ch=='t'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(inti=read;i<headers.get(0);++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch>='r'){read++;}else{headers.put(headers,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461i.reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null&&headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers==null||headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers!=null||headers.size()==0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(0).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<heads.size();read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<heads.size();read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(null!=headers.size()){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(needHitEOF){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(needHitEOF){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(null!=ch){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){if(headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||i.hasNext()){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.hasNext()){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.size()==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.get(ch)!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<heads.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<globalPaxHeaders.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<this.headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF||isEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF||headers.size()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF||headers.size()==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(read+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).setRead(remainder);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers=newHashMap<String,String>(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(ch)){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.containsKey(ch)){read++;}else{headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.clear();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.size(){for(intread=0;read<i.read();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch>='0'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+='0'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(null!=ch){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch>='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){headers.put(0,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='A'||ch>'Z'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers!=null){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEmpty()){if(headers!=null){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.containsKey(ch)){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize()+read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.get(i,headers[i].getHeaderSize());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){heads.put(i,headers[i].getHeaderSize());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,globalPaxHeaders.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.read(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadOnly=i.isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.get(1);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==1){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.remove(headers.size()-1){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||i.isEnabled(Feature.QUOTE_FIELD_NAME)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<len;read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<n;read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(needEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.contains(ch)||headers.size()==1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES,read+1)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.next())!=-1){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i!=null){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch>='n'||ch=='r'){headers.put(len,headers);}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'||ch=='r'){headers.put(len,headers);}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch>='n'||ch=='t'){headers.put(len,headers);}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<len;read++){headers.put(ch,headers.get(ch).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<globalPaxHeaders.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461i.setEnabled(Feature.QUOTE_FIELD_NAMES)&&!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==':'||ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(ch==':'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.isEnabled(Feature.QUOTE_FIELDS_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.put(keyword,headers[i]);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){if(headers.containsKey(ch)||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(ch!='n'){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers!=null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalbyte[]headers=headers.toArray(newString[headers.size()]);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<this.headers.size();read++){returnheaders.get(index-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.equals(globalPaxHeaders.get(ch))){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.hasNext()||ch.equals(bodyers.next())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.put(i,headers.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintlen=headers.size()+i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){if(i.hasNext()||headers.get(ch)!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){if(i.hasNext()||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()>len){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry)i.next()).addHeader(headers,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers!=null){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaders=headers.size();for(intread=0;read<globalPaxHeaders.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='>'){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i]);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers.size()>0){for(inti=read;i<headers.size();++i){headers.put(keyword,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null||headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null||headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==0){if(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null||headers.size()>0){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.size()>0){finalintread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES,headers)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE,headers.size())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE,headers)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE,headers.length)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<ch.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<numRecords;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers.put(ch,headers);read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers.put(ch,read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES||hasHitEOF)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<ch.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<i.read();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<numRecords;read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(keyword,i.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(headers,i.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Headers.put(header,i.get(ch).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<len;read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()||read==0){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()||read<=0){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){headers.size()+len;read++){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<i.read();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.get(ch)-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.get(ch)-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers!=null||headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers!=null||headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers!=null||headers.containsKey(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers!=null){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers!=null){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){if(headers!=null){for(intread=0;read<headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i.getKey());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i.getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read=0;read<headers.size();read++){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<this.headers.size();read++){returnheaders.get(index).toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=-1){if(headers!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&read!=1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&read!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='.'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(!hasHitEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'||ch=='e'||ch=='E'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers!=null){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<i.read();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES,headers)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)||ch=='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){finalintread=0;read<this.headers.size();read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){while((ch=i.read())!=-1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(hasHitEOF){while(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,headers.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.remove(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.getValue(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(ch=='.'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(ch=='.'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(ch=='['||ch==']'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()<read){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()>3){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.containsKey(ch)||headers.size()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.containsKey(ch)||headers.size()==0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.canBeEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='9'){if(ch=='n'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='0'){if(ch=='n'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.contains(ch)||headers.get(ch)!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(headers.contains(ch)||headers.get(ch)!=0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()!=1){for(intread=0;read<headers.size();read++){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){read++;}else{headers.put(ch,null);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){while(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<i.read();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()!=0){for(intread=0;read<heads.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>=0){for(intread=0;read<heads.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='['||ch==']'||ch=='['){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'||ch=='@'||ch==':'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(i,headers[i].getHeaderSize());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461whilst((ch=i.read())!=-1){headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){for(intread=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){break;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){headers.put(ch,headers);read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){finalheaders=headers.get(ch);read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.seek())!=-1){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(!hasHitEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(ch!='.'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.getLength()<SMALL_BUFFER_SIZE){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.getValue()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read+=i.reset()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.contains(ch)){if(i.hasNext()){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&headers.contains(ch)){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){if(i.read()>-1){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>-1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){if(i.read()>-1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()==0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()<0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>=0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<headers.size();++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=read;i<headers.size();++i){headers.put(ch,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<length;read++){headers.put(ch,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(ch=='n'||ch=='r'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.hasNext()||restLen>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.hasNext()||read>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=i.read(CH);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<len;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){for(intread=0;read<len;read++){headers.get(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null){while(headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.remove(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null){while(headers.contains(ch))read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){while(headers!=null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()<0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch)
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>=0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch)
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()>0){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(!headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(!headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){heads.put(keyword,headers.get(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()!=1){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>=1){for(intread=0;read<headers.size();read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.contains(ch)||headers.get(ch)!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){while((ch=i.read())!=-1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=-1){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){finalintread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461intread=0;read<headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(i).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.getValue());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.read());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ReadNow.write(headers,i.remove(0));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers!=null){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=-1){if(headers!=null){read++;}else{headers.get(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||(headers.size()==len&&i.hasNext())){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.read(CH);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers!=null){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0||headers.size()<read){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers.containsKey(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()<=0){for(intread=0;read<headers.get(ch);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers!=null||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers!=null||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers==null){if(headers!=null||headers.contains(ch))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()!=1){for(intread=0;read<headers.get(0);read++){}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!hasHitEOF){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(0,headers.size());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()<1){for(intread=0;read<headers.get(0);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(headers.size()>0){for(intread=0;read<headers.get(1);read++){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<=0x7F){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==INT_0||ch==INT_0){if(ch==INT_0||ch==INT_0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch==INT_0){if(ch==INT_0||ch==INT_0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='['){if(ch==']'||ch=='}'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<len;read++){headers.put(keyword,headers.get(0).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<SMALL_BUFFER_SIZE;read++){headers.put(keyword,headers.get(1).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!zipEncoding.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<'0'||ch>'9'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()){read++;}else{read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(keyword,i.getKeyword()).toString());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}else{headers.put(ch,headers
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()>0){for(intread=0;read<headers.size();read++){returnheaders.get(ch);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){while(headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(headers.remove(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||ch=='a'&&ch<='z'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){if(i.read()>0){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(i.read()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.contains(ch)){if(i.read()>0){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461||i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValue());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers.size()>0){for(inti=0;i<headers.size();++i){headers.put(keyword,headers[i].getValu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(0,headers.size()-1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(!headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){while(!headers.containsKey(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(relativePaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(relativePaxHeaders,headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461ch=i.read(headers,0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers!=null)read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch.next()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintread=headers.get(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){while(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES))read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>=0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){for(intread=0;read<length;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){finalintread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers.size()==0){if(headers.contains(ch)||headers.contains(ch)){read++;}else{headers.put(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers!=null){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=this.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintnumRecords=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&isEnabled(Feature.AUTO_CLOSE_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(!hasHitEOF&&hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.seek())!=-1){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<headers.size();read++){heads.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintn=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheaderLimit=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='.'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='@'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null&&headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null||headers.size()==0){for(Map.Entry<String,String>entry:headers.entrySet()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461Integeri=headers.get(headers.size()-2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<'9'||ch>'9'){if(ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'){if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(read);}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(headers.size()!=0){for(intread=0;read<headers.size();read++){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(index,headerLimit);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){read=0;read<headers.size();read++){returnheaders.get(index);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<headers.size();read++){returnheaders.get(i.read());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461for(intread=0;read<this.headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()<read){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While((ch=i.read())!=-1){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){while((ch=i.read())!=-1){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='t'||ch=='n'){read++;}else{headers.put(i,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){finalintread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(headers.size()>0){for(intread=0;read<len;read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.indexOf(ch)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=headers.iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<=0x7F){if(ch=='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch<='9'){if(ch=='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch>0x7F){if(ch=='n'||ch=='r'){headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){if(headers.size()>0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch));}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_SIZE)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.hasNext()||ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='t'){if(!hasHitEOF){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch=='n'||ch=='r'){if(i.hasNext()){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).start();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).clear();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).record();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).recordSize();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461((TarArchiveEntry<K,V>)i.next()).getData();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers==null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers==null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(headers==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers==null){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(headers==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461headers.put(ch,newString(len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()||ch!='n'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()||ch=='>'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while((ch=i.read())!=-1){if(headers.size()==0){for(intread=0;read<headers.size();read++){headers.put(keyword,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(i.hasNext()){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){read++;}else{headers.get(ch,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461finalintheadersLimit=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.hasNext()||isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.hasNext()||ch=='n'||ch=='r'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!i.hasNext()||ch=='n'||ch=='t'){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.reset();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461read=i.getRead();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(inti=0;i<headers.size();++i){headers.put(ch,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(!hasHitEOF){if(!headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){if(!headers.contains(ch)){read++;}else{headers.put(ch,headers);returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='>'){for(intread=0;read<len;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(headers!=null){for(intread=0;read<numRecords;read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.contains(ch)||headers.contains(ch)){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(headers.contains(ch)||headers.get(ch)!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='.'){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()!=-1){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'||ch=='r'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'||ch=='r'){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(ch!='n'||ch=='r'){if(headers!=null){for(intread=0;read<headers.size();read++){headers.put(word,headers.get(ch).toString()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()||ch.equals(headers.next())){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()&&ch<=0){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461while(i.hasNext()||ch.getLength()>0){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461While(i.hasNext()){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()==-1){if(ch=='n'||ch=='r'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>0){if(ch=='n'||ch=='r'){read++;}else{headers.put(len,headers);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java461if(i.read()>-1){if(ch=='n'||ch=='r'){read++;}else{headers.put(len,headers);}
