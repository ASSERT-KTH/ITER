projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers<0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers!=null)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<1)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(length<0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<0?0:len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','/');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=this.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=-1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len==0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>=0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(length>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()<0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()==0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intnumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.next());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders.get(i.next());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','/');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459floatread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?-1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>0)?headers.size():-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length<0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,len)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers==null)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.next()
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','0');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n',0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n','/');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n',-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n',len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=0,len=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=0x7F;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders.get(i.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders.get(i.next());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.next());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders.get(i.n
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders.get(i.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',len)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=globalPaxHeaders.indexOf('');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459shortread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers!=null)?0:headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers!=null)?0:headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers!=null)?1:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers==null)?0:headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Intread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,length));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,1L));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,globalPaxHeaders));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,globalPaxHeaders.size()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,2*len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,4*len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,globalPaxHeaders.length));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Integer.MAX_VALUE,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(int,Long.MAX_VALUE,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE,0));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(0,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(10,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE,length));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.read(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+ch;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length/len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+len+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intnumRecords=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intnumRecords=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intnumRecords=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intnumRecords=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intnumRecords=headers.size()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers!=null)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers==null)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers<0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers>=null)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers>>null)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()>0?0:len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<0?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<0?0:headers.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()>=0?0:len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<0?0:headers.getLength();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()==0?0:len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<0?0:headers.get(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>=0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len!=0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=0x7F;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459doubleread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()==0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()==0)?len.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len==0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(length==0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('',-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),16));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),0));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),globalPaxHeaders.length));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),SMALL_BUFFER_SIZE));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),len+1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),length));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length>0)?headers.size()/SMALL_BUFFER_SIZE:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length>0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length<0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',ch+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('',ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',ch+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('',ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()==0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>=0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<1)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()!=0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length<<SMALL_BUFFER_SIZE?SMALL_BUFFER_SIZE:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?headers.length-SMALL_BUFFER_SIZE:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.size()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=(int)headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('n',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len&SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=0<<len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=(len>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=(len<0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=(len<0)?1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length/2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-3;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-6;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length*1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.n
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheader
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.n
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length<1)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length<2)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length>0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length<3)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()<1)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>=0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()<0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()<2)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-ch;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-len+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=len-headers.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-1+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.size():-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len==0)?headers.size():-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?headers.size():-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>=0)?headers.size():-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get(0);if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||headers.contains("UTF-8")){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.get("UTF-8")!=null){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.get("UTF-8")!=null){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.getString("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding==null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?len.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<1)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?len.length():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?len.intValue():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(length<0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=i.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=i.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=i.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=i.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','_',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','_'+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','_')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=this.headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=this.headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=this.headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',len+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('',len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',len+3);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=0x7F;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(char)headers.get(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=0xFFFF;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=0xff;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(char)0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length/4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=headers.size()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',0L);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',0L');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalStringencoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalbyte[]encoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get(0);if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalZipEncodingzipEncoding=headers.get("UTF-8");if(zipEncoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalchar[]encoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<1)?-1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len==0)?-1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?-1:1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>=0)?-1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(length<0)?-1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(char)headers.get(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalCharread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(char)headers.get(i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(char)headers.get(0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.entrySet().iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.keySet().iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.values().iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.get(headers.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.keySet();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459CharReaderread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len?1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?2:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=0<<SMALL_BUFFER_SIZE?1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459floatread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459doubleread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){finalintlen=headers.length;for(inti=0;i<len;i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){finalintlen=headers.size();for(inti=0;i<len;i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459while((ch=i.read())!=-1){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.keySet().iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.get(headers.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalStringread=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){finalintlen=headers.size();for(inti=0;i<len;++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','-',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','-')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','-'+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('/','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('n','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=globalPaxHeaders.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=globalPaxHeaders.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=globalPaxHeaders.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=this.globalPaxHeaders.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.length-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<<SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=0<<SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('',0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('',0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('','/');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('',0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459doubleread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=-l;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=-1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=-1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers==null)?0:headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers==null)?1:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('_',ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','_',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('/','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','_'+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('n','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',ch+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',len+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',i+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',0+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',len+1,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','+');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()/len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()*len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()+ch;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()+len+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>=0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(length>0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','0',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','0')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','0'+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('0','n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('n','0');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length-len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=globalPaxHeaders.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.length+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('',0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=this.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459while((ch=i.read())!=-1){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.size()/2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','/',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','/')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','/'+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('','/');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch)+1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch)),len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Utilities.parseLong(ch)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.toString(ch)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Integer.parseInt(ch)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>0)?headers.size()+len:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.indexOf('',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.indexOf('',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.indexOf('',ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.indexOf('',0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.indexOf('',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=headers.size()-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=headers.size()*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()!=0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()==0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size(){0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=0,len=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finallongread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=0x7F;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=0,len=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(int));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Integer.MAX_VALUE));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE),true);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE),dataArea);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<<SMALL_BUFFER_SIZE?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?headers.size():2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,0)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,1)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,length)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,16)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,LONG_SIZE)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,len),true));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers>=null)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers==null?0:headers.size());
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',len-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<<SMALL_BUFFER_SIZE?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<SMALL_BUFFER_SIZE?headers.size()+len:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','/',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('/','n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','/')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf(':','/');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','/'+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers.length-1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers[0].length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=2<<headers.length?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length||headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-len+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-ch;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(length<1)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<1)?0:len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<1)?0:headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','-',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','-')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','-'+len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.readFully(globalPaxHeaders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(globalPaxHeaders,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(remainings>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(size>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.size()+len:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<1)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length<<SMALL_BUFFER_SIZE?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<heads.length?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<this.headers.length?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.indexOf('n',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(len<0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.getChars(0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(len<0)?0:headers.get(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.get(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,0,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,16));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,4),len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,8));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()==0?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()>=0?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()!=0?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<0?0:headers.get(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<headers.length)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=0,len=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=0,len=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459byteread=0B;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(i.re
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()==0)?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers==null)?-1:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheader
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','/'+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','/'+length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intnumRecords=this.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.lastIndexOf('');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('',-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',i+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('',len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.size():headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?0:headers.get(headers.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.size()-1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','_'+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<restLimit?1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length>0)?headers.size()-1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('n',-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(0,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[0]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[0]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0,len=headers.size();i<len;++i){headers.put(0,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,headers.size();i<len;++i){headers.put(i,headers[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.containsKey("UTF-8")){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.size()>0){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.containsKey("UTF-8")){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalZipEncodingzipEncoding=headers.get("UTF-8");if(zipEncoding!=null){returnzipEncoding;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(int.MAX_VALUE));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE),len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(System.in));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(System.currentTimeMillis()));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','r');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',':');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=2<<SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers>0)?headers.size():1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n','n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n','r');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459floatread=i.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('',0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,size);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){read++;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(headers,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers!=null)?-1:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(!hasHitEOF){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Characterread=headers.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('-','n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(len<0)?0L:0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(len<0)?0L:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(len<0)?0L:headers.get(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(len<0)?0L:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=(len<0)?0L:i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Util.parseLong(ch)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length<<headers.length?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers[len-1]:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=0<<headers.length?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459floatread=-1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheader
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheader
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.get(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.get(headers.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,2)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,128)));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch,len),0));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.indexOf('n',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=headers.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=headers.indexOf('n',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=headers.get(headers.size()-1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.length+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459floatread=globalPaxHeaders.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(!hasHitEOF){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.containsKey("UTF-8")){finalStringencoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||headers.containsKey("UTF-8")){finalStringencoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.containsKey("UTF-8")){finalStringencoding=headers.get("UTF-8");if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len>0)?-1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len!=0)?-1:-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE,len+1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE,ch));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE,dataArea));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('',len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length*len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=globalPaxHeaders.length-len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('','+');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n',0)+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=getLength();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.size()-1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('_','n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('n','_')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf(':','_');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers>0)?headers.size():-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintnumRecords=this.headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0L);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len==0)?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheader
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<headers.length)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers<1)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<3)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.read(headers,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.read(headers,0,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),32));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),128));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),8));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),4));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=this.headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Fileread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()==0){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<len.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<ch;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>0)?headers.length:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>0)?headers.get(0):0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('n',ch+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459charread=headers.indexOf('n',len+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=getLimit();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('0','0');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?0:headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()<0)?0:headers.size()+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){break
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len).length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len)-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('',0,len).read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Scope.Byteread=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Scopeheaders=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<<len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=2<<len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalbyteread=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i].toString());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){headers.put(i,headers[i].getName());}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintlen=headers.getLength();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalcharencoding=headers.get("UTF-8");if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.get("UTF-8")!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459longread=-1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=nu
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()<SMALL_BUFFER_SIZE)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.size()?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459for(intread=headers.size()-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459BigIntegerread=headers.size()>0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()+i.read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intn=headers.size()-4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integern=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,len),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(ch,len+1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size>0)?headers.size():0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length>0)?headers.get(headers.size()-1):0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length>0)?headers.size():len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(zipEncoding.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){finalStringencoding=headers.get("UTF-8");if(encoding!=null){returnheaders;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf('#','/');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+3;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<SMALL_BUFFER_SIZE?0:len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()<SMALL_BUFFER_SIZE?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding!=null){returnheaders.get(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].toString();if(encoding!=null){returnheaders.get(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.indexOf('','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch),1));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.length<0)?0:headers.size()+len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.get(headers.size()-1):0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers.size()>0)?headers.size():len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers>0)?headers.size():len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=0,len=i.read();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=0,len=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459IntegernumRecords=headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-SMALL_BUFFER_SIZE;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-i.read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length-i;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.keySet().iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Charread=headers.indexOf('')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){finalintlen=headers.size();for(inti=0;i<len;++i){finalStringencoding=headers[i];if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){finalintlen=headers.length;for(inti=0;i<len;++i){finalStringencoding=headers[i];if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].getName();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i].getEncoding();if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0;i<headers.size();++i){finalStringencoding=headers[i];if(encoding==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.read(globalPaxHeaders,i);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=headers.iterator().next();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){returnheaders.get(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.parseLong(ch))+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<length?1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(headers!=0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.indexOf(':','-');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.read(remainders);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=i.read(remainders,len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.keySet().iterator().next().toString();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.iterator().next().getString();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Stringread=headers.keySet().iterator().next().getString();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++;}}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding==null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers!=null){for(inti=0,len=headers.size();i<len;++i){finalStringencoding=headers.get(i);if(encoding!=null){read++
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.length+i;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=headers.size()-i.read;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('','n');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n','A');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('n','0');
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.indexOf('')+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.read(len);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=headers.read(ch);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders.get(
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(i.hasNext()){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding==null){returnheaders.get(i
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers.length-len:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers.length:len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=1<<headers.length?headers.size:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(Long.MAX_VALUE,len),headers);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459UnsupportedOperationi=headers.get(newInputStreamReader(int,len));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<0)?-1:0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(size<0)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>0)?headers.get(headers.size()-1):0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459finalintread=(headers.size()>0)?headers.size():len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){for(inti=0;i<headers.size();++i){finalStringencoding=headers.get(i.next());if(encoding!=null){read++;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();if(encoding!=null){continue
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459if(headers.size()>0){if(i.hasNext()){for(inti=0;i<headers.size();i++){finalStringencoding=headers[i.next()].toString();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459Integerread=(headers!=null)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<6)?0:headers.size();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java459intread=(len<4)?0:headers.size();
