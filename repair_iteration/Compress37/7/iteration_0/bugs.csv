bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
13	[BUG] [BUGGY] if (currEntry == null) { [FE] NegativeArraySizeException [CONTEXT] public int read(final byte[] buf, final int offset, int numToRead) throws IOException { int totalRead = 0; if (hasHitEOF || isDirectory() || entryOffset >= entrySize) { return -1; } [BUGGY] if (currEntry == null) { [BUGGY] throw new IllegalStateException("No current tar entry"); } numToRead = Math.min(numToRead, available()); totalRead = is.read(buf, offset, numToRead); if (totalRead == -1) { if (numToRead > 0) { throw new IOException("Truncated TAR archive"); [CLASS] TarArchiveInputStream [METHOD] read [RETURN_TYPE] int  final byte[] buf final int offset int numToRead [VARIABLES] byte[] SMALL_BUF buf headerBuf l longLinkData longNameData record rest boolean hasHitEOF marked shouldReset ZipEncoding zipEncoding InputStream i is String encoding key keyword val value Map globalPaxHeaders headers int SMALL_BUFFER_SIZE blockSize ch got len length markLimit numToRead offset read readNow recordSize restLen totalRead long available entryOffset entrySize n numRecords padding skipped TarArchiveEntry currEntry  	projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	648	648	1	replace	
