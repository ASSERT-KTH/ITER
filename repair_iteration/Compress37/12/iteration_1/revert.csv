projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=totalRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=totalRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=buf.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=restLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numtoRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=buf.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numtoRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainingLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=totalRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buffer,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buffer,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=hasHitEOF;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainderLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=resultLimit;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=nRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length*restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663i.remove();hasHitEOF=true;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
