projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=totalRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=totalRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=buf.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=restLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numtoRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=buf.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numtoRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainingLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=totalRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buffer,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buffer,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=hasHitEOF;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainderLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=resultLimit;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=nRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length*restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663i.remove();hasHitEOF=true;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663record(remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663count(remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663intrestLen=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663record(remainderLen,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663intremainingLen=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663IntegerremainingLen=getRemainderLen();
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663intrestLen=restLen.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead==0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buf,offset,hasHitEOF,numToRead);return;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*2+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*2+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*2+offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*3;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=buf.length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=buf.length-offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=rest.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=buf.length-1,hasHitEOF;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buf,hasHitEOF,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buffer,hasHitEOF,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){if(!hasHitEOF){System.arraycopy(buf,offset,buffer,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buf,numToRead,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,totalRead,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=buf.length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=buf.length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=rest.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=buffer.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead==0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buf,offset,hasHitEOF,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,0,buf,offset,hasHitEOF,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset+numToRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=numToRead+offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset+numToRead+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=buf.length+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset+numToRead*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset/numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainingLen-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=totalRead-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buf,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead==0){if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663HashSystem.arraycopy(buf,offset,buf,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainder);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainderSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainder,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(recordSize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainingLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainder.length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=offset+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead*restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen*length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length*numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset*restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen*length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=totalRead*restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=totalRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,hasHitEOF,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,count(numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,count(numToRead),hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,count(numToRead));
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,0,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(record,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=buf.length+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+numToRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=offset+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+numRecords+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=buf.length+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+numRecords+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buffer,hasHitEOF,numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663readNow.arraycopy(buf,offset,buf,hasHitEOF,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,0,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663i.remove();hasHitEOF=false;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(i.hasNext()){i.remove();hasHitEOF=true;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663n.remove();hasHitEOF=true;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(i.hasMoreElements()){i.remove();hasHitEOF=true;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(i.hasMoreElement()){i.remove();hasHitEOF=true;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=restLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=totalRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=offset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=remainingOffset;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=length-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead*1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainderLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=offset;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numtoRead+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=restLimit;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=resultLimit+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainingLimit;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=count;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+4;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+3;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(numRecords+2);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663||hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead==0){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663||hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){ensureCapacity(len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){ensureCapacity(numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){ensureCapacity(i+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainingLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=rest.length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=count(totalRead+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainderLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(entrySize);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen==0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=offset;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead==0){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663arraycopy(buf,offset,buf,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,0,buf,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=offset*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords*numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*recordSize;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*numRecords+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=restLen+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=count(remainderLen+1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=len;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=len+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getValue(i
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){}buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=offset;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+length+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords*length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(numRecords+length);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=nRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=nRecords+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen&&restLen>0){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead+1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead+2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=offset;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=hasHitEOF;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=0;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=0L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663readNow=System.arraycopy(buf,offset+1,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663readNow=System.arraycopy(buf,offset+1,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663readNow=System.arraycopy(buf,offset+1,remainingLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){count(remainderLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663||!hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663||hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(!hasHitEOF){count(remainderLimit);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(!hasHitEOF){count(totalRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(!hasHitEOF){count(hashToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+remainingLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+numRecords+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+numRecords+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+remainingLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen==0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=offset;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+1L;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){ensureCapacity(0);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663remainderLen=restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){ensureCapacity(len);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){ensureCapacity(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){ensureCapacity(numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=remainingLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(shouldReset){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663i.remove(0);hasHitEOF=true;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(i.hasNext()){i.remove();hasHitEOF=true;}else{count(numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(i.hasNext()){i.remove();hasHitEOF=true;}else{thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){record(remainderLen+1);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen.length;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663EntryOffset-=restLen+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset+numToRead+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset=offset+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,0);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,count);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,1);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=offset+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=count(remainderLimit);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=count(numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=offset.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){System.arraycopy(buf,offset,buf,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,0,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663arraycopy(buf,offset,buffer,hasHitEOF,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,offset,buffer,numToRead,restLen);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(shouldReset){System.arraycopy(buf,offset,buf,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i+1,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=1,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){System.arraycopy(buf,offset,buffer,hasHitEOF,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,0,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(shouldReset){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663hasHitEOF=System.arraycopy(buf,offset,buf,offset,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*HITEOF;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numRecords*num;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length-2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length*1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=remainingLen+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=remainingLen+length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=length+numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=restLen*1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen==0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!shouldReset){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663hasHitEOF=System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen<0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=count(offset);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){buffer[inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLimit+numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numToRead+buf.length;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getKey();}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=offset;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buffer.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainingLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,length);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!shouldReset){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead==0){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(numToRead>0){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663System.arraycopy(buf,0,buf,offset,hasHitEOF,hasHitEOF);return;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen==0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen*numToRead;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=length*restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){for(inti=0,len=restLen;i<len;++i){System.arraycopy(buf,offset,buf,i,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hashEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entrySize-=n;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=currEntry.getValue(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>0){for(inti=0,len=remainderLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+1,totalRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,numToRead,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hashEOF){System.arraycopy(buf,offset,buf,offset,hasHitEOF,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,numToRead,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,offset,numToRead,hasHitEOF);return;}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(!hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF||hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF&&hasHitEOF){thrownewIOException("");}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords-1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buffer,numToRead,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){System.arraycopy(buf,offset,buf,numToRead,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=offset(numToRead);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=restLen*2;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen<=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=totalRead;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=1,len=restLen;i<len;++i){ensureCapacity(i);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=n;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(i<restLen){for(inti=0,len=restLen;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(hasHitEOF){for(inti=0,len=restLen;i<len;++i){record(remainderLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen<=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buffer,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead/1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset+offset,hasHitEOF);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=len+1;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buffer,numToRead,restLen);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=length/restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(i.hasNext()){i.remove();hasHitEOF=true;}else{count(hashToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=length*numRecords;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset-=numToRead*restLen;
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663while(remainderLen>0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(remainderLen>=0){for(inti=0,len=restLen;i<len;++i){buffer[i]=System.arraycopy(buf,offset,buf[i]);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,hasHitEOF,markLimit);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,numToRead,hasHitEOF);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663result.add(buf,offset,hasHitEOF,isRecorded);
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663if(!hasHitEOF){System.arraycopy(buf,offset,buf,offset,numToRead);}
projects/Compress37/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java663entryOffset+=numRecords+numToRead;
