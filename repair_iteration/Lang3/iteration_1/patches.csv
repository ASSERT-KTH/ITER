bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
1	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	395	None
3	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	395	None
12	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	364	None
13	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	364	None
14	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length())  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length())  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(decPos  >  -1  &&  expPos  <  str.length())  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	364	None
21	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  <  expPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  <  expPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  <  expPos)  {  throw  new  NumberFormatException( "   ");  }	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	63	None
22	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	63	None
24	[BUG]  [BUGGY]  if(expPos  >  1)  {  if(decPos  <  expPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  1)  {  if(decPos  <  expPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  1)  {  if(decPos  <  expPos)  {  throw  new  NumberFormatException( "   ");  }	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	63	None
31	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  dec.length())  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None
32	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  str.length())  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  str.length())  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  str.length())  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None
34	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None
41	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
42	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
42	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(expPos  +  1,  str.length())+  1;	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
43	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(expPos  +  1,  str.length())+  1;	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
43	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(0,  str.length()  -  1)+  1;	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
44	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(0,  str.length()  -  1)+  1;  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(0,  str.length()  -  1)+  1;	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
44	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
45	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
45	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    str  =  str.substring(0,  str.length()  -  1)+  1;	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	154	None
51	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  >  -1)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  >  -1)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  >  -1)  {  throw  new  NumberFormatException( "   ");  }	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	64	None
52	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  >  expPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  >  expPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  >  expPos)  {  throw  new  NumberFormatException( "   ");  }	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	64	None
53	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  >  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  >  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  >  decPos)  {  throw  new  NumberFormatException( "   ");  }	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	64	None
61	[BUG]  [BUGGY]  Sort(str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Sort(str.substring(0,  str.length()  -  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Sort(str.substring(0,  str.length()  -  1));	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol	364	None
62	[BUG]  [BUGGY]  Sort(str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Sort(str.substring(0,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Sort(str.substring(0,  str.length()));	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol	364	None
63	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(0,  str.length()  -  1));	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol  Arrays	364	None
64	[BUG]  [BUGGY]  List.sort(str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  List  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  List.sort(str.substring(0,  str.length()  -  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	List.sort(str.substring(0,  str.length()  -  1));	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol  List	364	None
71	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    +    1);    dec  =  str.substring(decPos  +  1,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
72	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  dec  =  str.substring(decPos  +  1,  expPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    dec  =  str.substring(decPos  +  1,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
72	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
73	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
73	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
74	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
74	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  if(decPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
75	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
76	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	423	1
83	[BUG]  [BUGGY]  str.substring(expPos  +  1,  str.length());  [CE]  variable  dec  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str.substring(expPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str.substring(expPos  +  1,  str.length());	      str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  dec  might  not  have  been  initialized	195	None
84	[BUG]  [BUGGY]  str.substring(decPos  +  1,  str.length(),  expPos);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str.substring(decPos  +  1,  str.length(),  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str.substring(decPos  +  1,  str.length(),  expPos);	      str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	195	None
92	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0,  str.length());	      exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	72	None
93	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()));  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0,  str.length()));  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0,  str.length()));	      exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	72	None
94	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()),  expPos);  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0,  str.length()),  expPos);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0,  str.length()),  expPos);	      exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	72	None
101	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length());  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length());  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length());  dec  =  str.substring(decPos  +  1,  str.length());	      str    =    str.substring(0,    str.length()    -    1);    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	174	None
103	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()));  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length()));  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length()));  dec  =  str.substring(decPos  +  1,  str.length());	      str    =    str.substring(0,    str.length()    -    1);    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  ';'  expected	174	None
111	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(decPos);  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(decPos);  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(decPos);  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }	      if(mant    ==    null)    {    if(expPos    >    -1)    {    dec    =    str.substring(decPos);    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None
123	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPoses);  [CE]  cannot  find  symbol  expPoses  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  exp  =  str.substring(0,  expPoses);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  =  str.substring(0,  expPoses);	  exp    =    str.substring(0,    strPos);    	non-compiled	[CE]  cannot  find  symbol  expPoses	104	None
134	[BUG]  [BUGGY]  str  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1);	      	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	125	None
141	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	73	None
142	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        str.substring(0,    str.length()    -    1);    str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
143	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
143	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        str.substring(0,    str.length()    -    1);    exp  =  str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
144	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    exp  =  str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
144	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        str.substring(0,    str.length()    -    1);    str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
145	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
145	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length())+  1);  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length())+  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str  =  str.substring(0,  str.length())+  1);	  	non-compiled	[CE]  ';'  expected	73	None
152	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  isAllZeros(exp);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  isAllZeros(exp);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)||  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	103	None
153	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(ext);  [CE]  cannot  find  symbol  ext  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(ext);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(ext);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  cannot  find  symbol  ext	103	None
161	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos);  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	int  expPos  =  str.indexOf('  ',  expPos);	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	43	None
163	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  decPos);  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('  ',  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	int  expPos  =  str.indexOf('  ',  decPos);	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	43	None
172	[BUG]  [BUGGY]  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }	  numDecimals    =    dec.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	61	None
182	[BUG]  [BUGGY]  return  f.  =  createFloat(str);  [CE]  <identifier>  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f.  =  createFloat(str);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.  =  createFloat(str);	  return    f    =    createFloat(str);    	non-compiled	[CE]  <identifier>  expected	322	None
183	[BUG]  [BUGGY]  return  f  =  createLong(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  =  createLong(str);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  createLong(str);	  return    f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	322	None
193	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	123	1
194	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	123	1
201	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    -    1,    expPos);    dec  =  str.substring(decPos  +  1,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
202	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  dec  =  str.substring(decPos  +  1,  expPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    dec  =  str.substring(decPos  +  1,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
202	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
203	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
203	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
204	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
204	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
205	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
205	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
206	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
214	[BUG]  [BUGGY]  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(expPos  +  1,  str.length()  -  2);	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	361	None
224	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [Delete]  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [Delete]	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None
233	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos  +  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  -  1,  expPos  +  1);	  dec    =    str.substring(decPos    -    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	285	1
234	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos  +  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos  +  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  -  1,  expPos  +  1);	  dec    =    str.substring(decPos    -    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	285	1
241	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
244	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  0)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  0)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  0)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
252	[BUG]  [BUGGY]  str.substring(0,  str.length()  -  1,  str.length(),  expPos);  [CE]  no  suitable  method  found  for  substring(int,int,int,int)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  -  1,  str.length(),  expPos);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  -  1,  str.length(),  expPos);	      str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int)	75	None
253	[BUG]  [BUGGY]  str.substring(0,  str.length()  -  1,  str.length()),  exp);  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  -  1,  str.length()),  exp);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  -  1,  str.length()),  exp);	      str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  ';'  expected	75	None
254	[BUG]  [BUGGY]  str.substring(0,  str.length()  -  1,  str.length(),  exp);  [CE]  no  suitable  method  found  for  substring(int,int,int,String)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  -  1,  str.length(),  exp);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  -  1,  str.length(),  exp);	      str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,String)	75	None
262	[BUG]  [BUGGY]  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	      if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  illegal  start  of  expression	272	None
264	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  [CE]  cannot  find  symbol  Float  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;	      if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  cannot  find  symbol  Float	272	None
271	[BUG]  [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  str.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length();    //    get    number    of    digits    before    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	203	None
273	[BUG]  [BUGGY]  numDecimals  =  mant.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  mant.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  mant.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length();    //    get    number    of    digits    before    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	203	None
274	[BUG]  [BUGGY]  numDecimals  =  decimal.length();  //  get  number  of  digits  before  dec  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  decimal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  decimal.length();  //  get  number  of  digits  before  dec  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  decimal.length();  //  get  number  of  digits  before  dec  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length();    //    get    number    of    digits    before    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  decimal	203	None
281	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	333	None
282	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('.');  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('.');  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.indexOf('.');	  	non-compiled	[CE]  illegal  start  of  expression	333	None
283	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	333	None
284	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('  ',  expPos  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('  ',  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.indexOf('  ',  expPos  +  1);	  	non-compiled	[CE]  illegal  start  of  expression	333	None
285	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('  ');  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('  ');  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.indexOf('  ');	  	non-compiled	[CE]  illegal  start  of  expression	333	None
294	[BUG]  [BUGGY]  if(expPos  >  decPos)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  decPos)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  decPos)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	94	None
301	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  -1);  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  -1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex',  -1);	  	non-compiled	[CE]  unclosed  character  literal	123	None
302	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex')+  1;  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex')+  1;  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex')+  1;	  	non-compiled	[CE]  unclosed  character  literal	123	None
303	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex')-  1;  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex')-  1;  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex')-  1;	  	non-compiled	[CE]  unclosed  character  literal	123	None
304	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  '-');  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  '-');  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex',  '-');	  	non-compiled	[CE]  unclosed  character  literal	123	None
305	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('E')+  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('E')+  1;  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('E')+  1;	  	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	123	None
313	[BUG]  [BUGGY]  numDecimal  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  numDecimal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimal  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimal  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  numDecimal	62	None
314	[BUG]  [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  in  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  in  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  in  precision  for  floating  point  numbers.	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	62	None
322	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  exPos);  [CE]  cannot  find  symbol  exPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  exPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1,  exPos);	  	non-compiled	[CE]  cannot  find  symbol  exPos	123	None
323	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  exponentPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1,  exponentPos);	  	non-compiled	[CE]  cannot  find  symbol  exponentPos	123	None
325	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nfe);  [CE]  cannot  find  symbol  nfe  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nfe);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1,  nfe);	  	non-compiled	[CE]  cannot  find  symbol  nfe	123	None
332	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	add	if(expPos  >  1  &&  expPos  <  str.length()  -  1)  {	  if(expPos    >    1    &&    expPos    <    str.length())    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	85	1
333	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length()  -  1)  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  1  &&  expPos  <  str.length()  -  1)  {	  if(expPos    >    1    &&    expPos    <    str.length())    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	85	1
341	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.booleanValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(!(f.isInfinite()  ||  (f.booleanValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(!(f.isInfinite()  ||  (f.booleanValue()  ==  0.0F  &&!allZeros)))  {	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  illegal  start  of  expression	43	None
342	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  illegal  start  of  expression	43	None
344	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.doubleValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(!(f.isInfinite()  ||  (f.doubleValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(!(f.isInfinite()  ||  (f.doubleValue()  ==  0.0F  &&!allZeros)))  {	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  illegal  start  of  expression	43	None
352	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	45	None
362	[BUG]  [BUGGY]  exp  -=  str.substring(0,  expPos  +  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  exp  -=  str.substring(0,  expPos  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  -=  str.substring(0,  expPos  +  1);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	3	None
363	[BUG]  [BUGGY]  exp  -=  str.substring(0,  expPos),  str.length());  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  exp  -=  str.substring(0,  expPos),  str.length());  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  -=  str.substring(0,  expPos),  str.length());	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  ';'  expected	3	None
364	[BUG]  [BUGGY]  exp  -=  str.substring(0,  expPos),  str.length);  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  exp  -=  str.substring(0,  expPos),  str.length);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  -=  str.substring(0,  expPos),  str.length);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  ';'  expected	3	None
371	[BUG]  [BUGGY]  int  expPos  =  str.length();  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.length();  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.length();	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	24	None
374	[BUG]  [BUGGY]  int  expPos  =  str.length()  -  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.length()  -  1;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.length()  -  1;	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	24	None
383	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allocAllZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allocAllZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allocAllZeros)))  {	  if(!f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None
391	[BUG]  [BUGGY]  return  f  =  Float.valueOf(str);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.valueOf(str);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.valueOf(str);	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	62	None
392	[BUG]  [BUGGY]  return  f  =  Float.valueOf(mant);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.valueOf(mant);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.valueOf(mant);	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	62	None
393	[BUG]  [BUGGY]  return  f  =  Float.valueOf(exp);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.valueOf(exp);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.valueOf(exp);	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	62	None
402	[BUG]  [BUGGY]  str  =  str.substring(expPos  +  1,  decPos);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str  =  str.substring(expPos  +  1,  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str  =  str.substring(expPos  +  1,  decPos);	      str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	192	None
403	[BUG]  [BUGGY]  str  =  str.substring(decPos  +  1,  exPos);  [CE]  cannot  find  symbol  exPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str  =  str.substring(decPos  +  1,  exPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str  =  str.substring(decPos  +  1,  exPos);	      str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  cannot  find  symbol  exPos	192	None
411	[BUG]  [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1),  expPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1),  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  str.substring(decPos  +  1),  expPos);	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	124	None
412	[BUG]  [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1,  expPos));  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1,  expPos));  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  str.substring(decPos  +  1,  expPos));	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	124	None
413	[BUG]  [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1),  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1),  exponentPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  str.substring(decPos  +  1),  exponentPos);	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  cannot  find  symbol  exponentPos	124	None
414	[BUG]  [BUGGY]  createInteger(str.substring(decPos  +  1),  decPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str.substring(decPos  +  1),  decPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str.substring(decPos  +  1),  decPos);	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	124	None
422	[BUG]  [BUGGY]  final  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [CE]  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  final  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	final  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	111	None
423	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(exp)&&  isAllZeros(mant);  [CE]  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  boolean  allZeros  =  isAllZeros(exp)&&  isAllZeros(mant);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	boolean  allZeros  =  isAllZeros(exp)&&  isAllZeros(mant);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	111	None
424	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(exp)&&  isAllZeros(exp);  [CE]  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  boolean  allZeros  =  isAllZeros(exp)&&  isAllZeros(exp);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	boolean  allZeros  =  isAllZeros(exp)&&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	111	None
433	[BUG]  [BUGGY]  str  =  str.substring(expPos  +  1,  str.length()));  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(expPos  +  1,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(expPos  +  1,  str.length()));	      str    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	242	None
434	[BUG]  [BUGGY]  str  =  str.substring(decPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(decPos  +  1,  str.length());	      str    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	242	None
443	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  delt  [CE]  not  a  statement  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  delt  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  delt	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	481	None
452	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  '0')+  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  '0')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  '0')+  1;	      int    expPos    =    str.indexOf('    ',    '0');    	non-compiled	[CE]  illegal  start  of  type	54	None
453	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  '0')-  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  '0')-  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  '0')-  1;	      int    expPos    =    str.indexOf('    ',    '0');    	non-compiled	[CE]  illegal  start  of  type	54	None
461	[BUG]  [BUGGY]  createInteger(decPos,  expPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  expPos);	      createInteger(decPos);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	485	None
463	[BUG]  [BUGGY]  createInteger(str,  decPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str,  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str,  decPos);	      createInteger(decPos);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	485	None
464	[BUG]  [BUGGY]  createInteger(decPos,  str.length());  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  str.length());	      createInteger(decPos);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	485	None
474	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  illegal  start  of  expression	24	None
481	[BUG]  [BUGGY]  createInteger(decPos  +  1,  str.length());  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos  +  1,  str.length());	      createInteger(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	482	None
482	[BUG]  [BUGGY]  createInteger(decPos  +  1,  str.length(),  expPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos  +  1,  str.length(),  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos  +  1,  str.length(),  expPos);	      createInteger(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	482	None
483	[BUG]  [BUGGY]  createInteger(decPos  +  1,  str.length()),  expPos);  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos  +  1,  str.length()),  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos  +  1,  str.length()),  expPos);	      createInteger(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	482	None
484	[BUG]  [BUGGY]  createInteger(str.length()  +  1,  decPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str.length()  +  1,  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str.length()  +  1,  decPos);	      createInteger(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	482	None
491	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  Float  f  =  createFloat(str);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	Float  f  =  createFloat(str);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	3	None
492	[BUG]  [BUGGY]  final  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  final  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	final  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	3	None
493	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.getChar  [CE]  ')'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.getChar  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.getChar	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  ')'  expected	3	None
494	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	3	None
501	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  1);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(0,  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(0,  expPos  +  1);	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
503	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  -  1);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(0,  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(0,  expPos  -  1);	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
504	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  1);  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(0,  expPos  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(0,  expPos  1);	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  ')'  expected	363	None
521	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createBigDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createBigDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	175	None
523	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createBigDecimal(str);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createBigDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createBigDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  ')'  expected	175	None
524	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  >>  str.length())  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  >>  str.length())  {  return  createBigDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  >>  str.length())  {  return  createBigDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	175	None
533	[BUG]  [BUGGY]  return  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    }    return    f;    	non-compiled	[CE]  ';'  expected	184	None
542	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	543	None
543	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))!=  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))!=  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))!=	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	543	None
544	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  [Delete]  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  [Delete]	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	543	None
554	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >>  str.length())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >>  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  >>  str.length())  {	  if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	334	None
561	[BUG]  [BUGGY]  if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	82	None
562	[BUG]  [BUGGY]  if(!allZeros)  {  [CE]  cannot  find  symbol  allZeros  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!allZeros)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!allZeros)  {	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  cannot  find  symbol  allZeros	82	None
563	[BUG]  [BUGGY]  if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	82	None
564	[BUG]  [BUGGY]  if(!allZeros)  {  if(F.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!allZeros)  {  if(F.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!allZeros)  {  if(F.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	82	None
571	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  <  dec.length())  {  mant  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  <  dec.length())  {  mant  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  <  dec.length())  {  mant  =  str.substring(decPos  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
572	[BUG]  [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
573	[BUG]  [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  mant  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  mant  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  mant  =  str.substring(decPos  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
574	[BUG]  [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1,  expPos);  if(mant  ==  null)  {  mant  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1,  expPos);  if(mant  ==  null)  {  mant  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1,  expPos);  if(mant  ==  null)  {  mant  =  str.substring(decPos  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
603	[BUG]  [BUGGY]  return  f,  allZeros;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f,  allZeros;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f,  allZeros;	  return    f.length;    	non-compiled	[CE]  ';'  expected	323	None
612	[BUG]  [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
613	[BUG]  [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  throw  new  NumberFormatException( " ");  }	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
623	[BUG]  [BUGGY]  if(expPos  >  1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None
631	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
632	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	44	1
633	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	44	1
633	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	44	1
634	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	44	1
634	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	44	1
635	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	44	1
635	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  String  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CE]  variable  dec  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  String  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  String  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	non-compiled	[CE]  variable  dec  is  already  defined  in  method  createNumber(String)	44	None
643	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(decPos  +  1,  str.length()  -  2);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	364	None
644	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length(),  expPos);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length(),  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(decPos  +  1,  str.length(),  expPos);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	364	None
662	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  bodied  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  bodied  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  bodied	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None
671	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	172	None
673	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createDecimal(str);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  ')'  expected	172	None
674	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createDecimal(str);  }  [CE]  cannot  find  symbol  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  cannot  find  symbol	172	None
692	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  -  1,  expPos  -  1);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	94	1
693	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  -  1,  expPos  -  1);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	94	1
704	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None
721	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None
722	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None
723	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None
724	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  }	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None
731	[BUG]  [BUGGY]  str  =  str.substring(0,  expPos);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0,  expPos);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0,  expPos);	      str    =    str.substring(0,    strPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	263	None
733	[BUG]  [BUGGY]  str  =  str.substring(0,  expPoses);  [CE]  cannot  find  symbol  expPoses  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0,  expPoses);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0,  expPoses);	      str    =    str.substring(0,    strPos);    	non-compiled	[CE]  cannot  find  symbol  expPoses	263	None
734	[BUG]  [BUGGY]  str  =  str.substring(0),  expPos);  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0),  expPos);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0),  expPos);	      str    =    str.substring(0,    strPos);    	non-compiled	[CE]  ';'  expected	263	None
751	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	add	if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {	  if(dec    >    -1    &&    expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	302	1
752	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {	  if(dec    >    -1    &&    expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	302	1
752	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length()  1)  {  [CE]  ')'  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length()  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length()  1)  {	  if(dec    >    -1    &&    expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  ')'  expected	302	None
753	[BUG]  [BUGGY]  if(dec  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(dec  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(dec  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length())  {	  if(dec    >    -1    &&    expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	302	None
754	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  str.length()  -  1)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  >  -1  &&  str.length()  -  1)  {	  if(dec    >    -1    &&    expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	302	None
761	[BUG]  [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  variable  dec  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	String  dec  =  str.substring(expPos  +  1,  str.length());	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  dec  is  already  defined  in  method  createNumber(String)	265	None
762	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	String  str  =  str.substring(expPos  +  1,  str.length());	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	265	None
764	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  variable  exp  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length());	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  is  already  defined  in  method  createNumber(String)	265	None
772	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  [CE]  variable  f  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);	      f    =    createFloat(str);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  createNumber(String)	1	None
773	[BUG]  [BUGGY]  float  f  =  createFloat(str);  [CE]  variable  f  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  float  f  =  createFloat(str);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	float  f  =  createFloat(str);	      f    =    createFloat(str);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  createNumber(String)	1	None
783	[BUG]  [BUGGY]  numDecimal  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  numDecimal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimal  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimal  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length()    -    1;    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  numDecimal	202	None
784	[BUG]  [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  in  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  in  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  in  precision  for  floating  point  numbers.	  numDecimals    =    dec.length()    -    1;    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	202	None
791	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None
792	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  not  a  statement  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  f;  }	  	non-compiled	[CE]  not  a  statement	44	None
795	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None
801	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  'catch'  without  'try'  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  'catch'  without  'try'	545	None
803	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  ați  [CE]  not  a  statement  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  ați  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  ați	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  not  a  statement	545	None
804	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	545	None
812	[BUG]  [BUGGY]  if(f.length()  ==  0)  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  not  a  statement  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.length()  ==  0)  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.length()  ==  0)  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createLong(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  not  a  statement	542	None
822	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('.')+  1;	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	51	None
823	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('.')-  1;	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	51	None
824	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.'),  -1);  [CE]  <identifier>  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('.'),  -1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('.'),  -1);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  <identifier>  expected	51	None
832	[BUG]  [BUGGY]  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None
833	[BUG]  [BUGGY]  if(dec!=  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec!=  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec!=  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None
834	[BUG]  [BUGGY]  if(!mant.isEmpty())  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(!mant.isEmpty())  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(!mant.isEmpty())  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None
841	[BUG]  [BUGGY]  return  f  =  Float.parseFloat(str);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.parseFloat(str);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.parseFloat(str);	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	63	None
842	[BUG]  [BUGGY]  return  f  =  Float.parseFloat(exp);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.parseFloat(exp);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.parseFloat(exp);	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	63	None
844	[BUG]  [BUGGY]  return  f  =  Float.parseFloat(mant);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.parseFloat(mant);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.parseFloat(mant);	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	63	None
851	[BUG]  [BUGGY]  return  f;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
852	[BUG]  [BUGGY]  return  f.intValue;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.intValue;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.intValue;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
853	[BUG]  [BUGGY]  return  f.floatValue;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.floatValue;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.floatValue;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
854	[BUG]  [BUGGY]  return  f.float;  [CE]  <identifier>  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.float;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.float;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  <identifier>  expected	64	None
864	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length())+  1;  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length())+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(decPos  +  1,  str.length())+  1;	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	365	None
872	[BUG]  [BUGGY]  return  f  >  0  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    	non-compiled	[CE]  ';'  expected	182	None
881	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  dec  =  str.substring(0,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	        dec    =    str.substring(0,    expPos);    dec  =  str.substring(0,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
882	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  dec  =  str.substring(0,  expPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  dec  =  str.substring(0,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    dec  =  str.substring(0,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
883	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
884	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length());  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
884	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
885	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
885	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  dec  =  str.substring(0,  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	        dec    =    str.substring(0,    expPos);    dec  =  str.substring(0,  expPos  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
886	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  dec  =  str.substring(0,  expPos  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  dec  =  str.substring(0,  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    dec  =  str.substring(0,  expPos  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
923	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  mant)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  mant)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(expPos  <  mant)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	394	None
924	[BUG]  [BUGGY]  if(mant  ==  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	394	None
931	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	152	1
932	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	152	1
932	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    exp  =  str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	152	1
933	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    exp  =  str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	152	1
933	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	152	1
934	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	152	1
934	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    str  =  str.substring(expPos  +  1,  str.length());	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	152	None
935	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	152	None
951	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	243	None
953	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	243	None
954	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( "   ");  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	243	None
961	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( "   ");  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	483	None
963	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  >  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  {  if(expPos  >  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  {  if(expPos  >  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	483	None
971	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  dec.length())  {  dec  =  str.substring(0,  decPos);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None
973	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  str.length())  {  dec  =  str.substring(0,  decPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  str.length())  {  dec  =  str.substring(0,  decPos);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  str.length())  {  dec  =  str.substring(0,  decPos);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None
974	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(0,  decPos);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None
981	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        exp    =    str.substring(0,    str.length()    -    1);    exp  =  str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
982	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    exp  =  str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
982	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        exp    =    str.substring(0,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
983	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
983	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	71	None
984	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    str  =  str.substring(expPos  +  1,  str.length());	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	71	None
985	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        exp    =    str.substring(0,    str.length()    -    1);    str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
986	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
991	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None
992	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  decPos)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None
993	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  +  1  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  +  1  <  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  +  1  <  decPos)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None
994	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  0)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  0)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  >  0)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None
1001	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(exp);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(exp);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(exp);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	183	None
1002	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(mant);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(mant);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(mant);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	183	None
1003	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f),  Float.parseFloat(f);  [CE]  :  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f),  Float.parseFloat(f);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f),  Float.parseFloat(f);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  :  expected	183	None
1004	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(mant,  f);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(mant,  f);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(mant,  f);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	183	None
1011	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1013	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  toured  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  toured  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  toured	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1014	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  bodied  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  bodied  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  bodied	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1015	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1031	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
1032	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  ==  expPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  ==  expPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  ==  expPos)  {  throw  new  NumberFormatException( "   ");  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
1033	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  ==  0)  {  throw  new  NumberFormatException( "   ");  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
1041	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	        str.substring(decPos    +    1,    str.length());    dec  =  str.substring(decPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	194	1
1042	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  dec  =  str.substring(decPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    dec  =  str.substring(decPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	194	1
1042	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str.substring(expPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	        str.substring(decPos    +    1,    str.length());    str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	194	1
1043	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  str.substring(expPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str.substring(expPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	194	1
1043	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    str  =  str.substring(expPos  +  1,  str.length());	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	194	None
1044	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  str.substring(0,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	194	None
1051	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createNumber(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createNumber(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createNumber(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  expression	244	None
1052	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  >>  str.length())  {  return  createNumber(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  >>  str.length())  {  return  createNumber(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  >>  str.length())  {  return  createNumber(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  expression	244	None
1053	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createNumber(str);  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createNumber(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  return  createNumber(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	244	None
1054	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createNumber(str);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createNumber(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  return  createNumber(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  ')'  expected	244	None
1061	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length());	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	362	None
1062	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	362	None
1063	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()));  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length()));	  	non-compiled	[CE]  ';'  expected	362	None
1064	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	        dec    =    str.substring(0,    expPos);    exp  =  str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
1065	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  exp  =  str.substring(expPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    exp  =  str.substring(expPos  +  1,  str.length());	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	362	1
1065	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length();  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length();	  	non-compiled	[CE]  ')'  expected	362	None
1073	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  '),  -1;  [CE]  <identifier>  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  '),  -1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  '),  -1;	      int    expPos    =    str.indexOf('    ')-    1;    	non-compiled	[CE]  <identifier>  expected	55	None
1082	[BUG]  [BUGGY]  &&!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  &&!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	&&!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  illegal  start  of  expression	23	None
1083	[BUG]  [BUGGY]  &&!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  &&!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	&&!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  illegal  start  of  expression	23	None
1091	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('e');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('e');	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	22	None
1092	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('e')+  1;	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	22	None
1093	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e')-  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('e')-  1;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('e')-  1;	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	22	None
1102	[BUG]  [BUGGY]  str.substring(0,  str.length());  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length());	      str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	74	None
1103	[BUG]  [BUGGY]  str.substring(0,  str.length()));  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()));  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()));	      str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	74	None
1104	[BUG]  [BUGGY]  str.substring(0,  str.length()  +  1);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  +  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  +  1);	      str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	74	None
1111	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    -    1);    dec  =  str.substring(decPos  +  1,  expPos  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1112	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    dec  =  str.substring(decPos  +  1,  expPos  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1112	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1113	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1113	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1114	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1114	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1115	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1115	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1116	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
1121	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.');  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.');  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('.');	  	non-compiled	[CE]  illegal  start  of  expression	81	None
1122	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	81	None
1123	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ',  expPos  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ',  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('  ',  expPos  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	81	None
1124	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ');  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ');  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('  ');	  	non-compiled	[CE]  illegal  start  of  expression	81	None
1125	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.',  expPos  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('.',  expPos  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	81	None
1141	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.');  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.');  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('.');	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1142	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ');  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ');  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('  ');	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1143	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ',  expPos  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ',  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('  ',  expPos  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1144	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf(',')+  1;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf(',')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf(',')+  1;	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1145	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.',  expPos  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('.',  expPos  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1152	[BUG]  [BUGGY]  expPos  =  str.substring(0,  str.length());  [CE]  cannot  assign  a  value  to  final  variable  expPos  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(0,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(0,  str.length());	      expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expPos	173	None
1153	[BUG]  [BUGGY]  expPos  =  str.substring(0,  str.length()));  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(0,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(0,  str.length()));	      expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	173	None
1162	[BUG]  [BUGGY]  if(f.length()  ==  0)  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  not  a  statement  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.length()  ==  0)  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.length()  ==  0)  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  not  a  statement	541	None
1173	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0D  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	add	if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0D  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0FT    &&!allZeros)))    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	304	1
1174	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0D  &&!allZeros)))  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0D  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0D  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0FT    &&!allZeros)))    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	304	1
1174	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0L  &&!allZeros)))  {  [CE]  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0L  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0L  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0FT    &&!allZeros)))    {    	non-compiled	[CE]  	304	None
1181	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  -1);  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  -1);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression',  -1);	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
1182	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression')+  1;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression')+  1;	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
1183	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('Expression',  -1);  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.indexOf('Expression',  -1);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.indexOf('Expression',  -1);	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
1184	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression'  -  1);  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression'  -  1);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression'  -  1);	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
1201	[BUG]  [BUGGY]  Sort(str.substring(expPos  +  1));  [CE]  cannot  find  symbol  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Sort(str.substring(expPos  +  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Sort(str.substring(expPos  +  1));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	365	None
1202	[BUG]  [BUGGY]  Arrays.sort(str.substring(expPos  +  1));  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(expPos  +  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(expPos  +  1));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  Arrays	365	None
1203	[BUG]  [BUGGY]  List.sort(str.substring(expPos  +  1));  [CE]  cannot  find  symbol  List  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  List.sort(str.substring(expPos  +  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	List.sort(str.substring(expPos  +  1));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  List	365	None
1204	[BUG]  [BUGGY]  String.sort(str.substring(expPos  +  1));  [CE]  cannot  find  symbol  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String.sort(str.substring(expPos  +  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String.sort(str.substring(expPos  +  1));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	365	None
1211	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  mant);  [CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  mant);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  mant);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(expPos);    	non-compiled	[CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;	162	None
1212	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  expPos);  [CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  expPos);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  expPos);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(expPos);    	non-compiled	[CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;	162	None
1213	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  dec);  [CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  dec);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  dec);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(expPos);    	non-compiled	[CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;	162	None
1214	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  exponentPos);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  exponentPos);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(expPos);    	non-compiled	[CE]  cannot  find  symbol  exponentPos	162	None
1223	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  exponent);  [CE]  cannot  find  symbol  exponent  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  exponent);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  +  1,  exponent);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	non-compiled	[CE]  cannot  find  symbol  exponent	94	None
1243	[BUG]  [BUGGY]  str  =  str.substring(expPos  +  1,  str.length(),  expPos);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(expPos  +  1,  str.length(),  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(expPos  +  1,  str.length(),  expPos);	      str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	241	None
1251	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
1252	[BUG]  [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
1252	[BUG]  [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  variable  dec  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  dec  might  not  have  been  initialized	45	None
1253	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	if(expPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
1254	[BUG]  [BUGGY]  if(expPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  <  decPos)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
1254	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
1255	[BUG]  [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
1264	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  1);  [CE]  ')'  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  expPos  1);	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  ')'  expected	124	None
1271	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [CE]  ')'  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  ')'  expected	83	None
1272	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&  [CE]  ')'  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  ')'  expected	83	None
1273	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None
1274	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))!=  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))!=  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))!=  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None
1281	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	155	1
1282	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	155	1
1291	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length());	      str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	171	None
1293	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()));  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length()));	      str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	171	None
1294	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()),  expPos);  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length()),  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length()),  expPos);	      str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	171	None
1301	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [CE]  variable  allZeros  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);	  	non-compiled	[CE]  variable  allZeros  is  already  defined  in  method  createNumber(String)	275	None
1302	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
1303	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
1304	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
1305	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
1322	[BUG]  [BUGGY]  str  =  str.substring(0,  expPos  +  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  expPos  +  1);	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	361	None
1323	[BUG]  [BUGGY]  str  =  str.substring(0,  expPos  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  expPos  -  1);	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	361	None
1324	[BUG]  [BUGGY]  str  =  str.substring(0,  expPos  1);  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  expPos  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  expPos  1);	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  ')'  expected	361	None
1331	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos);  [CE]  variable  exp  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  exp  =  str.substring(0,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  variable  exp  is  already  defined  in  method  createNumber(String)	365	None
1333	[BUG]  [BUGGY]  String  expPos  =  str.substring(0,  expPos);  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  expPos  =  str.substring(0,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  expPos  =  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	365	None
1334	[BUG]  [BUGGY]  String  expp  =  str.substring(0,  expPos);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  expp  =  str.substring(0,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  expp  =  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	365	None
1352	[BUG]  [BUGGY]  String  str  =  expPos.substring(0,  expPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  String  str  =  expPos.substring(0,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	String  str  =  expPos.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	45	None
1354	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  expPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  String  str  =  numeric.substring(0,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	String  str  =  numeric.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	45	None
1362	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  variable  exp  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  variable  exp  is  already  defined  in  method  createNumber(String)	155	None
1372	[BUG]  [BUGGY]  final  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  variable  f  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  final  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	final  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  variable  f  is  already  defined  in  method  createNumber(String)	4	None
1374	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  'catch'  without  'try'  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  'catch'  without  'try'	4	None
1381	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	276	None
1382	[BUG]  [BUGGY]  if(!f.isNaN())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isNaN())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isNaN())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	276	None
1384	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	276	None
1391	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0	      	non-compiled	[CE]  ')'  expected	35	None
1392	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f;  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&  [CE]  not  a  statement  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f;  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f;  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&	      	non-compiled	[CE]  not  a  statement	35	None
1394	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  [CE]  ')'  expected  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D	      	non-compiled	[CE]  ')'  expected	35	None
1402	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('E')+  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('E')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('E')+  1;	      int    expPos    =    str.indexOf('Ex')+    1;    	non-compiled	[CE]  illegal  start  of  type	122	None
1403	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Ex')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('Ex')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('Ex')+  1;	      int    expPos    =    str.indexOf('Ex')+    1;    	non-compiled	[CE]  unclosed  character  literal	122	None
1404	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('Ex')-  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('Ex')-  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('Ex')-  1;	      int    expPos    =    str.indexOf('Ex')+    1;    	non-compiled	[CE]  unclosed  character  literal	122	None
1422	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }	      if(mant    ==    null)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	163	None
1451	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    <    decPos)    {    if(expPos    ==    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None
1453	[BUG]  [BUGGY]  if(expPos  >  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    <    decPos)    {    if(expPos    ==    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None
1474	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('e')+  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('e')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('e')+  1;	      int    expPos    =    str.lastIndexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None
1481	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(f.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(f.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '0'  &&  f.charAt(f.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0	      if(f.charAt(0)    ==    '0'    &&    f.charAt(str.length()    -    1)    ==    '9')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0    	non-compiled	[CE]  ')'  expected	544	None
1483	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(f.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(f.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '0'  &&  f.charAt(f.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0	      if(f.charAt(0)    ==    '0'    &&    f.charAt(str.length()    -    1)    ==    '9')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0    	non-compiled	[CE]  ')'  expected	544	None
1494	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  '),  +  1;  [CE]  <identifier>  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  '),  +  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  '),  +  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  <identifier>  expected	53	None
1	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  illegal  start  of  expression	23	None
2	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  illegal  start  of  expression	23	None
4	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  illegal  start  of  expression	23	None
21	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f,  mant):  Float.parseFloat(f);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f,  mant):  Float.parseFloat(f);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f,  mant):  Float.parseFloat(f);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	183	None
23	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f,  allZeros):  Float.parseFloat(f);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f,  allZeros):  Float.parseFloat(f);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f,  allZeros):  Float.parseFloat(f);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	183	None
43	[BUG]  [BUGGY]  if(!f.isInfinite())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None
62	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None
82	[BUG]  [BUGGY]  return  f.numOctal;  [CE]  cannot  find  symbol  numOctal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f.numOctal;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.numOctal;	  return    f.length;    	non-compiled	[CE]  cannot  find  symbol  numOctal	323	None
83	[BUG]  [BUGGY]  return  f.number;  [CE]  cannot  find  symbol  number  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f.number;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.number;	  return    f.length;    	non-compiled	[CE]  cannot  find  symbol  number	323	None
84	[BUG]  [BUGGY]  return  f.numElement;  [CE]  cannot  find  symbol  numElement  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f.numElement;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.numElement;	  return    f.length;    	non-compiled	[CE]  cannot  find  symbol  numElement	323	None
102	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(0,  expPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(0,  expPos);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(0,  expPos);  }	  	non-compiled	[CE]  illegal  start  of  expression	362	None
103	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	362	None
104	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	362	None
105	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	non-compiled	[CE]  illegal  start  of  expression	362	None
121	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None
123	[BUG]  [BUGGY]  if(!dec.equals(mant))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(!dec.equals(mant))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(!dec.equals(mant))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None
124	[BUG]  [BUGGY]  if(!Character.isDigit(dec))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(!Character.isDigit(dec))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(!Character.isDigit(dec))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None
142	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " "));  }  [CE]  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " "));  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " "));  }	      if(dec    ==    null)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	392	None
161	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        exp    =    str.substring(0,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
162	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
164	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        exp    =    str.substring(0,    str.length()    -    1);    str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
165	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	71	1
182	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e'),  numDecimals+  1;  [CE]  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('e'),  numDecimals+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('e'),  numDecimals+  1;	      int    expPos    =    str.lastIndexOf('e')+    1;    	non-compiled	[CE]  	25	None
183	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1,  numDecimals;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1,  numDecimals;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('e')+  1,  numDecimals;	      int    expPos    =    str.lastIndexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None
184	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e',  'i')+  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('e',  'i')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('e',  'i')+  1;	      int    expPos    =    str.lastIndexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None
203	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " "));  }  [CE]  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " "));  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " "));  }	      if(mant    ==    null)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	165	None
221	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	394	None
224	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	394	None
242	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None
283	[BUG]  [BUGGY]  return  f  =  createFloat(str,  f);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  =  createFloat(str,  f);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  createFloat(str,  f);	  return    f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	322	None
301	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None
302	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
303	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
304	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
305	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  str.substring(expPos  +  1,  str.length());  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  str.substring(expPos  +  1,  str.length());  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  str.substring(expPos  +  1,  str.length());  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
322	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  ')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  ')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  ')+  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  unclosed  character  literal	53	None
324	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  '),  numDecimals+  1;  [CE]  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  '),  numDecimals+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  '),  numDecimals+  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  	53	None
341	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  [Delete]  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	[Delete]	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  expression	244	None
342	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  expression	244	None
361	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  [Delete]  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	[Delete]	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ")    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None
362	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	}	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ")    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None
363	[BUG]  [BUGGY]  <<  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  <<  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	<<	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ")    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None
364	[BUG]  [BUGGY]  ==  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  ==  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	==	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ")    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None
382	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.  [CE]  <identifier>  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  else  {  dec  =  str.substring(decPos  +  1,  str.	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  <identifier>  expected	363	None
383	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(dec  >  -1  &&  expPos  <  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(dec  >  -1  &&  expPos  <  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(dec  >  -1  &&  expPos  <  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	363	None
384	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length());  }	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
461	[BUG]  [BUGGY]  createInteger(decPos,  str);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  str);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  str);	      createInteger(decPos);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	485	None
462	[BUG]  [BUGGY]  createInteger(decPos,  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  exponentPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  exponentPos);	      createInteger(decPos);    	non-compiled	[CE]  cannot  find  symbol  exponentPos	485	None
482	[BUG]  [BUGGY]  return  f.numberValue;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.numberValue;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.numberValue;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
483	[BUG]  [BUGGY]  return  f.numOctal;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.numOctal;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.numOctal;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
484	[BUG]  [BUGGY]  return  f.number;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.number;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.number;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
501	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None
502	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	81	None
503	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	81	None
504	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	81	None
505	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  int  expPos  =  str.length();  if(expPos  >  -1  &&  expPos  <  str.length())  {  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  int  expPos  =  str.length();  if(expPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    if(dec  ==  null  &&  exp  ==  null)  {  int  expPos  =  str.length();  if(expPos  >  -1  &&  expPos  <  str.length())  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None
521	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	64	None
522	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	64	None
524	[BUG]  [BUGGY]  if(decPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(decPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(decPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	64	None
563	[BUG]  [BUGGY]  int  expPos  =  str.length()  +  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.length()  +  1;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.length()  +  1;	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	24	None
584	[BUG]  [BUGGY]  return  f  =  Float.valueOf(str)-  1;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.valueOf(str)-  1;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.valueOf(str)-  1;	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	62	None
601	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	333	None
602	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	333	None
603	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	333	None
604	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.length();	  	non-compiled	[CE]  illegal  start  of  expression	333	None
605	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	333	None
642	[BUG]  [BUGGY]  expPos  =  str.substring(0,  str.length())+  1;  [CE]  cannot  assign  a  value  to  final  variable  expPos  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(0,  str.length())+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(0,  str.length())+  1;	      expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expPos	173	None
643	[BUG]  [BUGGY]  expPos  =  str.substring(0,  str.length()),  expPos);  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(0,  str.length()),  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(0,  str.length()),  expPos);	      expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	173	None
663	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).substring(decPos  +  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).substring(decPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length()).substring(decPos  +  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	362	None
664	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).substring(0,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length()).substring(0,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	362	None
665	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).substring(decPos  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).substring(decPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length()).substring(decPos  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	362	None
684	[BUG]  [BUGGY]  str  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  expPos  +  1,  str.length());	      str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	241	None
722	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  [Delete]  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	[Delete]	  numDecimals    =    dec.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	61	None
742	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(expPos  +  1,  str.length());	      str    =    str.substring(0,    str.length()    -    1);    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	174	None
744	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length())+  1;  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length())+  1;  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length())+  1;  dec  =  str.substring(decPos  +  1,  str.length());	      str    =    str.substring(0,    str.length()    -    1);    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	174	None
763	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  str.  [CE]  <identifier>  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  str.  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  str.	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  <identifier>  expected	364	None
764	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  expPos  <  -1  &&  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  expPos  <  -1  &&  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  expPos  <  -1  &&	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	364	None
783	[BUG]  [BUGGY]  createInteger(str,  decPos  +  1,  str.length()  -  1);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str,  decPos  +  1,  str.length()  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str,  decPos  +  1,  str.length()  -  1);	      createInteger(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	482	None
803	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	73	None
804	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length());	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	73	None
805	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        str.substring(0,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
806	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
822	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('Ex',  'P')+  1;	      int    expPos    =    str.indexOf('Ex')+    1;    	non-compiled	[CE]  unclosed  character  literal	122	None
823	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('Ex',  'No')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('Ex',  'No')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('Ex',  'No')+  1;	      int    expPos    =    str.indexOf('Ex')+    1;    	non-compiled	[CE]  unclosed  character  literal	122	None
824	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('Ex',  lastChar)+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('Ex',  lastChar)+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('Ex',  lastChar)+  1;	      int    expPos    =    str.indexOf('Ex')+    1;    	non-compiled	[CE]  unclosed  character  literal	122	None
843	[BUG]  [BUGGY]  if(!f.isInfinite())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite())  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None
861	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  	      	non-compiled	[CE]  illegal  start  of  expression	35	None
883	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  exponentPos);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  -  1,  exponentPos);	  dec    =    str.substring(decPos    -    1,    expPos);    	non-compiled	[CE]  cannot  find  symbol  exponentPos	285	None
902	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  str.length());  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(decPos  -  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(decPos  -  1,  str.length());	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	364	None
904	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  10);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  10);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(decPos  +  1,  str.length()  -  10);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	364	None
924	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  illegal  start  of  expression	115	None
942	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	172	None
944	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	172	None
963	[BUG]  [BUGGY]  String  exp  =  str.substring(decPos  +  1,  str.length());  [CE]  variable  exp  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  String  exp  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	String  exp  =  str.substring(decPos  +  1,  str.length());	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  is  already  defined  in  method  createNumber(String)	265	None
983	[BUG]  [BUGGY]  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(decPos  +  1,  str.length()  -  1);	      str    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	242	None
1002	[BUG]  [BUGGY]  dec  =  str.substring(0,  decPos);  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  dec  =  str.substring(0,  decPos);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	dec  =  str.substring(0,  decPos);	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	105	None
1003	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(0,  decPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(0,  decPos);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(0,  decPos);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None
1004	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >=  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >=  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >=  dec.length())  {  dec  =  str.substring(0,  decPos);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None
1043	[BUG]  [BUGGY]  numDecimal  =  dec.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  numDecimal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimal  =  dec.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimal  =  dec.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length();    //    get    number    of    digits    before    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  numDecimal	203	None
1084	[BUG]  [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  fixed  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  fixed  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  fixed  point  numbers.	  numDecimals    =    dec.length()    +    1;    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	204	None
1102	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
1103	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
1104	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
1105	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  String  dec  =  str.substring(decPos  +  1);  if(dec  ==  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  String  dec  =  str.substring(decPos  +  1);  if(dec  ==  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  String  dec  =  str.substring(decPos  +  1);  if(dec  ==  expPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
1123	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0  [CE]  ')'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	2	None
1141	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
1143	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!	  	non-compiled	[CE]  illegal  start  of  expression	275	None
1145	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float.valueOf(f.longValue());  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float.valueOf(f.longValue());  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float.valueOf(f.longValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
1163	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1);  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  dec  =  str.substring(decPos  +  1);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	dec  =  str.substring(decPos  +  1);	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	102	None
1164	[BUG]  [BUGGY]  if(!Character.isDigit(dec))  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(!Character.isDigit(dec))  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(!Character.isDigit(dec))  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    if(expPos    <    dec.length())    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None
1222	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  left);  [CE]  cannot  find  symbol  left  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  left);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  left);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(expPos);    	non-compiled	[CE]  cannot  find  symbol  left	162	None
1244	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None
1261	[BUG]  [BUGGY]  final  Float  f  =  createFloat(str);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  final  Float  f  =  createFloat(str);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	final  Float  f  =  createFloat(str);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	3	None
1263	[BUG]  [BUGGY]  Float  f  =  createInteger(str);  [CE]  incompatible  types  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  Float  f  =  createInteger(str);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	Float  f  =  createInteger(str);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  incompatible  types	3	None
1264	[BUG]  [BUGGY]  Float  f  =  createFloat(mant);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  Float  f  =  createFloat(mant);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	Float  f  =  createFloat(mant);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	3	None
1301	[BUG]  [BUGGY]  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  -  1,  str.length()  -  1);	      str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	75	None
1302	[BUG]  [BUGGY]  str.substring(0,  str.length()  -  1,  expPos);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  -  1,  expPos);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  -  1,  expPos);	      str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	75	None
1303	[BUG]  [BUGGY]  str.substring(0,  str.length()  -  1,  expPos,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int,int)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  -  1,  expPos,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  -  1,  expPos,  str.length());	      str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int)	75	None
1324	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(allZeros)&&  isAllZeros(exp);  [CE]  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  boolean  allZeros  =  isAllZeros(allZeros)&&  isAllZeros(exp);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	boolean  allZeros  =  isAllZeros(allZeros)&&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	111	None
1344	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  str  =  str.substring(0,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  str  =  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	365	None
1381	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||(f.longValue()  ==  0.0F  &&!allZeros)))  {  f  =  createLong(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||(f.longValue()  ==  0.0F  &&!allZeros)))  {  f  =  createLong(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(!(f.isInfinite()  ||(f.longValue()  ==  0.0F  &&!allZeros)))  {  f  =  createLong(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0	  	non-compiled	[CE]  ')'  expected	44	None
1382	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  f  =  createLong(str);  if(!(f.isInfinite()  ||(f.longValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  f  =  createLong(str);  if(!(f.isInfinite()  ||(f.longValue()  ==  0.0  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  f  =  createLong(str);  if(!(f.isInfinite()  ||(f.longValue()  ==  0.0	  	non-compiled	[CE]  ')'  expected	44	None
1402	[BUG]  [BUGGY]  return  f.intValue()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f.intValue()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.intValue()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    	non-compiled	[CE]  ';'  expected	182	None
1403	[BUG]  [BUGGY]  return  f  =  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  =  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    	non-compiled	[CE]  ';'  expected	182	None
1442	[BUG]  [BUGGY]  if(!allZeros)  {  if(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!allZeros)  {  if(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!allZeros)  {  if(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	82	None
1462	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()).toLowerCase();  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp  =  str.substring(expPos  +  1,  str.length()).toLowerCase();	  exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	153	1
1463	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()).toLowerCase();  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()).toLowerCase();  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()).toLowerCase();	  exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	153	1
1504	[BUG]  [BUGGY]  str  =  str.substring(0,  expPos)+  1;  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  expPos)+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  expPos)+  1;	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	361	None
1524	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str.substring(expPos  +  1,  str.length()  -  1);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str.substring(expPos  +  1,  str.length()  -  1);  }  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str.substring(expPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  ')'  expected	152	None
1525	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	152	None
1542	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  {  if(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros))  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1544	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  (f.doubleValue()  ==  0.0F  &&!allZeros))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  (f.doubleValue()  ==  0.0F  &&!allZeros))  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  {  if(f.isInfinite()  ||  (f.doubleValue()  ==  0.0F  &&!allZeros))  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
1564	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  1)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  1)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >    1)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
1565	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  )  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  )  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  )  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
1582	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	483	None
1583	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  helm  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  {  if(expPos  helm  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  {  if(expPos  helm  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	483	None
1602	[BUG]  [BUGGY]  if(dec  >  -1  &&  expPos  <  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(dec  >  -1  &&  expPos  <  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(dec  >  -1  &&  expPos  <  -1  &&  expPos  <  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	83	None
1604	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	add	if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	83	1
1605	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	83	1
1623	[BUG]  [BUGGY]  Lists.sort(str.substring(expPos  +  1));  [CE]  cannot  find  symbol  Lists  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Lists.sort(str.substring(expPos  +  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Lists.sort(str.substring(expPos  +  1));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  Lists	365	None
1624	[BUG]  [BUGGY]  Sort.sort(str.substring(expPos  +  1));  [CE]  cannot  find  symbol  Sort  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Sort.sort(str.substring(expPos  +  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Sort.sort(str.substring(expPos  +  1));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  Sort	365	None
1664	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos)+  1;  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(0,  expPos)+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(0,  expPos)+  1;	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
1681	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  illegal  start  of  expression	24	None
1682	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  &&(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  illegal  start  of  expression	24	None
1684	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  illegal  start  of  expression	24	None
1702	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos);  [CE]  variable  dec  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  String  dec  =  str.substring(0,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	String  dec  =  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  dec  is  already  defined  in  method  createNumber(String)	45	None
1703	[BUG]  [BUGGY]  char  str  =  str.substring(0,  expPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  char  str  =  str.substring(0,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	char  str  =  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	45	None
1704	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  String  str  =  str.substring(0,  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	String  str  =  str.substring(0,  decPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	45	None
1744	[BUG]  [BUGGY]  return  f.value  =  Float.parseFloat(str);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.value  =  Float.parseFloat(str);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.value  =  Float.parseFloat(str);	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	63	None
1842	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
1844	[BUG]  [BUGGY]  if(decPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(decPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(decPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
1863	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  '0'),  -expPos);  [CE]  <identifier>  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  '0'),  -expPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  '0'),  -expPos);	      int    expPos    =    str.indexOf('    ',    '0');    	non-compiled	[CE]  <identifier>  expected	54	None
1882	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  ')-  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  ')-  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  ')-  1;	      int    expPos    =    str.indexOf('    ')-    1;    	non-compiled	[CE]  unclosed  character  literal	55	None
1884	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  '),  -1)-  1;  [CE]  <identifier>  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  '),  -1)-  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  '),  -1)-  1;	      int    expPos    =    str.indexOf('    ')-    1;    	non-compiled	[CE]  <identifier>  expected	55	None
1901	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
1903	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
1904	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
1905	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
1922	[BUG]  [BUGGY]  Sort.sort(str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  Sort  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Sort.sort(str.substring(0,  str.length()  -  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Sort.sort(str.substring(0,  str.length()  -  1));	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol  Sort	364	None
1924	[BUG]  [BUGGY]  Lists.sort(str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  Lists  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Lists.sort(str.substring(0,  str.length()  -  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Lists.sort(str.substring(0,  str.length()  -  1));	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol  Lists	364	None
1982	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None
1984	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	      if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None
2003	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  *  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  *  1,  expPos  -  1);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	94	1
2004	[BUG]  [BUGGY]  dec  =  str.substring(decPos  *  1,  expPos  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  *  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  *  1,  expPos  -  1);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	94	1
2004	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  *  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  +  1,  expPos  *  1);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	94	1
2005	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  *  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  *  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  *  1);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	94	1
2024	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  'e');  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('.',  'e');  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('.',  'e');	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	51	None
2042	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  'expPos);  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  'expPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  'expPos);	      int    expPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	52	None
2044	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  0);  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  0);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  0);	      int    expPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	52	None
2061	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createLong(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	542	None
2063	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {	      if(f.charAt(0)    ==    '-')    {    f    =    createLong(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	542	None
2102	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	}	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	243	None
2103	[BUG]  [BUGGY]  <<  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  <<  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	<<	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	243	None
2104	[BUG]  [BUGGY]  ==  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  ==  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	==	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	243	None
2144	[BUG]  [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1),  exponent);  [CE]  cannot  find  symbol  exponent  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(decPos,  str.substring(decPos  +  1),  exponent);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(decPos,  str.substring(decPos  +  1),  exponent);	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  cannot  find  symbol  exponent	124	None
2164	[BUG]  [BUGGY]  str  =  str.substring(xpPos  +  1,  str.length());  [CE]  cannot  find  symbol  xpPos  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(xpPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(xpPos  +  1,  str.length());	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  cannot  find  symbol  xpPos	361	None
2183	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " "));  }  [CE]  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " "));  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " "));  }	      if(mant    ==    null)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	163	None
2201	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	395	None
2203	[BUG]  [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  >>  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  >>  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(mant  ==  null)  {  if(expPos  >  -1)  {  if(expPos  >>  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	395	None
2204	[BUG]  [BUGGY]  if(decPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(decPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(decPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	395	None
2221	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
2222	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
2223	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  dec  =  str.substring(decPos  -  1,  expPos);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    -    1,    expPos);    dec  =  str.substring(decPos  -  1,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
2224	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  dec  =  str.substring(decPos  -  1,  expPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  dec  =  str.substring(decPos  -  1,  expPos);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    dec  =  str.substring(decPos  -  1,  expPos);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	284	1
2224	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
2225	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
2261	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
2263	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
2264	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  dec  =  str.substring(decPos  -  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec    =    str.substring(decPos    +    1,    expPos    -    1);    dec  =  str.substring(decPos  -  1,  expPos  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
2265	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  dec  =  str.substring(decPos  -  1,  expPos  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  dec  =  str.substring(decPos  -  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    dec  =  str.substring(decPos  -  1,  expPos  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	93	1
2265	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  String  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  variable  dec  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  String  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    String  dec  =  str.substring(decPos  +  1,  expPos  -  1);	  	non-compiled	[CE]  variable  dec  is  already  defined  in  method  createNumber(String)	93	None
2282	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  dec  ==  str.length())  {  [CE]  incomparable  types:  String  and  int  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  dec  ==  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  >  -1  &&  dec  ==  str.length())  {	  if(dec    >    -1    &&    expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  incomparable  types:  String  and  int	302	None
2284	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  dec  <  str.length())  {  [CE]  bad  operand  types  for  binary  operator  '<'  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >  -1  &&  dec  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  >  -1  &&  dec  <  str.length())  {	  if(dec    >    -1    &&    expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	302	None
2342	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	175	None
2344	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createBigDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createBigDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	175	None
2363	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nDecimals);  [CE]  cannot  find  symbol  nDecimals  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nDecimals);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1,  nDecimals);	  	non-compiled	[CE]  cannot  find  symbol  nDecimals	123	None
2365	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nF);  [CE]  cannot  find  symbol  nF  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nF);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1,  nF);	  	non-compiled	[CE]  cannot  find  symbol  nF	123	None
2382	[BUG]  [BUGGY]  f  =  createFloat(str,  f);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  f  =  createFloat(str,  f);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	f  =  createFloat(str,  f);	      f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	1	None
2383	[BUG]  [BUGGY]  f  =  createFloat(str.floatValue());  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  f  =  createFloat(str.floatValue());  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	f  =  createFloat(str.floatValue());	      f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	1	None
2423	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  decPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  decPos  =  str.indexOf('  ',  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	int  decPos  =  str.indexOf('  ',  decPos);	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	43	None
2442	[BUG]  [BUGGY]  int  expPos  =(str  ==  null)?  -1  :  str.length();  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =(str  ==  null)?  -1  :  str.length();  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =(str  ==  null)?  -1  :  str.length();	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	21	None
2444	[BUG]  [BUGGY]  int  expPos  =(str  ==  null?  -1  :  str.length());  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =(str  ==  null?  -1  :  str.length());  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =(str  ==  null?  -1  :  str.length());	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	21	None
2463	[BUG]  [BUGGY]  expPos  -=  str.substring(0,  expPos);  [CE]  cannot  assign  a  value  to  final  variable  expPos  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  expPos  -=  str.substring(0,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	expPos  -=  str.substring(0,  expPos);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expPos	3	None
2501	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  'No');  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  'No');  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex',  'No');	  	non-compiled	[CE]  unclosed  character  literal	123	None
2502	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  '9');  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  '9');  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex',  '9');	  	non-compiled	[CE]  unclosed  character  literal	123	None
2504	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('E',  'E')+  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('E',  'E')+  1;  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('E',  'E')+  1;	  	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	123	None
2505	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('E',  'E');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('E',  'E');  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('E',  'E');	  	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	123	None
2523	[BUG]  [BUGGY]  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  variable  dec  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str.substring(decPos  +  1,  str.length()  -  2);	      str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  dec  might  not  have  been  initialized	195	None
2524	[BUG]  [BUGGY]  str.substring(decPos  +  1,  str.length()  -  10);  [CE]  variable  dec  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str.substring(decPos  +  1,  str.length()  -  10);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str.substring(decPos  +  1,  str.length()  -  10);	      str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  dec  might  not  have  been  initialized	195	None
2543	[BUG]  [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	155	None
2561	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	541	None
2564	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	541	None
2582	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  '%');  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  '%');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression',  '%');	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
2583	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  '0');  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  '0');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression',  '0');	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
2584	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  '9');  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  '9');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression',  '9');	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
2602	[BUG]  [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1,  expPos);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1,  expPos);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1,  expPos);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
2603	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos);  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	mant  =  str.substring(decPos  +  1,  expPos);	      	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	65	None
2604	[BUG]  [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  String  mant  =  str.substring(decPos  +  1);  if(mant  ==  null)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
2623	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None
2624	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.booleanValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite()  ||(f.booleanValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite()  ||(f.booleanValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None
2642	[BUG]  [BUGGY]  str  =  str.substring(decPos  +  1,  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str  =  str.substring(decPos  +  1,  exponentPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str  =  str.substring(decPos  +  1,  exponentPos);	      str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  cannot  find  symbol  exponentPos	192	None
2664	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
2665	[BUG]  [BUGGY]  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
2701	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    str  =  str.substring(expPos  +  1,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	154	None
2703	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length())+    1;    dec  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
2704	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    dec  =  str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
2704	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp    =    str.substring(expPos    +    1,    str.length())+    1;    dec  =  str.substring(decPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
2705	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    dec  =  str.substring(decPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	154	1
2721	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  cannot  find  symbol  f  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  cannot  find  symbol  f	83	None
2722	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  [CE]  cannot  find  symbol  f  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  cannot  find  symbol  f	83	None
2724	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.charValue()  ==  0.0F  &&!allZeros)))  {  [CE]  cannot  find  symbol  f  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.charValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.charValue()  ==  0.0F  &&!allZeros)))  {	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  cannot  find  symbol  f	83	None
2761	[BUG]  [BUGGY]  if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!allZeros)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	276	None
2783	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	481	None
2784	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	481	None
2802	[BUG]  [BUGGY]  return  f  *  1  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  *  1  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  *  1  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    }    return    f;    	non-compiled	[CE]  ';'  expected	184	None
2804	[BUG]  [BUGGY]  return  0;(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  not  a  statement  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  0;(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  0;(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    }    return    f;    	non-compiled	[CE]  not  a  statement	184	None
2841	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0	      if(f.charAt(0)    ==    '0'    &&    f.charAt(str.length()    -    1)    ==    '9')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0    	non-compiled	[CE]  ')'  expected	544	None
2843	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0	      if(f.charAt(0)    ==    '0'    &&    f.charAt(str.length()    -    1)    ==    '9')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0    	non-compiled	[CE]  ')'  expected	544	None
2844	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length())  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0	      if(f.charAt(0)    ==    '0'    &&    f.charAt(str.length()    -    1)    ==    '9')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0    	non-compiled	[CE]  ')'  expected	544	None
2865	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str.substring(0,  str.length()  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	        str.substring(decPos    +    1,    str.length());    str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	194	1
2866	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str.substring(0,  str.length()  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    str.substring(0,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	194	1
2902	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	      if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  illegal  start  of  expression	272	None
2923	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e',  '0');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('e',  '0');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('e',  '0');	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	22	None
2924	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e',  '-');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('e',  '-');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('e',  '-');	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	22	None
2944	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	dec  =  str.substring(decPos);	      	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	125	1
2945	[BUG]  [BUGGY]  dec  =  str.substring(decPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos);	      	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	125	1
2963	[BUG]  [BUGGY]  if(f.charAt(1)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  'catch'  without  'try'  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(1)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(1)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  'catch'  without  'try'	545	None
2983	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()).toLowerCase();  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()).toLowerCase();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(decPos  +  1,  str.length()).toLowerCase();	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	365	None
4	[BUG]  [BUGGY]  str  =  str.substring(expPos  +  1,  str.length()).length();  [CE]  incompatible  types  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(expPos  +  1,  str.length()).length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(expPos  +  1,  str.length()).length();	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  incompatible  types	361	None
34	[BUG]  [BUGGY]  createInteger(str.substring(decPos));  [CE]  variable  dec  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str.substring(decPos));  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str.substring(decPos));	      createInteger(decPos);    	non-compiled	[CE]  variable  dec  might  not  have  been  initialized	485	None
64	[BUG]  [BUGGY]  if(!Character.isJavaIdentifierPart(mant))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(!Character.isJavaIdentifierPart(mant))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(!Character.isJavaIdentifierPart(mant))  {  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    if(dec    ==    null)    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None
94	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.'),  'e'p');  [CE]  <identifier>  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('.'),  'e'p');  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('.'),  'e'p');	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  <identifier>  expected	51	None
122	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
123	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.lastIndexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.lastIndexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  int  decPos  =  str.lastIndexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
124	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
125	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None
152	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  throw  new  NumberFormatException( " ");  }	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
153	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  break;  }  [CE]  break  outside  switch  or  loop  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  break;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  break;  }	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  break  outside  switch  or  loop	363	None
154	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  }	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	363	None
182	[BUG]  [BUGGY]  if(expPos  >  -1)  }  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  }  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  }  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	483	None
183	[BUG]  [BUGGY]  if(expPos  >  -1)  [Delete]  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(expPos  >  -1)  [Delete]  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(expPos  >  -1)  [Delete]  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( "   ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	483	None
211	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  cannot  find  symbol  Float  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	  	non-compiled	[CE]  cannot  find  symbol  Float	275	None
213	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f.isInfinite())  {  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f.isInfinite())  {  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(f.isInfinite())  {  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
214	[BUG]  [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]      if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  if(f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	        if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    if(f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	  	non-compiled	[CE]  illegal  start  of  expression	275	None
242	[BUG]  [BUGGY]  str.substring(decPos  +  1,  str.indexOf('e')));  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str.substring(decPos  +  1,  str.indexOf('e')));  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str.substring(decPos  +  1,  str.indexOf('e')));	      str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  ';'  expected	195	None
243	[BUG]  [BUGGY]  str.substring(decPos  +  1,  str.indexOf('e'))  -  1);  [CE]  not  a  statement  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str.substring(decPos  +  1,  str.indexOf('e'))  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str.substring(decPos  +  1,  str.indexOf('e'))  -  1);	      str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	195	None
272	[BUG]  [BUGGY]  exp  =  str.charAt(expPos  +  1,  str.length());  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.charAt(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.charAt(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	155	None
273	[BUG]  [BUGGY]  exp  =  str.charAt(expPos  +  1,  str.length()  -  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.charAt(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.charAt(expPos  +  1,  str.length()  -  1);	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	155	None
302	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  illegal  start  of  expression	23	None
304	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValu  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValu  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValu	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  illegal  start  of  expression	23	None
363	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0FT  &&!allZeros)))  {  [CE]  ')'  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0FT  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0FT  &&!allZeros)))  {	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	45	None
393	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None
424	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos).  [CE]  <identifier>  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos).  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  expPos).	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  <identifier>  expected	124	None
482	[BUG]  [BUGGY]  Arrays.sort(str.substring(expPos  +  1,  str.length()));  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(expPos  +  1,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(expPos  +  1,  str.length()));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  Arrays	365	None
483	[BUG]  [BUGGY]  Arrays.sort(str.substring(expPos  +  1),  expPos);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(expPos  +  1),  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(expPos  +  1),  expPos);	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  Arrays	365	None
484	[BUG]  [BUGGY]  Arrays.sort(str.substring(expPos  +  1),  exp);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(expPos  +  1),  exp);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(expPos  +  1),  exp);	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  Arrays	365	None
543	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  '0'),  '9');  [CE]  <identifier>  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  '0'),  '9');  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  '0'),  '9');	      int    expPos    =    str.indexOf('    ',    '0');    	non-compiled	[CE]  <identifier>  expected	54	None
633	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
634	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  }  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  if(!allZeros)  }  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    if(!allZeros)  }  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None
662	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('  ')+  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  illegal  start  of  type	53	None
663	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')+  1,  nfxLen;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ')+  1,  nfxLen;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ')+  1,  nfxLen;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  illegal  start  of  type	53	None
664	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')+  1,  nfx;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ')+  1,  nfx;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ')+  1,  nfx;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  illegal  start  of  type	53	None
694	[BUG]  [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(0,  expPos);  if(mant  ==  null)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  String  mant  =  str.substring(0,  expPos);  if(mant  ==  null)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  String  mant  =  str.substring(0,  expPos);  if(mant  ==  null)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	65	None
754	[BUG]  [BUGGY]  str  =  str.substring(expPos  +  1,  str.length();  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(expPos  +  1,  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(expPos  +  1,  str.length();	      str    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	242	None
782	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createInteger(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createInteger(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createInteger(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	541	None
812	[BUG]  [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  -=  str.substring(0,  str.length()  -  1);	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	3	None
814	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length());  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  -=  str.substring(expPos  +  1,  str.length());	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	3	None
873	[BUG]  [BUGGY]  numDecimals  =  decimal.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  decimal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  decimal.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  decimal.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length();    //    get    number    of    digits    before    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  decimal	203	None
874	[BUG]  [BUGGY]  numDecimal  =  str.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  numDecimal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimal  =  str.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimal  =  str.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length();    //    get    number    of    digits    before    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  numDecimal	203	None
902	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  >>  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  >>  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  >>	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	545	None
903	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	545	None
904	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  >>  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  >>  return  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  >>  return  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  illegal  start  of  expression	545	None
964	[BUG]  [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  for  precision  floating  point  numbers;  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  for  precision  floating  point  numbers;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  for  precision  floating  point  numbers;	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	62	None
992	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  +  1,  expPos  +  2);	  dec    =    str.substring(decPos    +    1,    expPos    +    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	424	1
993	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  2);	  dec    =    str.substring(decPos    +    1,    expPos    +    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	424	1
1023	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createBigDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createBigDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	175	None
1024	[BUG]  [BUGGY]  unless(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  unless(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	unless(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  ';'  expected	175	None
1053	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None
1112	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	125	1
1113	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	125	1
1113	[BUG]  [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }	      	non-compiled	[CE]  'else'  without  'if'	125	None
1114	[BUG]  [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  expPos)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  'else'  without  'if'	125	None
1204	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  xYears);  [CE]  cannot  find  symbol  xYears  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  xYears);  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  +  1,  xYears);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	non-compiled	[CE]  cannot  find  symbol  xYears	94	None
1264	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp;  [CE]  ')'  expected  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp;  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp;	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  ')'  expected	103	None
1293	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(decPos  >=  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(expPos  >  -1)  {  if(decPos  >=  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(expPos  >  -1)  {  if(decPos  >=  expPos)  {  throw  new  NumberFormatException( " ");  }	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  illegal  start  of  expression	64	None
1324	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [CE]  ')'  expected  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(!(f.isInfinite()  ||(f.doubleValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  ')'  expected	83	None
1353	[BUG]  [BUGGY]  return  f  =  Float.parseFloat(mu);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.parseFloat(mu);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.parseFloat(mu);	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	63	None
1354	[BUG]  [BUGGY]  return  f  =  Float.parseFloat(mapping);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.parseFloat(mapping);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.parseFloat(mapping);	  numDecimals    =    str.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	63	None
1414	[BUG]  [BUGGY]  String  ep  =  str.substring(0,  expPos);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  ep  =  str.substring(0,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  ep  =  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	365	None
1443	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  >>  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  >>  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  >>	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	543	None
1444	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  <<  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  <<  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  <<	      if(f.charAt(0)    ==    '-')    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  illegal  start  of  expression	543	None
1502	[BUG]  [BUGGY]  return  f  =  createInteger(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  =  createInteger(str);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  createInteger(str);	  return    f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	322	None
1503	[BUG]  [BUGGY]  return  f  =  createFlat(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  =  createFlat(str);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  createFlat(str);	  return    f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	322	None
1563	[BUG]  [BUGGY]  return  f,  butler.numDecimal;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f,  butler.numDecimal;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f,  butler.numDecimal;	  return    f.length;    	non-compiled	[CE]  ';'  expected	323	None
1564	[BUG]  [BUGGY]  return  f.numDecimal;  [CE]  cannot  find  symbol  numDecimal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f.numDecimal;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.numDecimal;	  return    f.length;    	non-compiled	[CE]  cannot  find  symbol  numDecimal	323	None
1594	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  throw  new  NumberFormatException( " ");  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	243	None
1624	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nfxLen);  [CE]  cannot  find  symbol  nfxLen  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nfxLen);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1,  nfxLen);	  	non-compiled	[CE]  cannot  find  symbol  nfxLen	123	None
1625	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nFemExpPos);  [CE]  cannot  find  symbol  nFemExpPos  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1,  nFemExpPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1,  nFemExpPos);	  	non-compiled	[CE]  cannot  find  symbol  nFemExpPos	123	None
1652	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  expPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	String  str  =(str  ==  null)?  null  :  str.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	45	None
1654	[BUG]  [BUGGY]  String  str  =  character.substring(0,  expPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  String  str  =  character.substring(0,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	String  str  =  character.substring(0,  expPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	45	None
1684	[BUG]  [BUGGY]  int  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [CE]  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  int  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	int  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	111	None
1713	[BUG]  [BUGGY]  int  expPos  =  str.length()  --  1;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.length()  --  1;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.length()  --  1;	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0    	non-compiled	[CE]  ';'  expected	24	None
1742	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [Delete]  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    [Delete]	  	non-compiled	[CE]  illegal  start  of  expression	93	None
1744	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  <  decPos)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  <  decPos)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  <  decPos)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
1774	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f  ==  null)  {  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f  ==  null)  {  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None
1803	[BUG]  [BUGGY]  else  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  'else'  without  'if'  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  else  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	else  if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	      if(f!=    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    }    	non-compiled	[CE]  'else'  without  'if'	112	None
1833	[BUG]  [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(expPos  +  1,  str.length()  -  1);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	364	None
1862	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('e')+  1;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('e')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.indexOf('e')+  1;	  	non-compiled	[CE]  illegal  start  of  expression	333	None
1863	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('exp')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('exp')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.indexOf('exp')+  1;	  	non-compiled	[CE]  unclosed  character  literal	333	None
1864	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.length()  +  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.length()  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	333	None
1865	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length()    +    1)    {    int  expPos  =  str.indexOf('Ex',  'P')+  1;	  	non-compiled	[CE]  unclosed  character  literal	333	None
1893	[BUG]  [BUGGY]  if(dec.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(dec.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(dec.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createLong(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	542	None
1894	[BUG]  [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  }  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  }  f;  }  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  }  f;  }	      if(f.charAt(0)    ==    '-')    {    f    =    createLong(str);    if(!(f.isInfinite()    ||    (f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  illegal  start  of  expression	542	None
1924	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).length();  [CE]  incompatible  types  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  str  =  str.substring(expPos  +  1,  str.length()).length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    str  =  str.substring(expPos  +  1,  str.length()).length();	  	non-compiled	[CE]  incompatible  types	362	None
1952	[BUG]  [BUGGY]  createInteger(str.length(),  decPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str.length(),  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str.length(),  decPos);	      createInteger(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	482	None
1953	[BUG]  [BUGGY]  createInteger(str.length(),  decPos  +  1);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str.length(),  decPos  +  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str.length(),  decPos  +  1);	      createInteger(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	482	None
1981	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    str  =  str.substring(expPos  +  1,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	71	None
1982	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  exp  ==  null)  {  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  exp  ==  null)  {  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  }  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  exp  ==  null)  {  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None
1983	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  }  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None
1984	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  expPos)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  expPos)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    if(dec  ==  null)  {  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  expPos)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None
1985	[BUG]  [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  f  =  str.substring(0,  str.length()  -  1);  if(f.encodeAsString(str.charAt(0)))  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      exp  =  str.substring(0,  str.length()  -  1);  if(dec  ==  null)  {  String  f  =  str.substring(0,  str.length()  -  1);  if(f.encodeAsString(str.charAt(0)))  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        exp    =    str.substring(0,    str.length()    -    1);    if(dec  ==  null)  {  String  f  =  str.substring(0,  str.length()  -  1);  if(f.encodeAsString(str.charAt(0)))  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None
2042	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  allZeros);  [CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  allZeros);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  allZeros);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(expPos);    	non-compiled	[CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;	162	None
2044	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  too);  [CE]  cannot  find  symbol  too  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  too);  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos,  too);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(expPos);    	non-compiled	[CE]  cannot  find  symbol  too	162	None
2074	[BUG]  [BUGGY]  if(!Character.isJavaIdentifierPart(mant))  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(!Character.isJavaIdentifierPart(mant))  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(!Character.isJavaIdentifierPart(mant))  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	394	None
2104	[BUG]  [BUGGY]  numDecimals  =  mant.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimals  =  mant.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  mant.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	64	None
2133	[BUG]  [BUGGY]  return  f  =  Float.valueOf(null);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.valueOf(null);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.valueOf(null);	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	62	None
2134	[BUG]  [BUGGY]  return  f  =  Float.valueOf(mappingPointer);  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f  =  Float.valueOf(mappingPointer);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f  =  Float.valueOf(mappingPointer);	  numDecimals    =    str.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	62	None
2161	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
2162	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
2163	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
2164	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
2165	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    +    1);    if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	423	None
2223	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	172	None
2224	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  }  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  }  return  createDecimal(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  }  return  createDecimal(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	172	None
2251	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  createInteger(decPos  +  1,  str.length()  -  1);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  createInteger(decPos  +  1,  str.length()  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    str  =  createInteger(decPos  +  1,  str.length()  -  1);	  	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	194	None
2252	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  'else'  without  'if'	194	None
2254	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1));  }  [CE]  'else'  without  'if'  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1));  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1));  }	  	non-compiled	[CE]  'else'  without  'if'	194	None
2255	[BUG]  [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  createInteger(decPos  +  1,  str.length());  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      str.substring(decPos  +  1,  str.length());  str  =  createInteger(decPos  +  1,  str.length());  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        str.substring(decPos    +    1,    str.length());    str  =  createInteger(decPos  +  1,  str.length());	  	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	194	None
2282	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1);  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1);  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	int  expPos  =  str.indexOf('  ',  expPos  +  1);	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	43	None
2313	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(expPos  >  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(expPos  >  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(expPos  >  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None
2342	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1,  numDecimal;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1,  numDecimal;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('e')+  1,  numDecimal;	      int    expPos    =    str.lastIndexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None
2344	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1,  nfxLen;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('e')+  1,  nfxLen;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('e')+  1,  nfxLen;	      int    expPos    =    str.lastIndexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None
2374	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " "));  }  [CE]  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " "));  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " "));  }	      if(mant    ==    null)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	163	None
2432	[BUG]  [BUGGY]  int  expPos  =(expPos  ==  null?  str.length()  :  expPos);  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =(expPos  ==  null?  str.length()  :  expPos);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =(expPos  ==  null?  str.length()  :  expPos);	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	21	None
2433	[BUG]  [BUGGY]  int  expPos  =(expPos  ==  0)?  str.length()  :  expPos;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =(expPos  ==  0)?  str.length()  :  expPos;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =(expPos  ==  0)?  str.length()  :  expPos;	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	21	None
2434	[BUG]  [BUGGY]  int  expPos  =(expPos  ==  null)?  str.length()  :  expPos;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =(expPos  ==  null)?  str.length()  :  expPos;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =(expPos  ==  null)?  str.length()  :  expPos;	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f;    }    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	21	None
2462	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  f  =  createFloat(str);  if(f.length()  ==  0)  [CE]  illegal  start  of  expression  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  f  =  createFloat(str);  if(f.length()  ==  0)  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  f  =  createFloat(str);  if(f.length()  ==  0)	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None
2463	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  consulted  f  =  createFloat(str);  if(f.length()  ==  0)  [CE]  not  a  statement  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  consulted  f  =  createFloat(str);  if(f.length()  ==  0)  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  consulted  f  =  createFloat(str);  if(f.length()  ==  0)	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	2	None
2464	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  aff  =  createFloat(str);  if(f.length()  ==  0)  {  [CE]  'catch'  without  'try'  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  aff  =  createFloat(str);  if(f.length()  ==  0)  {  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  aff  =  createFloat(str);  if(f.length()  ==  0)  {	      Float    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(f.length()    ==    0)    {    	non-compiled	[CE]  'catch'  without  'try'	2	None
2554	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length()  -  1);	      str    =    str.substring(0,    str.length()    -    1);    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	174	None
2582	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  cannot  assign  a  value  to  final  variable  expPos  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  1);	      expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expPos	173	None
2583	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp  =  str.substring(0,  str.length()  -  1);	      expPos    =    str.substring(0,    str.length()    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	173	1
2584	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  str.length()  -  1);	      expPos    =    str.substring(0,    str.length()    -    1);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	173	1
2584	[BUG]  [BUGGY]  expPos  =  str.substring(expPos,  str.length()  -  1);  [CE]  cannot  assign  a  value  to  final  variable  expPos  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(expPos,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(expPos,  str.length()  -  1);	      expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expPos	173	None
2613	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >>  decPos)  {  throw  new  NumberFormatException( " ");  }	      if(mant    ==    null)    {    if(expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	165	None
2673	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	        str.substring(0,    str.length()    -    1);    str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
2674	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str.substring(expPos  +  1,  str.length()  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	73	1
2675	[BUG]  [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]      str.substring(0,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	        str.substring(0,    str.length()    -    1);    str  =  str.substring(expPos  +  1,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	73	None
2703	[BUG]  [BUGGY]  str  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  str  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	str  =  str.substring(decPos  +  1,  expPos  -  1);	      str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	192	None
2732	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  return  createBigDecimal(str.substring(expPos  +  1,  str.length()  -  1);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  return  createBigDecimal(str.substring(expPos  +  1,  str.length()  -  1);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  return  createBigDecimal(str.substring(expPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  ')'  expected	362	None
2733	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  return  createInteger(str);  }  [CE]  'else'  without  'if'  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  return  createInteger(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  return  createInteger(str);  }	  	non-compiled	[CE]  'else'  without  'if'	362	None
2734	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  expPos  <  str.length())  {  return  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  expPos  <  str.length())  {  return  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  if(dec  ==  null  &&  expPos  <  str.length())  {  return	  	non-compiled	[CE]  illegal  start  of  expression	362	None
2735	[BUG]  [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  return  createInteger(str);  }  [CE]  'else'  without  'if'  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]      dec  =  str.substring(0,  expPos);  if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  return  createInteger(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	        dec    =    str.substring(0,    expPos);    if(dec  ==  null)  {  dec  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  return  createInteger(str);  }	  	non-compiled	[CE]  'else'  without  'if'	362	None
2763	[BUG]  [BUGGY]  createInteger(str.substring(decPos  +  1),  expPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  createInteger(str.substring(decPos  +  1),  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	createInteger(str.substring(decPos  +  1),  expPos);	  dec    =    str.substring(decPos    +    1    -    1);    	non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	124	None
2791	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.length();	  	non-compiled	[CE]  illegal  start  of  expression	84	None
2792	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('e')+  1;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('e')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('e')+  1;	  	non-compiled	[CE]  illegal  start  of  expression	84	None
2793	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.length()  -  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.length()  -  1;	  	non-compiled	[CE]  illegal  start  of  expression	84	None
2794	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('Ex',  'P')+  1;	  	non-compiled	[CE]  unclosed  character  literal	84	None
2795	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ',  'expPos  +  1);  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('  ',  'expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('  ',  'expPos  +  1);	  	non-compiled	[CE]  unclosed  character  literal	84	None
2851	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  [Delete]  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	[Delete]	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	82	None
2853	[BUG]  [BUGGY]  if(f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	82	None
2881	[BUG]  [BUGGY]  return  f  >=  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >=  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >=  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    }    return    f;    	non-compiled	[CE]  ';'  expected	184	None
2882	[BUG]  [BUGGY]  return  f  ==  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  ==  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  ==  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    }    return    f;    	non-compiled	[CE]  ';'  expected	184	None
2883	[BUG]  [BUGGY]  return  f  >  0  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    }    return    f;    	non-compiled	[CE]  ';'  expected	184	None
2884	[BUG]  [BUGGY]  return  f  <  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  <  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  <  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    }    return    f;    	non-compiled	[CE]  ';'  expected	184	None
2972	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')-  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')-  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.lastIndexOf('  ')-  1;	      int    expPos    =    str.indexOf('    ')-    1;    	non-compiled	[CE]  illegal  start  of  type	55	None
2974	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')-  1,  nfxLen;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ')-  1,  nfxLen;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ')-  1,  nfxLen;	      int    expPos    =    str.indexOf('    ')-    1;    	non-compiled	[CE]  illegal  start  of  type	55	None
3002	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
3003	[BUG]  [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1);  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1);  }	      dec    =    str.substring(decPos    +    1,    expPos);    	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	45	1
3003	[BUG]  [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  break;  }  [CE]  break  outside  switch  or  loop  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  break;  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  break;  }	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  break  outside  switch  or  loop	45	None
3004	[BUG]  [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  return;  }  [CE]  missing  return  value  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  return;  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  return;  }	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  missing  return  value	45	None
3034	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length())-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  str.length())-  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  str.length())-  1;	      str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	171	None
3064	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length())-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0,  str.length())-  1;  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0,  str.length())-  1;	      exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	72	None
3094	[BUG]  [BUGGY]  numDecimal  =  mant.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  numDecimal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  numDecimal  =  mant.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimal  =  mant.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	  numDecimals    =    decimal.length();    //    get    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  numDecimal	453	None
3124	[BUG]  [BUGGY]  str  =  str.substring(0,  str.indexOf('n'));  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str  =  str.substring(0,  str.indexOf('n'));  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str  =  str.substring(0,  str.indexOf('n'));	      str    =    str.substring(0,    strPos);    	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	263	None
3154	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(0,  expPos  +  1,  str.length()  -  1);	      dec    =    str.substring(0,    expPos);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	363	None
3182	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression')-  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression')-  1;  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression')-  1;	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
3183	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  'p');  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  'p');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression',  'p');	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
3184	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  'P');  [CE]  unclosed  character  literal  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  int  expPos  =  str.lastIndexOf('Expression',  'P');  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	int  expPos  =  str.lastIndexOf('Expression',  'P');	      if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    f    =    createFloat(str);    if(!(f.isInfinite()    ||(f.floatValue()    ==    	non-compiled	[CE]  unclosed  character  literal	23	None
3243	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str.substring(expPos  +  1,  str.length()  -  1)+  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str.substring(expPos  +  1,  str.length()  -  1)+  1);  }  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str.substring(expPos  +  1,  str.length()  -  1)+  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	154	None
3245	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1,  str.length()  -  1)+  1;  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1,  str.length()  -  1)+  1;  }  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length())+    1;    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1,  str.length()  -  1)+  1;  }	  	non-compiled	[CE]  ')'  expected	154	None
3394	[BUG]  [BUGGY]  return  f  }  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  }  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  }  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	  return    f    >    0    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    f;    	non-compiled	[CE]  ';'  expected	182	None
3424	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()),  expPos  +  1;  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()),  expPos  +  1;  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()),  expPos  +  1;	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  ';'  expected	155	None
3454	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  }  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  }	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	82	None
3484	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }	  	non-compiled	[CE]  cannot  find  symbol  f	44	None
3485	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.intValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(!(f.isInfinite()  ||  (f.intValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(!(f.isInfinite()  ||  (f.intValue()  ==  0.0F  &&!allZeros)))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None
3543	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()),  expPos  +  1);  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()),  expPos  +  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()),  expPos  +  1);	  exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	153	None
3544	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()),  expPos  -  1);  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()),  expPos  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()),  expPos  -  1);	  exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	153	None
3574	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >>  str.length()  -  1)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  >>  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  >>  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    str.length()    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	83	None
3603	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	395	None
3604	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  if(dec  ==  null)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	if(dec  ==  null)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(expPos    >    -1)    {    if(expPos    <    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	395	None
3634	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.infinite()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(!(f.isInfinite()  ||  (f.infinite()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	if(!(f.isInfinite()  ||  (f.infinite()  ==  0.0F  &&!allZeros)))  {	      int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  illegal  start  of  expression	43	None
3693	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  'No')+  1;  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  'No')+  1;  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex',  'No')+  1;	  	non-compiled	[CE]  unclosed  character  literal	123	None
3694	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  decPos);  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  decPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex',  decPos);	  	non-compiled	[CE]  unclosed  character  literal	123	None
3695	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [CE]  unclosed  character  literal  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    int  expPos  =  str.indexOf('Ex',  'P')+  1;	  	non-compiled	[CE]  unclosed  character  literal	123	None
3723	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  'e')-  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  'e')-  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  'e')-  1;	      int    expPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	52	None
3724	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  'e')+  1;  [CE]  illegal  start  of  type  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  'e')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	int  expPos  =  str.indexOf('  ',  'e')+  1;	      int    expPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	52	None
3783	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createNumber(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createNumber(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  return  createNumber(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  expression	244	None
3784	[BUG]  [BUGGY]  unless(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  unless(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	unless(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }	      if(dec    ==    null)    {    if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createNumber(str);    }    	non-compiled	[CE]  ';'  expected	244	None
3812	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()));  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(0,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(0,  str.length()));	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol  Arrays	364	None
3813	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()),  exp);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(0,  str.length()),  exp);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(0,  str.length()),  exp);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol  Arrays	364	None
3814	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()),  expPos);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Arrays.sort(str.substring(0,  str.length()),  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Arrays.sort(str.substring(0,  str.length()),  expPos);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  cannot  find  symbol  Arrays	364	None
3843	[BUG]  [BUGGY]  str.substring(0,  str.length()),  expPos);  [CE]  ';'  expected  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()),  expPos);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()),  expPos);	      str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	74	None
3963	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar!=  '  [CE]  illegal  line  end  in  character  literal  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar!=  '  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar!=  '	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  illegal  line  end  in  character  literal	3	None
3964	[BUG]  [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar  ==  '  [CE]  illegal  line  end  in  character  literal  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar  ==  '  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar  ==  '	  exp    -=    str.substring(0,    expPos);    	non-compiled	[CE]  illegal  line  end  in  character  literal	3	None
3991	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.length();	  	non-compiled	[CE]  illegal  start  of  expression	81	None
3992	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('e')+  1;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('e')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('e')+  1;	  	non-compiled	[CE]  illegal  start  of  expression	81	None
3993	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.length()  -  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.length()  -  1;	  	non-compiled	[CE]  illegal  start  of  expression	81	None
3994	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('Ex',  'P')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('Ex',  'P')+  1;	  	non-compiled	[CE]  unclosed  character  literal	81	None
3995	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('exp')+  1;  [CE]  unclosed  character  literal  [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  int  expPos  =  str.indexOf('exp')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos    >    -1    &&    expPos    <    str.length())    {    int  expPos  =  str.indexOf('exp')+  1;	  	non-compiled	[CE]  unclosed  character  literal	81	None
4022	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
4023	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
4024	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.lastIndexOf('$',  expPos);  if(decPos  <  decPos)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.lastIndexOf('$',  expPos);  if(decPos  <  decPos)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1)  {  int  decPos  =  str.lastIndexOf('$',  expPos);  if(decPos  <  decPos)  {  dec  =  str.substring(decPos  +  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
4025	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    -    1,    expPos);    if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	284	None
4083	[BUG]  [BUGGY]  f  =  createInteger(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  f  =  createInteger(str);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	f  =  createInteger(str);	      f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	1	None
4084	[BUG]  [BUGGY]  f  =  createFloat(str  +  1);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  f  =  createFloat(str  +  1);  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	f  =  createFloat(str  +  1);	      f    =    createFloat(str);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	1	None
4114	[BUG]  [BUGGY]  str.substring(0,  str.length()  -  1,  str.length()  -  expPos);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {    [BUGGY]  str.substring(0,  str.length()  -  1,  str.length()  -  expPos);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	str.substring(0,  str.length()  -  1,  str.length()  -  expPos);	      str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	75	None
4143	[BUG]  [BUGGY]  return  f.numDecimal;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.numDecimal;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.numDecimal;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
4144	[BUG]  [BUGGY]  return  f.numElement;  [CE]  cannot  find  symbol  f  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);    [BUGGY]  return  f.numElement;  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	return  f.numElement;	  numDecimals    =    dec.length();    //    gets    number    of    digits    past    the    decimal    to    ensure    no    loss    of    precision    for    floating    point    numbers.    	non-compiled	[CE]  cannot  find  symbol  f	64	None
4171	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str.substring(expPos  +  1,  str.length()  -  1);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str.substring(expPos  +  1,  str.length()  -  1);  }  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDouble(str.substring(expPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  ')'  expected	152	None
4172	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1,  str.length()  -  1);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1,  str.length()  -  1);  }  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str.substring(expPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  ')'  expected	152	None
4174	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str.substring(expPos  +  1,  str.length()  -  1);  }  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str.substring(expPos  +  1,  str.length()  -  1);  }  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str.substring(expPos  +  1,  str.length()  -  1);  }	  	non-compiled	[CE]  ')'  expected	152	None
4175	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp    =    str.substring(expPos    +    1,    str.length()    -    1);    str  =  str.substring(expPos  +  1,  str.length()  -  1);	  	non-compiled	[CE]  final  parameter  str  may  not  be  assigned	152	None
4201	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0	      	non-compiled	[CE]  ')'  expected	35	None
4204	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  [BUGGY]    return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  	      	non-compiled	[CE]  illegal  start  of  expression	35	None
4235	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1  -  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	123	1
4236	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  dec  =  str.substring(decPos  +  1  -  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1    -    1);    dec  =  str.substring(decPos  +  1  -  1);	  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	123	1
4262	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(f,  exp);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(f,  exp);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(f,  exp);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	183	None
4263	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f),  Float.parseFloat(f,  exp);  [CE]  :  expected  [CONTEXT]      }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    [BUGGY]  return  f  >  0.0?  Float.parseFloat(f),  Float.parseFloat(f,  exp);  [BUGGY]    }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f),  Float.parseFloat(f,  exp);	  return    f    >    0.0?    Float.parseFloat(f):    Float.parseFloat(f);    	non-compiled	[CE]  :  expected	183	None
4321	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
4322	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
4323	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
4324	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
4325	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec    =    str.substring(decPos    +    1,    expPos    -    1);    if(expPos  >  -1)  {  int  decPos  =  str.indexOf('.');  if(decPos  <  expPos)  {  throw  new  NumberFormatException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None
4351	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  [Delete]  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	[Delete]	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  illegal  start  of  expression	115	None
4353	[BUG]  [BUGGY]  if(f  ==  null)  {  If(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  ';'  expected  [CONTEXT]    }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);    [BUGGY]  if(f  ==  null)  {  If(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(f  ==  null)  {  If(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }	      if(f    ==    null)    {    if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    Float;    }    	non-compiled	[CE]  ';'  expected	115	None
4414	[BUG]  [BUGGY]  str  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  str  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	str  =  str.substring(0,  expPos  +  1,  str.length()  -  1);	      str    =    str.substring(0,    expPos);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	361	None
4444	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()));  [CE]  ';'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	dec  =  str.substring(decPos  +  1,  str.length()));	      dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	365	None
