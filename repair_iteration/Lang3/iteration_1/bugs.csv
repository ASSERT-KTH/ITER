bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
3	[BUG]  [BUGGY]  exp  -=  str.substring(0,  expPos);  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]  exp  -=  str.substring(0,  expPos);  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  -=  str.substring(0,  expPos);	exp  =  null;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	3	None
5	[BUG]  [BUGGY]    [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	  	exp  =  null;  	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	3	None
21	[BUG]  [BUGGY]    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }		non-compiled	[CE]  illegal  start  of  expression	8	None
22	[BUG]  [BUGGY]    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }		non-compiled	[CE]  illegal  start  of  expression	8	None
23	[BUG]  [BUGGY]    if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [CE]  illegal  start  of  expression  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  		non-compiled	[CE]  illegal  start  of  expression	8	None
24	[BUG]  [BUGGY]    if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [CE]  illegal  start  of  expression  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0		non-compiled	[CE]  illegal  start  of  expression	8	None
33	[BUG]  [BUGGY]  if(!f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  illegal  start  of  expression  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]  if(!f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  illegal  start  of  expression	5	None
35	[BUG]  [BUGGY]    [CE]  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	  	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  	5	None
41	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
42	[BUG]  [BUGGY]    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
43	[BUG]  [BUGGY]    int  decPos  =  str.indexOf('  ',  expPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    int  decPos  =  str.indexOf('  ',  expPos);  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    int  decPos  =  str.indexOf('  ',  expPos);		non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	10	None
44	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	    dec  =  str.substring(decPos  +  1,  expPos);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	10	1
45	[BUG]  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    dec  =  str.substring(decPos  +  1,  expPos);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	10	1
45	[BUG]  [BUGGY]    String  str  =  str.substring(0,  expPos);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    String  str  =  str.substring(0,  expPos);  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    String  str  =  str.substring(0,  expPos);		non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	10	None
51	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('.');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.indexOf('.');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.indexOf('.');		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
52	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('  ');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.indexOf('  ');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.indexOf('  ');		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
53	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('  ')+  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.indexOf('  ')+  1;  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.indexOf('  ')+  1;		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
54	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('  ',  '0');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.indexOf('  ',  '0');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.indexOf('  ',  '0');		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
55	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('  ')-  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.indexOf('  ')-  1;  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.indexOf('  ')-  1;		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
61	[BUG]  [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  dec.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
62	[BUG]  [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  str.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
63	[BUG]  [BUGGY]  numDecimals  =  str.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  str.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  str.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
64	[BUG]  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
65	[BUG]  [BUGGY]    [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	  	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
71	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	    exp  =  str.substring(0,  str.length()  -  1);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	4	1
72	[BUG]  [BUGGY]    exp  =  str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    exp  =  str.substring(0,  str.length()  -  1);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	4	1
72	[BUG]  [BUGGY]    str  =  str.substring(0,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    str  =  str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    str  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	4	None
73	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	add	    str.substring(0,  str.length()  -  1);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	4	1
74	[BUG]  [BUGGY]    str.substring(0,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    str.substring(0,  str.length()  -  1);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	4	1
75	[BUG]  [BUGGY]    str.substring(0,  str.length()  -  1,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    str.substring(0,  str.length()  -  1,  str.length());		non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	4	None
81	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	add	if(expPos  >  -1  &&  expPos  <  str.length())  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	15	1
82	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	15	1
83	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  [CE]  ')'  expected  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  1)  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	non-compiled	[CE]  ')'  expected	15	None
84	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	add	if(expPos  >  1  &&  expPos  <  str.length())  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	15	1
85	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(expPos  >  1  &&  expPos  <  str.length())  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  1  &&  expPos  <  str.length())  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	15	1
93	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  +  1,  expPos  -  1);	dec  =  str.substring(decPos  +  1,  expPos);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	9	1
94	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  -  1);	dec  =  str.substring(decPos  +  1,  expPos);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	9	1
94	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  exponentPos);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  +  1,  exponentPos);	dec  =  str.substring(decPos  +  1,  expPos);  	non-compiled	[CE]  cannot  find  symbol  exponentPos	9	None
101	[BUG]  [BUGGY]    if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1);  }		non-compiled	[CE]  illegal  start  of  expression	14	None
102	[BUG]  [BUGGY]    if(dec  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(dec  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(dec  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(decPos  +  1);  }		non-compiled	[CE]  illegal  start  of  expression	14	None
103	[BUG]  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);		non-compiled	[CE]  variable  exp  might  not  have  been  initialized	14	None
105	[BUG]  [BUGGY]    if(dec  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(dec  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(0,  decPos);  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(dec  ==  null)  {  if(expPos  <  dec.length())  {  dec  =  str.substring(0,  decPos);  }		non-compiled	[CE]  illegal  start  of  expression	14	None
111	[BUG]  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [CE]  variable  allZeros  is  already  defined  in  method  createNumber(String)  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);		non-compiled	[CE]  variable  allZeros  is  already  defined  in  method  createNumber(String)	6	None
112	[BUG]  [BUGGY]    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
113	[BUG]  [BUGGY]    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
114	[BUG]  [BUGGY]    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(f!=  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
115	[BUG]  [BUGGY]    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(f  ==  null)  {  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
123	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	dec  =  str.substring(decPos  +  1  -  1);	dec  =  str.substring(decPos  +  1);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	1	1
124	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]  dec  =  str.substring(decPos  +  1  -  1);  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1  -  1);	dec  =  str.substring(decPos  +  1);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	1	1
125	[BUG]  [BUGGY]    [CE]  variable  dec  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	  	dec  =  str.substring(decPos  +  1);  	non-compiled	[CE]  variable  dec  might  not  have  been  initialized	1	None
152	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp  =  str.substring(expPos  +  1,  str.length()  -  1);	exp  =  str.substring(expPos  +  1,  str.length());  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	17	1
153	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1);	exp  =  str.substring(expPos  +  1,  str.length());  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	17	1
154	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	exp  =  str.substring(expPos  +  1,  str.length())+  1;	exp  =  str.substring(expPos  +  1,  str.length());  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	17	1
155	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length())+  1;	exp  =  str.substring(expPos  +  1,  str.length());  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	17	1
155	[BUG]  [BUGGY]    [CE]  variable  exp  might  not  have  been  initialized  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	  	exp  =  str.substring(expPos  +  1,  str.length());  	non-compiled	[CE]  variable  exp  might  not  have  been  initialized	17	None
171	[BUG]  [BUGGY]    str  =  str.substring(0,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    str  =  str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    str  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	18	None
172	[BUG]  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDecimal(str);  }  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createDecimal(str);  }		non-compiled	[CE]  illegal  start  of  expression	18	None
173	[BUG]  [BUGGY]    expPos  =  str.substring(0,  str.length()  -  1);  [CE]  cannot  assign  a  value  to  final  variable  expPos  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    expPos  =  str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    expPos  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expPos	18	None
174	[BUG]  [BUGGY]    str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    str  =  str.substring(0,  str.length()  -  1);  dec  =  str.substring(decPos  +  1,  str.length());		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	18	None
175	[BUG]  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createBigDecimal(str);  }		non-compiled	[CE]  illegal  start  of  expression	18	None
182	[BUG]  [BUGGY]  return  f  >  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [CE]  ';'  expected  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f  >  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;	return  f;  	non-compiled	[CE]  ';'  expected	7	None
183	[BUG]  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(f);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(f);  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0.0?  Float.parseFloat(f):  Float.parseFloat(f);	return  f;  	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	7	None
184	[BUG]  [BUGGY]  return  f  >  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;  [CE]  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f  >  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  >  0  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  }  return  f;	return  f;  	non-compiled	[CE]  	7	None
192	[BUG]  [BUGGY]    str  =  str.substring(decPos  +  1,  expPos);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    str  =  str.substring(decPos  +  1,  expPos);  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    str  =  str.substring(decPos  +  1,  expPos);		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	2	None
194	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    str.substring(decPos  +  1,  str.length());  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	    str.substring(decPos  +  1,  str.length());		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	2	1
195	[BUG]  [BUGGY]    str.substring(decPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    str.substring(decPos  +  1,  str.length());  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    str.substring(decPos  +  1,  str.length());		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	2	1
1	[BUG]  [BUGGY]    f  =  createFloat(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    f  =  createFloat(str);  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    f  =  createFloat(str);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	8	None
2	[BUG]  [BUGGY]    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  {  [CE]  'catch'  without  'try'  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.length()  ==  0)  {		non-compiled	[CE]  'catch'  without  'try'	8	None
3	[BUG]  [BUGGY]    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar  [CE]  ')'  expected  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  f  =  createFloat(str);  if(f.getChar		non-compiled	[CE]  ')'  expected	8	None
4	[BUG]  [BUGGY]    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  variable  f  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    Float  f  =  createFloat(str);  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }		non-compiled	[CE]  variable  f  is  already  defined  in  method  createNumber(String)	8	None
21	[BUG]  [BUGGY]    int  expPos  =  str.length();  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.length();  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.length();		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
22	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('e');  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.lastIndexOf('e');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.lastIndexOf('e');		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
23	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('Expression');  [CE]  unclosed  character  literal  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.lastIndexOf('Expression');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.lastIndexOf('Expression');		non-compiled	[CE]  unclosed  character  literal	16	None
24	[BUG]  [BUGGY]    int  expPos  =  str.length()  -  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.length()  -  1;  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.length()  -  1;		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
25	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('e')+  1;  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.lastIndexOf('e')+  1;  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.lastIndexOf('e')+  1;		non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	16	None
43	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.booleanValue()  ==  0.0F  &&!allZeros)))  {  [CE]  cannot  find  symbol  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]  if(!(f.isInfinite()  ||  (f.booleanValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||  (f.booleanValue()  ==  0.0F  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  cannot  find  symbol	5	None
44	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	add	if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	5	1
45	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]  if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||  (f.longValue()  ==  0.0F  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	5	1
61	[BUG]  [BUGGY]    if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(decPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
63	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
64	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
65	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  >  -1)  {  if(decPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
82	[BUG]  [BUGGY]    if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(!allZeros)  {  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
83	[BUG]  [BUGGY]    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [CE]  illegal  start  of  expression  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!		non-compiled	[CE]  illegal  start  of  expression	6	None
84	[BUG]  [BUGGY]    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }  [CE]  'catch'  without  'try'  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(!allZeros)  {  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  f;  }		non-compiled	[CE]  'catch'  without  'try'	6	None
104	[BUG]  [BUGGY]  exp  =  str.substring(0,  strPos);  [CE]  cannot  find  symbol  strPos  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]  exp  =  str.substring(0,  strPos);  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	exp  =  str.substring(0,  strPos);	exp  =  null;  	non-compiled	[CE]  cannot  find  symbol  strPos	3	None
123	[BUG]  [BUGGY]    dec  =  str.substring(decPos  +  1,  exponentPos);  [CE]  cannot  find  symbol  exponentPos  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  exponentPos);  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    dec  =  str.substring(decPos  +  1,  exponentPos);		non-compiled	[CE]  cannot  find  symbol  exponentPos	2	None
124	[BUG]  [BUGGY]    createInteger(decPos,  str.substring(decPos  +  1));  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    createInteger(decPos,  str.substring(decPos  +  1));  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    createInteger(decPos,  str.substring(decPos  +  1));		non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	2	None
162	[BUG]  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos);  [CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos);  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(expPos);		non-compiled	[CE]  method  isAllZeros  in  class  NumberUtils  cannot  be  applied  to  given  types;	14	None
163	[BUG]  [BUGGY]    if(mant  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(mant  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(mant  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None
164	[BUG]  [BUGGY]    if(mant  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(decPos);  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(mant  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(decPos);  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(mant  ==  null)  {  if(expPos  >  -1)  {  dec  =  str.substring(decPos);  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None
165	[BUG]  [BUGGY]    if(mant  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(mant  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(mant  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None
202	[BUG]  [BUGGY]  numDecimals  =  dec.length()  -  1;  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  dec.length()  -  1;  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  dec.length()  -  1;  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
203	[BUG]  [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  dec.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  dec.length();  //  get  number  of  digits  before  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
204	[BUG]  [BUGGY]  numDecimals  =  dec.length()  +  1;  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  dec.length()  +  1;  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  dec.length()  +  1;  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
263	[BUG]  [BUGGY]    str  =  str.substring(0,  strPos);  [CE]  cannot  find  symbol  strPos  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    str  =  str.substring(0,  strPos);  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    str  =  str.substring(0,  strPos);		non-compiled	[CE]  cannot  find  symbol  strPos	4	None
265	[BUG]  [BUGGY]    String  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  variable  dec  is  already  defined  in  method  createNumber(String)  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    String  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    String  dec  =  str.substring(decPos  +  1,  str.length());		non-compiled	[CE]  variable  dec  is  already  defined  in  method  createNumber(String)	4	None
284	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  -  1,  expPos);	dec  =  str.substring(decPos  +  1,  expPos);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	9	1
285	[BUG]  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  -  1,  expPos);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  -  1,  expPos);	dec  =  str.substring(decPos  +  1,  expPos);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	9	1
302	[BUG]  [BUGGY]  if(dec  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(dec  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(dec  >  -1  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	15	None
322	[BUG]  [BUGGY]  return  f  =  createFloat(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f  =  createFloat(str);  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  createFloat(str);	return  f;  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	7	None
323	[BUG]  [BUGGY]  return  f.length;  [CE]  cannot  find  symbol  length  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f.length;  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.length;	return  f;  	non-compiled	[CE]  cannot  find  symbol  length	7	None
361	[BUG]  [BUGGY]    str  =  str.substring(0,  expPos);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    str  =  str.substring(0,  expPos);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    str  =  str.substring(0,  expPos);		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	18	None
362	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    dec  =  str.substring(0,  expPos);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	    dec  =  str.substring(0,  expPos);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	18	1
363	[BUG]  [BUGGY]    dec  =  str.substring(0,  expPos);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    dec  =  str.substring(0,  expPos);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    dec  =  str.substring(0,  expPos);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	18	1
363	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	    dec  =  str.substring(decPos  +  1,  str.length());		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	18	1
364	[BUG]  [BUGGY]    dec  =  str.substring(decPos  +  1,  str.length());  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    dec  =  str.substring(decPos  +  1,  str.length());		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	18	1
364	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	add	    dec  =  str.substring(decPos  +  1,  str.length()  -  1);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	18	1
365	[BUG]  [BUGGY]    dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    dec  =  str.substring(decPos  +  1,  str.length()  -  1);		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	18	1
365	[BUG]  [BUGGY]    String  dec  =  str.substring(0,  expPos);  [CE]  variable  dec  is  already  defined  in  method  createNumber(String)  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    String  dec  =  str.substring(0,  expPos);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    String  dec  =  str.substring(0,  expPos);		non-compiled	[CE]  variable  dec  is  already  defined  in  method  createNumber(String)	18	None
62	[BUG]  [BUGGY]  return  f  =  Float.valueOf(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f  =  Float.valueOf(str);  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  Float.valueOf(str);	return  f;  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	7	None
63	[BUG]  [BUGGY]  return  f  =  Float.parseFloat(str);  [CE]  cannot  assign  a  value  to  final  variable  f  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f  =  Float.parseFloat(str);  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f  =  Float.parseFloat(str);	return  f;  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  f	7	None
64	[BUG]  [BUGGY]  return  f.intValue;  [CE]  cannot  find  symbol  intValue  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]  return  f.intValue;  [BUGGY]  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	return  f.intValue;	return  f;  	non-compiled	[CE]  cannot  find  symbol  intValue	7	None
92	[BUG]  [BUGGY]    if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  <  decPos)  {  if(expPos  ==  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
93	[BUG]  [BUGGY]    if(expPos  <  decPos)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  <  decPos)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  <  decPos)  {  if(expPos  ==  0)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
94	[BUG]  [BUGGY]    if(expPos  <  decPos)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  <  decPos)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  <  decPos)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
95	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ")  + "  is  not  a  valid  number. ");  }  [CE]  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ")  + "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ")  + "  is  not  a  valid  number. ");  }		non-compiled	[CE]  	10	None
122	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('Ex')+  1;  [CE]  unclosed  character  literal  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.indexOf('Ex')+  1;  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.indexOf('Ex')+  1;		non-compiled	[CE]  unclosed  character  literal	16	None
123	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('Ex');  [CE]  unclosed  character  literal  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]    int  expPos  =  str.indexOf('Ex');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	    int  expPos  =  str.indexOf('Ex');		non-compiled	[CE]  unclosed  character  literal	16	None
241	[BUG]  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    str  =  str.substring(expPos  +  1,  str.length());		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	18	None
242	[BUG]  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    str  =  str.substring(expPos  +  1,  str.length()  -  1);		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	18	None
243	[BUG]  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	18	None
244	[BUG]  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	    if(dec  ==  null)  {  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createNumber(str);  }		non-compiled	[CE]  illegal  start  of  expression	18	None
272	[BUG]  [BUGGY]    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [CE]  cannot  find  symbol  Float  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  Float;  }		non-compiled	[CE]  cannot  find  symbol  Float	6	None
275	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	add	    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	6	1
276	[BUG]  [BUGGY]    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	    if(!(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }		compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	6	1
303	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0Flo  &&!allZeros)))  {  [CE]  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0Flo  &&!allZeros)))  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0Flo  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  	5	None
304	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0FT  &&!allZeros)))  {  [CE]  [CONTEXT]  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  [BUGGY]  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0FT  &&!allZeros)))  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	594	594	1	replace	if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0FT  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  	5	None
333	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	add	if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	15	1
334	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]    }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	570	570	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  +  1)  {	if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	15	1
361	[BUG]  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length());  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    str  =  str.substring(expPos  +  1,  str.length());		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	4	None
362	[BUG]  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  final  parameter  str  may  not  be  assigned  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    str  =  str.substring(expPos  +  1,  str.length()  -  1);		non-compiled	[CE]  final  parameter  str  may  not  be  assigned	4	None
364	[BUG]  [BUGGY]    Arrays.sort(str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  Arrays  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    Arrays.sort(str.substring(0,  str.length()  -  1));  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    Arrays.sort(str.substring(0,  str.length()  -  1));		non-compiled	[CE]  cannot  find  symbol  Arrays	4	None
365	[BUG]  [BUGGY]    Arrays.sort(str.substring(expPos  +  1));  [CE]  cannot  find  symbol  Arrays  [CONTEXT]  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  [BUGGY]    Arrays.sort(str.substring(expPos  +  1));  [BUGGY]  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	573	573	1	replace	    Arrays.sort(str.substring(expPos  +  1));		non-compiled	[CE]  cannot  find  symbol  Arrays	4	None
392	[BUG]  [BUGGY]    if(dec  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(dec  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(dec  ==  null)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None
394	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None
395	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	    if(expPos  >  -1)  {  if(expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None
423	[BUG]  [BUGGY]  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	add	dec  =  str.substring(decPos  +  1,  expPos  +  1);	dec  =  str.substring(decPos  +  1,  expPos);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	9	1
424	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1);	dec  =  str.substring(decPos  +  1,  expPos);  	compilable	  [FE]  AssertionError  testStringCreateNumberEnsureNoPrecisionLoss	9	1
452	[BUG]  [BUGGY]  numDecimals  =  mant.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  variable  mant  might  not  have  been  initialized  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  mant.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  mant.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  variable  mant  might  not  have  been  initialized	13	None
453	[BUG]  [BUGGY]  numDecimals  =  decimal.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [CE]  cannot  find  symbol  decimal  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  [BUGGY]  numDecimals  =  decimal.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	497	498	1	replace	numDecimals  =  decimal.length();  //  get  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.	numDecimals  =  dec.length();  //  gets  number  of  digits  past  the  decimal  to  ensure  no  loss  of  precision  for  floating  point  numbers.  }  else  {  	non-compiled	[CE]  cannot  find  symbol  decimal	13	None
481	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    if(expPos  >  -1)  {  if(expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  'else'  without  'if'	2	None
482	[BUG]  [BUGGY]    createInteger(decPos  +  1,  str.length()  -  1);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    createInteger(decPos  +  1,  str.length()  -  1);  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    createInteger(decPos  +  1,  str.length()  -  1);		non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	2	None
483	[BUG]  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    if(expPos  >  -1)  {  if(expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  'else'  without  'if'	2	None
485	[BUG]  [BUGGY]    createInteger(decPos);  [CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;  [CONTEXT]  if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  [BUGGY]    createInteger(decPos);  [BUGGY]  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	    createInteger(decPos);		non-compiled	[CE]  method  createInteger  in  class  NumberUtils  cannot  be  applied  to  given  types;	2	None
541	[BUG]  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  not  a  statement  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }		non-compiled	[CE]  not  a  statement	8	None
542	[BUG]  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [CE]  not  a  statement  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(f.charAt(0)  ==  '-')  {  f  =  createLong(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  f;  }		non-compiled	[CE]  not  a  statement	8	None
543	[BUG]  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  'catch'  without  'try'  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {		non-compiled	[CE]  'catch'  without  'try'	8	None
544	[BUG]  [BUGGY]    if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [CE]  ')'  expected  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(f.charAt(0)  ==  '0'  &&  f.charAt(str.length()  -  1)  ==  '9')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0		non-compiled	[CE]  ')'  expected	8	None
545	[BUG]  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [CE]  'catch'  without  'try'  [CONTEXT]    }  return  createBigInteger(str);  }  final  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  final  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [BUGGY]    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }  [BUGGY]  return  f;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  try  {  final  Double  d  =  createDouble(str);  if  (!(d.isInfinite()  ||  (d.doubleValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	595	595	1	replace	    if(f.charAt(0)  ==  '-')  {  f  =  createFloat(str);  if(!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  f;  }		non-compiled	[CE]  'catch'  without  'try'	8	None
