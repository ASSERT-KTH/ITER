bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  1);	  String    dec    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	7	None	replace
2	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos,  expPos  +  1,  str.length());	  exp    =    str.substring(Expression.MIN_VALUE,    expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	42	None	replace
3	[BUG]  [BUGGY]  exp  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length()  -  1);	  exp    =    str.substring(Expression.MIN_VALUE,    expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	42	None	replace
4	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  expPos  +  1,  str.length());	  exp    =    str.substring(Expression.MIN_VALUE,    expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	42	None	replace
5	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  -  1);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	18	None	replace
6	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  -  2);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	18	None	replace
7	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  +  1);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	18	None	replace
8	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
9	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
10	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
11	[BUG]  [BUGGY]  if(expPos  >  0)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  0)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  0)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
12	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length();  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  str.length();	  exp    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
13	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  2);  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  +  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  str.length()  +  2);	  exp    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
14	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(decPos  +  1,  str.length()  -  1);	  String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	32	None	replace
15	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos.length());  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(decPos  +  1,  expPos.length());	  String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	32	None	replace
16	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  +  1);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(decPos  +  1,  str.length()  +  1);	  String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	32	None	replace
17	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1).trim();  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1).trim();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1).trim();	  exp    =    str.substring(expPos    +    1,    str.length()).trim();    	non-compiled	[CE]  'catch'  without  'try'	30	None	replace
18	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2).trim();  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2).trim();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  2).trim();	  exp    =    str.substring(expPos    +    1,    str.length()).trim();    	non-compiled	[CE]  'catch'  without  'try'	30	None	replace
19	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  -  1);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	47	None	replace
20	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  -  2);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	47	None	replace
21	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  +  1);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	47	None	replace
22	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  *  2);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  *  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  *  2);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	47	None	replace
23	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  str.length()  *  1  +  1);	  String    exp    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  'catch'  without  'try'	43	None	replace
24	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  2);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  str.length()  +  2);	  String    exp    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	29	None	replace
25	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
26	[BUG]  [BUGGY]  short  expPos  =  str.length()  -  1;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  short  expPos  =  str.length()  -  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	short  expPos  =  str.length()  -  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
27	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos)-  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos)-  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos)-  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')-    1);    	non-compiled	[CE]  'catch'  without  'try'	45	None	replace
28	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')/  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')/  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')/  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')-    1);    	non-compiled	[CE]  'catch'  without  'try'	45	None	replace
29	[BUG]  [BUGGY]  char  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	char  dec  =  str.substring(expPos  +  1,  str.length()  -  1);	  char    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	54	None	replace
30	[BUG]  [BUGGY]  char  dec  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  dec  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	char  dec  =  str.substring(expPos  +  1,  str.length()  +  1);	  char    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	54	None	replace
31	[BUG]  [BUGGY]  char  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	char  dec  =  str.substring(decPos  +  1,  str.length());	  char    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	54	None	replace
32	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.'  +  expPos);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.'  +  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.lastIndexOf('.'  +  expPos);	  int    decPos    =    str.indexOf('.'    +    expPos);    	non-compiled	[CE]  'catch'  without  'try'	36	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.'  +  expPos  +  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.'  +  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.'  +  expPos  +  1);	  int    decPos    =    str.indexOf('.'    +    expPos);    	non-compiled	[CE]  'catch'  without  'try'	36	None	replace
34	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.indexOf('.')+  2;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	41	None	replace
35	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.indexOf('.',  expPos)+  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	41	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  'catch'  without  'try'	21	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos  +  1);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  'catch'  without  'try'	21	None	replace
38	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
39	[BUG]  [BUGGY]  bucket  <  str.length()  -  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  -  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  str.length()  -  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
40	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
41	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [CE]  'catch'  without  'try'  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createLong(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
42	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
43	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  2);	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
44	[BUG]  [BUGGY]  exp  =   "   "  +  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =   "   "  +  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =   "   "  +  str.substring(expPos  +  1,  str.length()  -  1);	  exp    =   "   "    +    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	24	None	replace
45	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.length()  +  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	23	None	replace
46	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.length()  -  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	23	None	replace
47	[BUG]  [BUGGY]  int  decPos  =  expPos  +  str.length();  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  expPos  +  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  expPos  +  str.length();	  int    decPos    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	23	None	replace
48	[BUG]  [BUGGY]  int  decPos  =  expPos;  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  expPos;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  expPos;	  int    decPos    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	23	None	replace
49	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  str.length()  -  1)+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  'catch'  without  'try'	51	None	replace
50	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  str.length()  +  1)+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  'catch'  without  'try'	51	None	replace
51	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length())+  2;  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length())+  2;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  str.length())+  2;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  'catch'  without  'try'	51	None	replace
52	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  +  1,  str.length()  -  2);	  String    dec    =    str.substring(0,    expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
53	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  +  1);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  +  1,  str.length()  +  1);	  String    dec    =    str.substring(0,    expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
54	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  *  2);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1,  str.length()  *  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  +  1,  str.length()  *  2);	  String    dec    =    str.substring(0,    expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  2);	  int    expPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	25	None	replace
56	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  str.length()  -  1)+  1;	  String    exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  'catch'  without  'try'	50	None	replace
57	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  str.length()  +  1)+  1;	  String    exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  'catch'  without  'try'	50	None	replace
58	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  -  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos  -  1);	  int    decPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  'catch'  without  'try'	57	None	replace
59	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1  +  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.',  expPos  -  1  +  1);	  int    decPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  'catch'  without  'try'	57	None	replace
60	[BUG]  [BUGGY]  String  DEc  =  str.substring(expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  DEc  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  DEc  =  str.substring(expPos  +  1,  str.length());	  String    dec    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	34	None	replace
61	[BUG]  [BUGGY]  String  desc  =  str.substring(expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  desc  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  desc  =  str.substring(expPos  +  1,  str.length());	  String    dec    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	34	None	replace
62	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  -  1  +  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  -  1  +  1);	  String    dec    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
63	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  -  2);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  -  2);	  String    dec    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
64	[BUG]  [BUGGY]  exp  =  string.substring(expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  string.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  string.substring(expPos  +  1,  str.length()  -  1);	  exp    =    string.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	35	None	replace
65	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  string.length());  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  string.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  string.length());	  exp    =    string.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	35	None	replace
66	[BUG]  [BUGGY]  exp  =  null;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
67	[BUG]  [BUGGY]  Exp  =  null;  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
68	[BUG]  [BUGGY]  Expr  exp  =  null;  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Expr  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Expr  exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
69	[BUG]  [BUGGY]  Expression  exp  =  null;  [CE]  'catch'  without  'try'  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Expression  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Expression  exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
70	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.',  expPos  +  2);	  int    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  'catch'  without  'try'	20	None	replace
71	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  1);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	17	None	replace
72	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  2);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	17	None	replace
73	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  +  1);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	17	None	replace
74	[BUG]  [BUGGY]  expPos  =  str.substring(0,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(0,  str.length()  -  1);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	17	None	replace
75	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  2);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  2);	  exp    =    str.substring(expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	5	None	replace
76	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  'catch'  without  'try'	49	None	replace
77	[BUG]  [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length();  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(expPos  +  1,  str.length();	  String    dec    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  'catch'  without  'try'	33	None	replace
78	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
79	[BUG]  [BUGGY]  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
80	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  [CE]  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
81	[BUG]  [BUGGY]  bucket  <  =  1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  =  1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  =  1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
82	[BUG]  [BUGGY]  exp  =  str.substring(ExpPos  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(ExpPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(ExpPos  +  1,  str.length()  -  1);	  exp    =    str.substring(ExpPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	40	None	replace
83	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.',  expPos  +  1,  str.length());	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	22	None	replace
84	[BUG]  [BUGGY]  Expr  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Expr  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Expr  exp  =  str.substring(expPos  +  1,  str.length());	  if(dec    ==    null    &&    exp    ==    null)    {    exp    =    str.substring(expPos    +    1,    str.length());    }    	non-compiled	[CE]  'catch'  without  'try'	53	None	replace
85	[BUG]  [BUGGY]  ||  exp  ==  null)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ||  exp  ==  null)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	||  exp  ==  null)  {  exp  =  str.substring(expPos  +  1,  str.length());  }	  if(dec    ==    null    &&    exp    ==    null)    {    exp    =    str.substring(expPos    +    1,    str.length());    }    	non-compiled	[CE]  'catch'  without  'try'	53	None	replace
86	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()));  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  str.length()));	  String    exp    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  'catch'  without  'try'	28	None	replace
87	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);	  int    expPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
88	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  str.length()  *  1  +  1);	  String    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  'catch'  without  'try'	39	None	replace
89	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.lastIndexOf('.')+  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	37	None	replace
90	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.')+  2;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	37	None	replace
91	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.',  expPos)+  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	37	None	replace
92	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  str.length()  -  2);	  String    dec    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	13	None	replace
93	[BUG]  [BUGGY]  exp  =  str.substring(0,  strPos.length());  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  strPos.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  strPos.length());	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
94	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	48	None	replace
95	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	48	None	replace
96	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')+  2);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')+  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')+  2);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')+    1);    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
97	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos)+  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos)+  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos)+  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')+    1);    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
98	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  2;	  exp    =    str.substring(expPos    +    1,    str.length();    	non-compiled	[CE]  'catch'  without  'try'	19	None	replace
99	[BUG]  [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  -=  str.substring(0,  str.length()  -  1);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	47	None	replace
100	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1).length();	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
101	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()));  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()));  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  str.length()));	  exp    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
102	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1;	  exp    =    str.substring(expPos    +    1,    str.length();    	non-compiled	[CE]  'catch'  without  'try'	19	None	replace
103	[BUG]  [BUGGY]  char  expPos  =  str.lastIndexOf('.',  dec);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	char  expPos  =  str.lastIndexOf('.',  dec);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  'catch'  without  'try'	49	None	replace
104	[BUG]  [BUGGY]  exp  =  createInteger(str);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  createInteger(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  createInteger(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
105	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  return  createBigInteger(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	return  createBigInteger(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
106	[BUG]  [BUGGY]  return  createLong(str);  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  return  createLong(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	return  createLong(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
107	[BUG]  [BUGGY]  expPos  =  str.length();  [CE]  'catch'  without  'try'  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.length();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.length();	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
108	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1).length();  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1).length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.',  expPos  +  1).length();	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	22	None	replace
109	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(decPos  +  1,  expPos.length()  -  1);	  String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	32	None	replace
110	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.length())+  1;	  exp    =    str.substring(ExpPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	40	None	replace
111	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length());  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  expPos.length());	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
112	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  expPos);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
113	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  expPos.length()  -  1);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
114	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length());  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos,  str.length());	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
115	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  expPos  =  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
116	[BUG]  [BUGGY]  Exponent  <?>  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Exponent  <?>  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Exponent  <?>  dec  =  str.substring(expPos  +  1,  str.length());	  if(dec    ==    null    &&    exp    ==    null)    {    exp    =    str.substring(expPos    +    1,    str.length());    }    	non-compiled	[CE]  'catch'  without  'try'	53	None	replace
117	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length())+  1;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length())+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  expPos.length())+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  'catch'  without  'try'	51	None	replace
118	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  -  1  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  -  1  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  -  1  +  1,  str.length());	  String    dec    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
119	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
120	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.indexOf('.')+  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.indexOf('.')+  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.indexOf('.')+  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')+    1);    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
121	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos.length()  -  1  +  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos.length()  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos.length()  -  1  +  1);	  String    dec    =    str.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  'catch'  without  'try'	56	None	replace
122	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1.length());  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos  +  1.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos  +  1.length());	  String    dec    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  'catch'  without  'try'	55	None	replace
123	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.indexOf('.')-  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.indexOf('.')-  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.indexOf('.')-  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')-    1);    	non-compiled	[CE]  'catch'  without  'try'	45	None	replace
124	[BUG]  [BUGGY]  char  dec  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  dec  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	char  dec  =  str.substring(expPos  +  1,  str.length()  -  2);	  char    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	54	None	replace
125	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  'catch'  without  'try'	26	None	replace
126	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
127	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
128	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
129	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  expPos);	  String    exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	27	None	replace
130	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos.length());  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  expPos.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  expPos.length());	  String    exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	27	None	replace
131	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  expPos.length()  -  1);	  String    exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	27	None	replace
132	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  expPos  +  1);	  String    exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	27	None	replace
133	[BUG]  [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length()).trim();  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length()).trim();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(expPos  +  1,  str.length()).trim();	  String    dec    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  'catch'  without  'try'	33	None	replace
134	[BUG]  [BUGGY]  exp  =  createBigInteger(str);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  createBigInteger(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  createBigInteger(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  'catch'  without  'try'	44	None	replace
135	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
136	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
137	[BUG]  [BUGGY]  if(expPos  >=  decPos)  {  return  createBigInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >=  decPos)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	if(expPos  >=  decPos)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
138	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	48	None	replace
139	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length())+  1;  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length())+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  str.length())+  1;	  String    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  'catch'  without  'try'	39	None	replace
140	[BUG]  [BUGGY]  int  decPos  =  str.substring(expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.substring(expPos  +  1,  str.length());	  String    dec    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  'catch'  without  'try'	31	None	replace
141	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos).trim();  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos).trim();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(0,  expPos).trim();	  String    dec    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	13	None	replace
142	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos  -  1)-  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos  -  1)-  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos  -  1)-  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')-    1);    	non-compiled	[CE]  'catch'  without  'try'	45	None	replace
143	[BUG]  [BUGGY]  String  DEC  =  str.substring(expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  DEC  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  DEC  =  str.substring(expPos  +  1,  str.length());	  String    dec    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	34	None	replace
144	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  expPos);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  expPos);	  exp    =    str.substring(expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	5	None	replace
145	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  decPos);  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  decPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  decPos);	  exp    =    str.substring(expPos    +    1);    	non-compiled	[CE]  'catch'  without  'try'	5	None	replace
146	[BUG]  [BUGGY]  Expr  =  null;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Expr  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	Expr  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
147	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);	  String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	32	None	replace
148	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
149	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  1  ||  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
150	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	bucket  <  1  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
151	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.indexOf('.')/  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	41	None	replace
152	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
153	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length())+  1;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  str.length())+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos,  str.length())+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  'catch'  without  'try'	51	None	replace
154	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	int  decPos  =  str.indexOf('.')/  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'catch'  without  'try'	37	None	replace
155	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  3);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  3);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  3);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	17	None	replace
156	[BUG]  [BUGGY]  char  dec  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  dec  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	char  dec  =  str.substring(0,  expPos  +  1,  str.length());	  String    dec    =    str.substring(0,    expPos    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
157	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos).trim();  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  expPos).trim();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  expPos).trim();	  String    exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	27	None	replace
158	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	String  exp  =  str.substring(0,  expPos  +  1,  str.length());	  String    exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	27	None	replace
159	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos  +  1)+  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos  +  1)+  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos  +  1)+  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.')+    1);    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
160	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  expPos  +  1);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
161	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos).trim();  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos).trim();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  //  no  decimal  point  and  no  exponent  try  {  return  createInteger(str);  }  catch  (final  NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	571	571	1	replace	exp  =  str.substring(0,  expPos).trim();	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
