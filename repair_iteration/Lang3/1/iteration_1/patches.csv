bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  dec  =  str.substring(decPos  +  1).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	dec    =    str.substring(decPos    +    1).trim();    dec  =  str.substring(decPos  +  1).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	3	add
2	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  dec  =  str.substring(decPos  +  1).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  dec  =  str.substring(decPos  +  1).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1).trim();    dec  =  str.substring(decPos  +  1).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	3	add
3	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  Dec  =  str.substring(decPos  +  1).trim();  [CE]  cannot  find  symbol  Dec  [FE]      AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  Dec  =  str.substring(decPos  +  1).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1).trim();    Dec  =  str.substring(decPos  +  1).trim();	  	non-compiled	[CE]  cannot  find  symbol  Dec	13	None	add
4	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  int  decPos  =  str.substring(decPos  +  1).trim();  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  int  decPos  =  str.substring(decPos  +  1).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1).trim();    int  decPos  =  str.substring(decPos  +  1).trim();	  	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	13	None	add
5	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  DEc  =  str.substring(decPos  +  1).trim();  [CE]  cannot  find  symbol  DEc  [FE]          AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  DEc  =  str.substring(decPos  +  1).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1).trim();    DEc  =  str.substring(decPos  +  1).trim();	  	non-compiled	[CE]  cannot  find  symbol  DEc	13	None	add
6	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  variable  dec  is  already  defined  in  method  createNumber(String)  [FE]              AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	String  dec  =  str.substring(decPos  +  1,  expPos);	      String    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  variable  dec  is  already  defined  in  method  createNumber(String)	6	None	replace
7	[BUG]  [BUGGY]  Dec  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  Dec  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	Dec  dec  =  str.substring(decPos  +  1,  expPos);	      String    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.length()  -  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	7	None	replace
9	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                  AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.length()  +  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	7	None	replace
10	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  dec  =  str.substring(decPos  +  2,  expPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  dec  =  str.substring(decPos  +  2,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2,    expPos);    dec  =  str.substring(decPos  +  2,  expPos);	  	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	10	None	add
11	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  Dec  =  str.substring(decPos  +  2,  expPos);  [CE]  cannot  find  symbol  Dec  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  Dec  =  str.substring(decPos  +  2,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2,    expPos);    Dec  =  str.substring(decPos  +  2,  expPos);	  	non-compiled	[CE]  cannot  find  symbol  Dec	10	None	add
12	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  DEc  =  str.substring(decPos  +  2,  expPos);  [CE]  cannot  find  symbol  len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  DEc  =  str.substring(decPos  +  2,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2,    expPos);    DEc  =  str.substring(decPos  +  2,  expPos);	  	non-compiled	[CE]  cannot  find  symbol  len	10	None	add
13	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  cannot  find  symbol  len  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2,    expPos);    dec  =  str.substring(decPos  +  1,  expPos);	  	non-compiled	[CE]  cannot  find  symbol  len	10	None	add
14	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [CE]  cannot  find  symbol  len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  2,  expPos  +  1);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  cannot  find  symbol  len	11	None	replace
15	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  exPos);  [CE]  cannot  find  symbol  len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  exPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  exPos);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  cannot  find  symbol  len	11	None	replace
16	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos);  [CE]  cannot  find  symbol  len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	Dec  =  str.substring(decPos  +  1,  expPos);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  cannot  find  symbol  len	11	None	replace
17	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  3);  dec  =  str.substring(decPos  +  3);  [CE]  cannot  find  symbol  len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  3);  dec  =  str.substring(decPos  +  3);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    3);    dec  =  str.substring(decPos  +  3);	  	non-compiled	[CE]  cannot  find  symbol  len	16	None	add
18	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  3);  Dec  =  str.substring(decPos  +  3);  [CE]  cannot  find  symbol  len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  3);  Dec  =  str.substring(decPos  +  3);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    3);    Dec  =  str.substring(decPos  +  3);	  	non-compiled	[CE]  cannot  find  symbol  len	16	None	add
19	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  3);  dec  =  str.substring(decPos  +  3);  }  else  {  [CE]  'else'  without  'if'  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  3);  dec  =  str.substring(decPos  +  3);  }  else  {  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    3);    dec  =  str.substring(decPos  +  3);  }  else  {	  	non-compiled	[CE]  'else'  without  'if'	16	None	add
20	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  3);  DEc  =  str.substring(decPos  +  3);  [CE]  cannot  find  symbol  mant  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  3);  DEc  =  str.substring(decPos  +  3);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    3);    DEc  =  str.substring(decPos  +  3);	  	non-compiled	[CE]  cannot  find  symbol  mant	16	None	add
21	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2);  dec  =  str.substring(decPos  +  2);  [CE]  cannot  find  symbol  mant  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2);  dec  =  str.substring(decPos  +  2);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2);    dec  =  str.substring(decPos  +  2);	  	non-compiled	[CE]  cannot  find  symbol  mant	8	None	add
22	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2);  Dec  =  str.substring(decPos  +  2);  [CE]  cannot  find  symbol  mant  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2);  Dec  =  str.substring(decPos  +  2);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2);    Dec  =  str.substring(decPos  +  2);	  	non-compiled	[CE]  cannot  find  symbol  mant	8	None	add
23	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2);  dec  =  str.substring(decPos  +  2));  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2);  dec  =  str.substring(decPos  +  2));  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2);    dec  =  str.substring(decPos  +  2));	  	non-compiled	[CE]  ';'  expected	8	None	add
24	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2);  DEc  =  str.substring(decPos  +  2);  [CE]  cannot  find  symbol  mant  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2);  DEc  =  str.substring(decPos  +  2);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2);    DEc  =  str.substring(decPos  +  2);	  	non-compiled	[CE]  cannot  find  symbol  mant	8	None	add
25	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos).trim();  [CE]  cannot  find  symbol  mant  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  expPos).trim();	  dec    =    str.substring(decPos    +    1).trim();    	non-compiled	[CE]  cannot  find  symbol  mant	14	None	replace
26	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  cannot  find  symbol  mant  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  cannot  find  symbol  mant	5	None	replace
27	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  cannot  find  symbol  mant  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  2);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  cannot  find  symbol  mant	5	None	replace
28	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  cannot  find  symbol  mant  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  expPos  -  1);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  cannot  find  symbol  mant	5	None	replace
29	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  exponentPos);  [CE]  cannot  find  symbol  mant  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1,  exponentPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  1,  exponentPos);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  cannot  find  symbol  mant	5	None	replace
30	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  cannot  find  symbol  mant  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos);	      Integer    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  cannot  find  symbol  mant	12	None	replace
31	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  exponentPos);  [CE]  cannot  find  symbol  mant  [FE]          AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  exponentPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	Integer  dec  =  str.substring(decPos  +  1,  exponentPos);	      Integer    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  cannot  find  symbol  mant	12	None	replace
32	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  2,  expPos);  [CE]  cannot  find  symbol  mant  [FE]            AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  Integer  dec  =  str.substring(decPos  +  2,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	Integer  dec  =  str.substring(decPos  +  2,  expPos);	      Integer    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  cannot  find  symbol  mant	12	None	replace
33	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1);  [CE]  cannot  find  symbol  mant  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    dec  =  str.substring(decPos  +  1);	  	non-compiled	[CE]  cannot  find  symbol  mant	1	None	add
34	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  Dec  =  str.substring(decPos  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  Dec  =  str.substring(decPos  +  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    Dec  =  str.substring(decPos  +  1);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
35	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  2);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  2);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    dec  =  str.substring(decPos  +  2);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
36	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1).trim();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  dec  =  str.substring(decPos  +  1).trim();  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    dec  =  str.substring(decPos  +  1).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
37	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.indexOf('.',  expPos);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
38	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.indexOf('.',  DEC_POP);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  incompatible  types	15	None	replace
39	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exponent);  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.indexOf('.',  exponent);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.indexOf('.',  exponent);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  incompatible  types	15	None	replace
40	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    dec  =  str.substring(decPos  +  1,  expPos);	  	non-compiled	[CE]  incompatible  types	4	None	add
41	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  exponent  =  str.substring(decPos  +  1);  }  [CE]  incompatible  types  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  exponent  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  exponent  =  str.substring(decPos  +  1);  }	  	non-compiled	[CE]  incompatible  types	4	None	add
42	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	non-compiled	[CE]  incompatible  types	4	None	add
43	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  exponent  =  str.substring(decPos  +  1,  expPos);  }  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  exponent  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  exponent  =  str.substring(decPos  +  1,  expPos);  }	  	non-compiled	[CE]  incompatible  types	4	None	add
44	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  Dec  =  str.substring(decPos  +  1,  expPos);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  Dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    Dec  =  str.substring(decPos  +  1,  expPos);	  	non-compiled	[CE]  incompatible  types	4	None	add
45	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  incompatible  types	3	None	replace
46	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  incompatible  types	3	None	replace
47	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]              AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.lastIndexOf('.',  1);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	3	None	replace
48	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  3);  DEC  =  str.substring(decPos  +  3);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  3);  DEC  =  str.substring(decPos  +  3);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    3);    DEC  =  str.substring(decPos  +  3);	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	16	None	add
49	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  DEC  =  str.substring(decPos  +  1).trim();  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  DEC  =  str.substring(decPos  +  1).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1).trim();    DEC  =  str.substring(decPos  +  1).trim();	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	13	None	add
50	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  2);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  Integer  dec  =  str.substring(decPos  +  2);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	Integer  dec  =  str.substring(decPos  +  2);	      Integer    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	12	None	replace
51	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  exPos);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]          AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  exPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	Integer  dec  =  str.substring(decPos  +  1,  exPos);	      Integer    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	12	None	replace
52	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2);  DEC  =  str.substring(decPos  +  2);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2);  DEC  =  str.substring(decPos  +  2);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2);    DEC  =  str.substring(decPos  +  2);	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	8	None	add
53	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.indexOf('.',  decPos);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  incompatible  types	15	None	replace
54	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  -  1);  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  -  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  2,  expPos  -  1);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  incompatible  types	11	None	replace
55	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2).trim();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2).trim();  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec  =  str.substring(decPos  +  2).trim();	  dec    =    str.substring(decPos    +    1).trim();    	non-compiled	[CE]  incompatible  types	14	None	replace
56	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  int  decPos  =  str.lastIndexOf('.');  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  int  decPos  =  str.lastIndexOf('.');  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    int  decPos  =  str.lastIndexOf('.');	  	non-compiled	[CE]  incompatible  types	1	None	add
57	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    int  decPos  =  str.lastIndexOf('.')+  1;	  	non-compiled	[CE]  incompatible  types	1	None	add
58	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  int  decPos  =  str.indexOf('  ')+  1;  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  int  decPos  =  str.indexOf('  ')+  1;  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    int  decPos  =  str.indexOf('  ')+  1;	  	non-compiled	[CE]  incompatible  types	4	None	add
59	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  int  decPos  =  str.lastIndexOf('.');  [CE]  incompatible  types  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  int  decPos  =  str.lastIndexOf('.');  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    int  decPos  =  str.lastIndexOf('.');	  	non-compiled	[CE]  incompatible  types	4	None	add
60	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  int  decPos  =  str.substring(decPos  +  2,  expPos);  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  int  decPos  =  str.substring(decPos  +  2,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2,    expPos);    int  decPos  =  str.substring(decPos  +  2,  expPos);	  	non-compiled	[CE]  incompatible  types	10	None	add
61	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  DEC  =  str.substring(decPos  +  2,  expPos);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  DEC  =  str.substring(decPos  +  2,  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2,    expPos);    DEC  =  str.substring(decPos  +  2,  expPos);	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	10	None	add
62	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  int  decPos  =  str.indexOf('.',  expPos);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  int  decPos  =  str.indexOf('.',  expPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2,    expPos);    int  decPos  =  str.indexOf('.',  expPos);	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	10	None	add
63	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  3);  int  decPos  =  str.indexOf('.');  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  3);  int  decPos  =  str.indexOf('.');  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    3);    int  decPos  =  str.indexOf('.');	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	16	None	add
64	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.indexOf('.',  dec);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	15	None	replace
65	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1).trim();  }  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  1).trim();  if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1).trim();  }  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    1).trim();    if(dec  ==  null)  {  dec  =  str.substring(decPos  +  1).trim();  }	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	13	None	add
66	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	1	None	add
67	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  exponent  =  str.substring(decPos  +  1);  }  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]      AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  exponent  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  else  {  exponent  =  str.substring(decPos  +  1);  }	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	1	None	add
68	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]        AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1);    if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1);  }	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	1	None	add
69	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2);  int  decPos  =  str.indexOf('.');  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  dec  =  str.substring(decPos  +  2);  int  decPos  =  str.indexOf('.');  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	dec    =    str.substring(decPos    +    2);    int  decPos  =  str.indexOf('.');	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	8	None	add
70	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	non-compiled	[CE]  variable  pfxLen  is  already  defined  in  method  createNumber(String)	4	None	add
71	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	7	add
72	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(expPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	7	add
73	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	add	        dec    =    str.substring(decPos    +    1,    expPos);    if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	7	add
74	[BUG]  [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]      dec  =  str.substring(decPos  +  1,  expPos);  if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	        dec    =    str.substring(decPos    +    1,    expPos);    if(decPos  >  -1)  {  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	7	add
75	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.lastIndexOf('.',  dec);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
76	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (expPos  >  -1)  {  //  there  is  an  exponent  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  //  prevents  double  exponent  causing  IOOBE  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	494	494	1	replace	int  decPos  =  str.lastIndexOf('.',  decPos);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
