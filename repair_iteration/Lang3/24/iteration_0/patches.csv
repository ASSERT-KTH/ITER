bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
2	[BUG]  [BUGGY]    Number[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    Number[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    Number[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
3	[BUG]  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
4	[BUG]  [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
5	[BUG]  [BUGGY]    Number[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    Number[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    Number[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
6	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "0x ",   "0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "0x ",   "0x ",   "# ",   "-# "  }  ;  [BUGGY]  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "0x ",   "0x ",   "# ",   "-# "  }  ;	final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  	non-compiled	[CE]  ')'  expected	47	None	replace
7	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;	final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  	non-compiled	[CE]  ')'  expected	47	None	replace
8	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "-# "  }  ;  [BUGGY]  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "-# "  }  ;	final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  	non-compiled	[CE]  ')'  expected	47	None	replace
9	[BUG]  [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0X ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0X ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    String[]  hex_prefixes  =  {   "0x ",   "0X ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
10	[BUG]  [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  int  pfxLen  =  0;  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  int  pfxLen  =  0;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  int  pfxLen  =  0;		non-compiled	[CE]  ')'  expected	48	None	add
11	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;	final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  	non-compiled	[CE]  ')'  expected	47	None	replace
12	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-1x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-1x ",   "# ",   "-# "  }  ;  [BUGGY]  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-1x ",   "# ",   "-# "  }  ;	final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  	non-compiled	[CE]  ')'  expected	47	None	replace
13	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;	final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  	non-compiled	[CE]  ')'  expected	47	None	replace
14	[BUG]  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0X ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
15	[BUG]  [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }    [BUGGY]    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]  final  String[]  hex_prefixes  =  { "0x ",   "0X ",   "-0x ",   "-0X ",   "# ",   "-# "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.3333333333333333	458	458	1	replace	    String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;		non-compiled	[CE]  ')'  expected	48	None	add
