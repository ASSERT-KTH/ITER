bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
2	[BUG]  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
4	[BUG]  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
6	[BUG]  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
7	[BUG]  [BUGGY]    years  -=  reduceAndCorrect(months,  end,  Calendar.YEAR,  months);  [CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(months,  end,  Calendar.YEAR,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    years  -=  reduceAndCorrect(months,  end,  Calendar.YEAR,  months);		non-compiled	[CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;	22	None	add
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);		compilable	  [FE]  ComparisonFailure  	22	1	add
9	[BUG]  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);		compilable	  [FE]  ComparisonFailure  	22	1	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]  years  =  1;  [BUGGY]  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  =  1;	years  =  0;  	compilable	  [FE]  ComparisonFailure  	21	1	replace
11	[BUG]  [BUGGY]  years  =  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]  years  =  1;  [BUGGY]  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  1;	years  =  0;  	compilable	  [FE]  ComparisonFailure  	21	1	replace
12	[BUG]  [BUGGY]  years  =  0L;  [CE]  possible  loss  of  precision  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]  years  =  0L;  [BUGGY]  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0L;	years  =  0;  	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
14	[BUG]  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
16	[BUG]  [BUGGY]    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
18	[BUG]  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
20	[BUG]  [BUGGY]    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);		compilable	  [FE]  ComparisonFailure  	22	1	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);		compilable	  [FE]  ComparisonFailure  	22	1	add
22	[BUG]  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);		compilable	  [FE]  ComparisonFailure  	22	1	add
23	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }		non-compiled	[CE]  illegal  start  of  expression	22	None	add
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }		compilable	  [FE]  ComparisonFailure  	22	1	add
25	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }		compilable	  [FE]  ComparisonFailure  	22	1	add
26	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }		non-compiled	[CE]  illegal  start  of  expression	22	None	add
27	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }		non-compiled	[CE]  illegal  start  of  expression	22	None	add
28	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	    if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }		non-compiled	[CE]  illegal  start  of  expression	22	None	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	years  =  0;  	compilable	  [FE]  ComparisonFailure  	21	1	replace
30	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	years  =  0;  	compilable	  [FE]  ComparisonFailure  	21	1	replace
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	years  =  0;  	compilable	  [FE]  ComparisonFailure  	21	1	replace
32	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	years  =  0;  	compilable	  [FE]  ComparisonFailure  	21	1	replace
