bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]  hours  +=  24  *  days  +  1;  [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  24  *  days  +  1;	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
2	[BUG]  [BUGGY]  hours  +=  24  *  days  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]  hours  +=  24  *  days  +  1;  [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  days  +  1;	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]  hours  +=  24  *  years;  [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  24  *  years;	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
4	[BUG]  [BUGGY]  hours  +=  24  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]  hours  +=  24  *  years;  [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  years;	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]  hours  +=  24  *  months;  [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  24  *  months;	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
6	[BUG]  [BUGGY]  hours  +=  24  *  months;  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]  hours  +=  24  *  months;  [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  months;	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	  	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
8	[BUG]  [BUGGY]    [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    [BUGGY]  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	  	hours  +=  24  *  days;  	compilable	  [FE]  ComparisonFailure  	23	1	replace
9	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  d))  {  [CE]  [FE]    ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Token.containsTokenWithValue(tokens,  d))  {		non-compiled	[CE]  	24	None	add
10	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  D))  {  [CE]  [FE]      ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  D))  {  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Token.containsTokenWithValue(tokens,  D))  {		non-compiled	[CE]  	24	None	add
11	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  d)  {  [CE]  [FE]        ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  d)  {  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Token.containsTokenWithValue(tokens,  d)  {		non-compiled	[CE]  	24	None	add
12	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  M))  {  [CE]  [FE]          ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Token.containsTokenWithValue(tokens,  M))  {		non-compiled	[CE]  	24	None	add
13	[BUG]  [BUGGY]    d  +=  24  *  days;  days  =  0;  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]            ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    d  +=  24  *  days;  days  =  0;  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    d  +=  24  *  days;  days  =  0;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	24	None	add
14	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  D  [FE]    ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }		non-compiled	[CE]  cannot  find  symbol  D	24	None	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
16	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
18	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	    if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
20	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
22	[BUG]  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }		compilable	  [FE]  ComparisonFailure  	24	1	add
23	[BUG]  [BUGGY]    Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR);  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR);		non-compiled	[CE]  cannot  find  symbol	24	None	add
24	[BUG]  [BUGGY]    Tag  m  =  tokens.get(d);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Tag  m  =  tokens.get(d);  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Tag  m  =  tokens.get(d);		non-compiled	[CE]  cannot  find  symbol	24	None	add
25	[BUG]  [BUGGY]    Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY);  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY);		non-compiled	[CE]  cannot  find  symbol	24	None	add
26	[BUG]  [BUGGY]    Integer  d  =  tokens.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    Integer  d  =  tokens.get(Calendar.YEAR);  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    Integer  d  =  tokens.get(Calendar.YEAR);		non-compiled	[CE]  cannot  find  symbol	24	None	add
27	[BUG]  [BUGGY]    d  +=  24  *  days;  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]            ComparisonFailure  [CONTEXT]    days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    d  +=  24  *  days;  [BUGGY]  hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	    d  +=  24  *  days;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	24	None	add
