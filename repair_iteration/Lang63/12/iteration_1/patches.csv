bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  L  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }	      if(!Token.containsTokenWithValue(tokens,    D))    {    days    +=    24    *    days;    days    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  L	14	None	replace
2	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  days  +=  24  *  days;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	days  +=  24  *  days;	      d    +=    24    *    days;    days    =    0;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
3	[BUG]  [BUGGY]  days  +=  24  *  days;  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  days  +=  24  *  days;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	days  +=  24  *  days;	      d    +=    24    *    days;    days    =    0;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
4	[BUG]  [BUGGY]  Tage  +=  24  *  days;  [CE]  cannot  find  symbol  Tage  [FE]                  ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tage  +=  24  *  days;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tage  +=  24  *  days;	      d    +=    24    *    days;    days    =    0;    	non-compiled	[CE]  cannot  find  symbol  Tage	13	None	replace
5	[BUG]  [BUGGY]  days  +=  24  *  day;  [CE]  cannot  find  symbol  day  [FE]                    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  days  +=  24  *  day;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	days  +=  24  *  day;	      d    +=    24    *    days;    days    =    0;    	non-compiled	[CE]  cannot  find  symbol  day	13	None	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  days  +=  24  *  hours;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	days  +=  24  *  hours;	      d    +=    24    *    days;    days    =    0;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
7	[BUG]  [BUGGY]  days  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  days  +=  24  *  hours;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	days  +=  24  *  hours;	      d    +=    24    *    days;    days    =    0;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	21	1	add
9	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	21	1	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	21	1	add
11	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	21	1	add
12	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  L  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  L	21	None	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	21	1	add
14	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	21	1	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  24  *  years  +  1;	  hours    +=    24    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
16	[BUG]  [BUGGY]  hours  +=  24  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  years  +  1;	  hours    +=    24    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  24  *  months  +  1;	  hours    +=    24    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
18	[BUG]  [BUGGY]  hours  +=  24  *  months  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  months  +  1;	  hours    +=    24    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
19	[BUG]  [BUGGY]  hours  +=  24  *  d  +  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  d  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  d  +  1;	  hours    +=    24    *    days    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	2	None	replace
20	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }	      if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
21	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  H))  {	      Token.containsTokenWithValue(tokens,    D))    {    	non-compiled	[CE]  	10	None	replace
22	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  24))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  24))  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  24))  {	      Token.containsTokenWithValue(tokens,    D))    {    	non-compiled	[CE]  	10	None	replace
23	[BUG]  [BUGGY]  Integer  d  =  end.get(Calendar.YEAR);  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  end.get(Calendar.YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  end.get(Calendar.YEAR);	      Integer    d    =    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  incompatible  types	26	None	replace
24	[BUG]  [BUGGY]  Integer  d  =  start.get(Calendar.YEAR);  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  start.get(Calendar.YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  start.get(Calendar.YEAR);	      Integer    d    =    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  incompatible  types	26	None	replace
25	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  start.get(Calendar.YEAR);  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  start.get(Calendar.YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.YEAR,  start.get(Calendar.YEAR);	      Integer    d    =    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ')'  expected	26	None	replace
26	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  start.get(Calendar.YEAR));  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  start.get(Calendar.YEAR));  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.YEAR,  start.get(Calendar.YEAR));	      Integer    d    =    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  hours  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    months;    hours  +=  24  *  months;	  	compilable	  [FE]  ComparisonFailure  	5	1	add
28	[BUG]  [BUGGY]  hours  +=  24  *  months;  hours  +=  24  *  months;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  hours  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    months;    hours  +=  24  *  months;	  	compilable	  [FE]  ComparisonFailure  	5	1	add
29	[BUG]  [BUGGY]  hours  +=  24  *  months;  Hour  hours  +=  24  *  months;  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  Hour  hours  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    months;    Hour  hours  +=  24  *  months;	  	non-compiled	[CE]  ';'  expected	5	None	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  days  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    months;    days  +=  24  *  months;	  	compilable	  [FE]  ComparisonFailure  	5	1	add
31	[BUG]  [BUGGY]  hours  +=  24  *  months;  days  +=  24  *  months;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  days  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    months;    days  +=  24  *  months;	  	compilable	  [FE]  ComparisonFailure  	5	1	add
32	[BUG]  [BUGGY]  hours  +=  24  *  months;  Hours  +=  24  *  months;  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  Hours  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    months;    Hours  +=  24  *  months;	  	non-compiled	[CE]  cannot  find  symbol  Hours	5	None	add
33	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  minutes  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    months;    minutes  +=  24  *  months;	  	compilable	  [FE]  ComparisonFailure  	5	1	add
34	[BUG]  [BUGGY]  hours  +=  24  *  months;  minutes  +=  24  *  months;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  minutes  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    months;    minutes  +=  24  *  months;	  	compilable	  [FE]  ComparisonFailure  	5	1	add
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
36	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
38	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
40	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
41	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  L  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  L	15	None	add
42	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  D  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  D	15	None	add
43	[BUG]  [BUGGY]  Tag  m  =  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  start.get(Calendar.DAY_OF_YEAR);	      Tag    m    =    tokens.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
44	[BUG]  [BUGGY]  Tag  m  =  end.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  end.get(Calendar.DAY_OF_YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  end.get(Calendar.DAY_OF_YEAR);	      Tag    m    =    tokens.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
45	[BUG]  [BUGGY]  Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR,  end);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR,  end);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR,  end);	      Tag    m    =    tokens.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
46	[BUG]  [BUGGY]  hours  +=  24  *  d;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  d;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  d;	  hours    +=    24    *    months;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	6	None	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  minutes;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  24  *  minutes;	  hours    +=    24    *    months;    	compilable	  [FE]  ComparisonFailure  	6	1	replace
48	[BUG]  [BUGGY]  hours  +=  24  *  minutes;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  minutes;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  minutes;	  hours    +=    24    *    months;    	compilable	  [FE]  ComparisonFailure  	6	1	replace
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	17	1	add
50	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	17	1	add
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	17	1	add
52	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	17	1	add
53	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  L  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  L))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  L	17	None	add
54	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  D  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  D	17	None	add
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	17	1	add
56	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	17	1	add
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  hours  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    days    +    1;    hours  +=  24  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
58	[BUG]  [BUGGY]  hours  +=  24  *  days  +  1;  hours  +=  24  *  days  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  hours  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    days    +    1;    hours  +=  24  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  days  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    days    +    1;    days  +=  24  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
60	[BUG]  [BUGGY]  hours  +=  24  *  days  +  1;  days  +=  24  *  days  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  days  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    days    +    1;    days  +=  24  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
61	[BUG]  [BUGGY]  hours  +=  24  *  days  +  1;  Hour  hours  +=  24  *  days  +  1;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  Hour  hours  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    days    +    1;    Hour  hours  +=  24  *  days  +  1;	  	non-compiled	[CE]  ';'  expected	1	None	add
62	[BUG]  [BUGGY]  hours  +=  24  *  days  +  1;  Hours  +=  24  *  days  +  1;  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  Hours  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    days    +    1;    Hours  +=  24  *  days  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Hours	1	None	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  minutes  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    days    +    1;    minutes  +=  24  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
64	[BUG]  [BUGGY]  hours  +=  24  *  days  +  1;  minutes  +=  24  *  days  +  1;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  minutes  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    days    +    1;    minutes  +=  24  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
65	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S))  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  S))  {	      Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  	12	None	replace
66	[BUG]  [BUGGY]  Hour  d  +=  24  *  days;  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Hour  d  +=  24  *  days;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Hour  d  +=  24  *  days;	      d    +=    24    *    days;    	non-compiled	[CE]  ';'  expected	27	None	replace
67	[BUG]  [BUGGY]  Hours  d  +=  24  *  days;  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Hours  d  +=  24  *  days;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Hours  d  +=  24  *  days;	      d    +=    24    *    days;    	non-compiled	[CE]  ';'  expected	27	None	replace
68	[BUG]  [BUGGY]  Tag  d  +=  24  *  days;  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  d  +=  24  *  days;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  d  +=  24  *  days;	      d    +=    24    *    days;    	non-compiled	[CE]  ';'  expected	27	None	replace
69	[BUG]  [BUGGY]  Integer  d  =  end.get(Calendar.HOUR_OF_DAY);  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  end.get(Calendar.HOUR_OF_DAY);	      Integer    d    =    tokens.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  incompatible  types	25	None	replace
70	[BUG]  [BUGGY]  Integer  d  =  start.get(Calendar.HOUR_OF_DAY);  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  start.get(Calendar.HOUR_OF_DAY);	      Integer    d    =    tokens.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  incompatible  types	25	None	replace
71	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY)+  1;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY)+  1;	      Integer    d    =    tokens.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
72	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY,  start);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY,  start);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY,  start);	      Integer    d    =    tokens.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	19	1	add
74	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	19	1	add
75	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  D  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  D	19	None	add
76	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  If(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  If(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    If(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  hours  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    years;    hours  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	1	add
78	[BUG]  [BUGGY]  hours  +=  24  *  years;  hours  +=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  hours  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    years;    hours  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	1	add
79	[BUG]  [BUGGY]  hours  +=  24  *  years;  Hour  hours  +=  24  *  years;  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  Hour  hours  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    years;    Hour  hours  +=  24  *  years;	  	non-compiled	[CE]  ';'  expected	3	None	add
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    years;    days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	1	add
81	[BUG]  [BUGGY]  hours  +=  24  *  years;  days  +=  24  *  years;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    years;    days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	1	add
82	[BUG]  [BUGGY]  hours  +=  24  *  years;  Hours  +=  24  *  years;  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  Hours  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    years;    Hours  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Hours	3	None	add
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  minutes  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours    +=    24    *    years;    minutes  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	1	add
84	[BUG]  [BUGGY]  hours  +=  24  *  years;  minutes  +=  24  *  years;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  minutes  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    years;    minutes  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	1	add
85	[BUG]  [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {	      	non-compiled	[CE]  not  a  statement	8	None	replace
86	[BUG]  [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  days  +=  60  *  days;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  days  +=  60  *  days;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  days  +=  60  *  days;	      	non-compiled	[CE]  not  a  statement	8	None	replace
87	[BUG]  [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  days  +=  60  *  hours;  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  days  +=  60  *  hours;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  d))  {  days  +=  60  *  hours;	      	non-compiled	[CE]  not  a  statement	8	None	replace
88	[BUG]  [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  D))  {  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  D))  {  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  D))  {	      	non-compiled	[CE]  not  a  statement	8	None	replace
89	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  H)  {	      Token.containsTokenWithValue(tokens,    d)    {    	non-compiled	[CE]  	11	None	replace
90	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  24)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  24)  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  24)  {	      Token.containsTokenWithValue(tokens,    d)    {    	non-compiled	[CE]  	11	None	replace
91	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  M)  {	      Token.containsTokenWithValue(tokens,    d)    {    	non-compiled	[CE]  	11	None	replace
92	[BUG]  [BUGGY]      DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  M))  {  days  +=  60  *  hours;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  M))  {  days  +=  60  *  hours;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        DurationFormatUtils.copyPeriodToString(tokens,  d)&&!Token.containsTokenWithValue(tokens,  M))  {  days  +=  60  *  hours;	  	non-compiled	[CE]  not  a  statement	7	None	add
93	[BUG]  [BUGGY]  Tag  m  =  d.get(tokens);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  d.get(tokens);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  d.get(tokens);	      Tag    m    =    tokens.get(d);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
94	[BUG]  [BUGGY]  Tag  m  =  end.get(d);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  end.get(d);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  end.get(d);	      Tag    m    =    tokens.get(d);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
95	[BUG]  [BUGGY]  Tag  d  =  tokens.get(d);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  d  =  tokens.get(d);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  d  =  tokens.get(d);	      Tag    m    =    tokens.get(d);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
96	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  y))  {	      Token.containsTokenWithValue(tokens,    D))    {    	non-compiled	[CE]  	10	None	replace
97	[BUG]  [BUGGY]  hours  +=  24  *  days  +  1;  Days  +=  24  *  days  +  1;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  +  1;  Days  +=  24  *  days  +  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    days    +    1;    Days  +=  24  *  days  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Days	1	None	add
98	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	      Integer    d    =    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
99	[BUG]  [BUGGY]  Tags  d  +=  24  *  days;  days  =  0;  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tags  d  +=  24  *  days;  days  =  0;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tags  d  +=  24  *  days;  days  =  0;	      d    +=    24    *    days;    days    =    0;    	non-compiled	[CE]  ';'  expected	13	None	replace
100	[BUG]  [BUGGY]  Tags  d  =  tokens.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tags  d  =  tokens.get(Calendar.DAY_OF_YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tags  d  =  tokens.get(Calendar.DAY_OF_YEAR);	      d    +=    24    *    days;    days    =    0;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
101	[BUG]  [BUGGY]  d  +=  24  *  years;  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  d  +=  24  *  years;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	d  +=  24  *  years;	      d    +=    24    *    days;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	27	None	replace
102	[BUG]  [BUGGY]  d  +=  24  *  months;  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]                  ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  d  +=  24  *  months;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	d  +=  24  *  months;	      d    +=    24    *    days;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	27	None	replace
103	[BUG]  [BUGGY]  hours  +=  24  *  months;  Days  +=  24  *  months;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  months;  Days  +=  24  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    months;    Days  +=  24  *  months;	  	non-compiled	[CE]  cannot  find  symbol  Days	5	None	add
104	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  J  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  days  +=  24  *  days;  days  =  0;  }	      if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  J	20	None	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  30  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  30  *  months;	  hours    +=    24    *    months;    	compilable	  [FE]  ComparisonFailure  	6	1	replace
106	[BUG]  [BUGGY]  hours  +=  30  *  months;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  30  *  months;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  30  *  months;	  hours    +=    24    *    months;    	compilable	  [FE]  ComparisonFailure  	6	1	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  60  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  60  *  years;	  hours    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	4	1	replace
108	[BUG]  [BUGGY]  hours  +=  60  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  60  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  60  *  years;	  hours    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	4	1	replace
109	[BUG]  [BUGGY]  hours  +=  24  *  years;  Days  +=  24  *  years;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  years;  Days  +=  24  *  years;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours    +=    24    *    years;    Days  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Days	3	None	add
110	[BUG]  [BUGGY]  Tag  m  =  start.get(d);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  start.get(d);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  start.get(d);	      Tag    m    =    tokens.get(d);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
111	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	      if(!Token.containsTokenWithValue(tokens,    S))    {    days    +=    24    *    days;    days    =    0;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
112	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  m))  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  m))  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  m))  {	      Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  	12	None	replace
113	[BUG]  [BUGGY]  Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  tokens.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);	      Tag    m    =    tokens.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
114	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,  d))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  60  *  days;  months  =  0;  }  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  60  *  days;  months  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	7	2	add
116	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  60  *  days;  months  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  60  *  days;  months  =  0;  }  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  60  *  days;  months  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	7	2	add
117	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  D))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  D))  {  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,  D))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  /  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	hours  +=  24  *  days  /  1;	  hours    +=    24    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
119	[BUG]  [BUGGY]  hours  +=  24  *  days  /  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  hours  +=  24  *  days  /  1;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	hours  +=  24  *  days  /  1;	  hours    +=    24    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
120	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	      Integer    d    =    tokens.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
121	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  D  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    H))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  D))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  D	21	None	add
122	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  y)  {	      Token.containsTokenWithValue(tokens,    d)    {    	non-compiled	[CE]  	11	None	replace
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	19	1	add
124	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	19	1	add
125	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  DEFAULT))  {  days  +=  24  *  days;  days  =  0;  }  [CE]  cannot  find  symbol  DEFAULT  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  DEFAULT))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  DEFAULT))  {  days  +=  24  *  days;  days  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  DEFAULT	19	None	add
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	19	1	add
127	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  d))  {  days  +=  24  *  days;  days  =  0;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        if(!Token.containsTokenWithValue(tokens,    d))    {    days    +=    24    *    days;    days    =    0;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  24  *  days;  days  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	19	1	add
128	[BUG]  [BUGGY]  Tags  d  +=  24  *  days;  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tags  d  +=  24  *  days;  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tags  d  +=  24  *  days;	      d    +=    24    *    days;    	non-compiled	[CE]  ';'  expected	27	None	replace
129	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  J)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  J)  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  J)  {	      Token.containsTokenWithValue(tokens,    d)    {    	non-compiled	[CE]  	11	None	replace
130	[BUG]  [BUGGY]  d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	8	None	replace
131	[BUG]  [BUGGY]  d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  days  =  0;  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]      ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  days  =  0;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  days  =  0;	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	8	None	replace
132	[BUG]  [BUGGY]  d  +=  end.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  d  +=  end.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	d  +=  end.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	8	None	replace
133	[BUG]  [BUGGY]  d  +=  end.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);  days  =  0;  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  d  +=  end.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);  days  =  0;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	d  +=  end.get(Calendar.DAY_OF_YEAR)-  start.get(Calendar.DAY_OF_YEAR);  days  =  0;	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	8	None	replace
134	[BUG]  [BUGGY]      d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  months  =  0;  [CE]  cannot  assign  a  value  to  final  variable  d  [FE]    ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]      d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  months  =  0;  [BUGGY]    days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	        d  +=  end.get(Calendar.DATE_OF_YEAR)-  start.get(Calendar.DATE_OF_YEAR);  months  =  0;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  d	7	None	add
135	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  start);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  start);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.YEAR,  start);	      Integer    d    =    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
136	[BUG]  [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  end);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Integer  d  =  tokens.get(Calendar.YEAR,  end);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Integer  d  =  tokens.get(Calendar.YEAR,  end);	      Integer    d    =    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
137	[BUG]  [BUGGY]  Tag  m  =  d.get(tmp);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Tag  m  =  d.get(tmp);  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Tag  m  =  d.get(tmp);	      Tag    m    =    tokens.get(d);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
138	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  J))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  d))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  J))  {  [BUGGY]    hours  +=  24  *  days;  days  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  H))  {  minutes  +=  60  *  hours;  hours  =  0;  }  if  (!Token.containsTokenWithValue(tokens,  m))  {  seconds  +=  60  *  minutes;  minutes  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	Token.containsTokenWithValue(tokens,  J))  {	      Token.containsTokenWithValue(tokens,    d))    {    	non-compiled	[CE]  	9	None	replace
