17	[BUG]    [BUGGY]    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1    *    difference    -    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    +    1    *    difference    -    1);    start.add(field,  newdiff  +  1  *  difference  -  1);	  	plausible		1	0
31	[BUG]    [BUGGY]    int    milliseconds    =    Math.min(milliseconds,    startValue    -    endValue);    [CE]    variable    milliseconds    might    not    have    been    initialized    [FE]                ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    int    milliseconds    =    Math.min(milliseconds,    startValue    -    endValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(newdiff,  startValue  -  endValue);	  int    milliseconds    =    Math.min(milliseconds,    startValue    -    endValue);    	plausible		64	0
45	[BUG]    [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    startValue    +    startValue;    [CE]    variable    days    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    startValue    +    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  startValue  +  endValue;	          int    days    =    startValue    -    startValue;    int    days    =    startValue    +    startValue;    	plausible		72	0
45	[BUG]    [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    startValue    +    startValue;    [CE]    variable    days    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    startValue    +    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  endValue  +  startValue;	          int    days    =    startValue    -    startValue;    int    days    =    startValue    +    startValue;    	plausible		72	0
45	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [FE]    ComparisonFailure    [FE]                    ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	plausible		43	0
45	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [FE]    ComparisonFailure    [FE]                    ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	plausible		43	0
45	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [FE]    ComparisonFailure    [FE]                    ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	plausible		43	0
68	[BUG]    [BUGGY]    end.add(field,    newdiff    /    1);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    /    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  /  2);	  end.add(field,    newdiff    /    1);    	plausible		90	0
68	[BUG]    [BUGGY]    end.add(field,    newdiff    /    1);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    /    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  field  /  1);	  end.add(field,    newdiff    /    1);    	plausible		90	0
72	[BUG]    [BUGGY]    end.add(field,    newdiff    *    1);    [FE]    ComparisonFailure    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    *    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  field  *  1);	  end.add(field,    newdiff    *    1);    	plausible		92	0
74	[BUG]    [BUGGY]    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    2);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    +    2);    start.add(field,  newdiff  +  2);	  	plausible		75	0
84	[BUG]    [BUGGY]    end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(startValue  ==  endValue)  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	plausible		18	0
106	[BUG]    [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    endValue    -    startValue;    [CE]    variable    days    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    endValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	long  days  =  startValue  -  startValue;	          int    days    =    startValue    -    startValue;    int    days    =    endValue    -    startValue;    	plausible		24	0
111	[BUG]    [BUGGY]    end.add(newdiff,    newdiff    -    startValue);    [FE]    IllegalArgumentException    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(newdiff,    newdiff    -    startValue);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  startValue  -  newdiff);	  end.add(newdiff,    newdiff    -    startValue);    	plausible		52	0
111	[BUG]    [BUGGY]    end.add(newdiff,    newdiff    -    startValue);    [FE]    IllegalArgumentException    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(newdiff,    newdiff    -    startValue);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  newdiff  -  1);	  end.add(newdiff,    newdiff    -    startValue);    	plausible		52	0
118	[BUG]    [BUGGY]    end.add(field,    newdiff    +    1    *    difference    );    int    end.add(field,    newdiff    +    1    *    difference    );    [CE]    ';'    expected    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1    *    difference    );    int    end.add(field,    newdiff    +    1    *    difference    );    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  ==  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }	  end.add(field,    newdiff    +    1    *    difference    );    int    end.add(field,    newdiff    +    1    *    difference    );    	plausible		30	0
127	[BUG]    [BUGGY]    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    start.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);	  	plausible		17	0
129	[BUG]    [BUGGY]    end.add(newdiff,    field    -    startValue);    [FE]    IllegalArgumentException    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(newdiff,    field    -    startValue);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  startValue  -  field);	  end.add(newdiff,    field    -    startValue);    	plausible		50	0
130	[BUG]    [BUGGY]    end.add(field,    newdiff    +    1    *    difference    -    1);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1    *    difference    -    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  newdiff  +  1  *  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    -    1);    	plausible		2	0
153	[BUG]    [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    [CE]    variable    milliseconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.max(newdiff,  endValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    	plausible		70	0
158	[BUG]    [BUGGY]    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    /    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    /    1);    start.add(field,  newdiff  /  1);	  	plausible		89	0
163	[BUG]    [BUGGY]    [FE]    ComparisonFailure    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    *    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    *    1);    start.add(field,  newdiff  *  1);	  	plausible		91	0
167	[BUG]    [BUGGY]    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        +        1        *        difference        );        end.add(field,    newdiff    +    1    *    difference    );    start.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );	  	plausible		28	0
174	[BUG]    [BUGGY]    end.add(field,    newdiff    +    2);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    2);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  newdiff  +  1);	  end.add(field,    newdiff    +    2);    	plausible		76	0
184	[BUG]    [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    [CE]    variable    milliseconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(startValue,  endValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    	plausible		69	0
185	[BUG]    [BUGGY]    end.add(startValue,    newdiff    +    1);    [FE]    IllegalArgumentException    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(startValue,    newdiff    +    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  startValue  +  1);	  end.add(startValue,    newdiff    +    1);    	plausible		10	0
185	[BUG]    [BUGGY]    end.add(startValue,    newdiff    +    1);    [FE]    IllegalArgumentException    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(startValue,    newdiff    +    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,  newdiff  -  1);	  end.add(startValue,    newdiff    +    1);    	plausible		10	0
192	[BUG]    [BUGGY]    int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    [CE]    variable    milliseconds    might    not    have    been    initialized    [FE]                ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(newdiff,  endValue  -  newdiff);	  int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    	plausible		21	0
192	[BUG]    [BUGGY]    int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    [CE]    variable    milliseconds    might    not    have    been    initialized    [FE]                ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(newdiff,  endValue  -  difference);	  int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    	plausible		21	0
201	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    +    startValue;    [CE]    variable    seconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    +    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  startValue  +  endValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    +    startValue;    	plausible		85	0
211	[BUG]    [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    [CE]    variable    milliseconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(startValue,  difference  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    	plausible		70	0
222	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    +    startValue;    [CE]    variable    seconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    +    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  +  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    +    startValue;    	plausible		85	0
231	[BUG]    [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    [CE]    variable    milliseconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(endValue,  difference  -  1);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    	plausible		69	0
240	[BUG]    [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    startValue    -    startValue);    [CE]    ';'    expected    [FE]                        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    startValue    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  endValue  *  startValue;	          int    days    =    startValue    -    startValue;    int    days    =    startValue    -    startValue);    	plausible		27	0
276	[BUG]    [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    [CE]    variable    milliseconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(startValue,  difference  -  endValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	plausible		58	0
277	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    startValue;    [CE]    variable    seconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =(endValue  -  startValue)/  2;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    startValue;    	plausible		39	0
280	[BUG]    [BUGGY]    end.add(field,    newdiff    /    1);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    /    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  /  difference);	  end.add(field,    newdiff    /    1);    	plausible		90	0
280	[BUG]    [BUGGY]    end.add(field,    newdiff    +    1    *    difference    -    1);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1    *    difference    -    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  -  1  *  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    -    1);    	plausible		2	0
280	[BUG]    [BUGGY]    end.add(field,    newdiff    +    1    *    difference    -    1);    [FE]    ComparisonFailure    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(field,    newdiff    +    1    *    difference    -    1);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  +  1  /  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    -    1);    	plausible		2	0
312	[BUG]    [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    [CE]    variable    milliseconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.max(endValue,  newdiff  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    	plausible		70	0
312	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    startValue;    [CE]    variable    seconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  field  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    startValue;    	plausible		39	0
320	[BUG]    [BUGGY]    end.add(newdiff,    field    -    startValue);    [FE]    IllegalArgumentException    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(newdiff,    field    -    startValue);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  field  -  newdiff);	  end.add(newdiff,    field    -    startValue);    	plausible		50	0
320	[BUG]    [BUGGY]    end.add(newdiff,    field    -    startValue);    [FE]    IllegalArgumentException    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]    end.add(newdiff,    field    -    startValue);    [BUGGY]        return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  field  -  1);	  end.add(newdiff,    field    -    startValue);    	plausible		50	0
322	[BUG]    [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    [CE]    variable    milliseconds    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]        ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(endValue,  endValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(startValue,    difference    -    startValue);    	plausible		69	0
330	[BUG]    [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    endValue    -    startValue;    [CE]    variable    days    is    already    defined    in    method    reduceAndCorrect(Calendar,Calendar,int,int)    [FE]            ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    days    =    startValue    -    startValue;    int    days    =    endValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  endValue  -  startValue  +  1;	          int    days    =    startValue    -    startValue;    int    days    =    endValue    -    startValue;    	plausible		24	0
348	[BUG]    [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [FE]    ComparisonFailure    [FE]                    ComparisonFailure        [CONTEXT]        static    int    reduceAndCorrect(Calendar    start,    Calendar    end,    int    field,    int    difference)    {    end.add(    field,    -1    *    difference    );    int    endValue    =    end.get(field);    int    startValue    =    start.get(field);    if    (endValue    <    startValue)    {    int    newdiff    =    startValue    -    endValue;        [BUGGY]            int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    [BUGGY]        end.add(    field,    newdiff    );    return    newdiff;    }    else    {    return    0;    }    }    [CLASS]    DurationFormatUtils    Token    [METHOD]    reduceAndCorrect    [RETURN_TYPE]    int    Calendar    start    Calendar    end    int    field    int    difference    [VARIABLES]    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    str    tmp    boolean    int    count    days    difference    endValue    field    hours    i    milliseconds    minutes    months    newdiff    seconds    startValue    sz    years    Calendar    end    start    	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  endValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	plausible		43	0
