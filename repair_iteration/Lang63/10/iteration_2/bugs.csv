bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
2	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
4	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
5	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	15	None	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
7	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
9	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
10	[BUG]  [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	29	None	replace
11	[BUG]  [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	29	None	replace
12	[BUG]  [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	29	None	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
14	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
16	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
18	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
19	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	24	None	replace
20	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	24	None	replace
21	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]                  ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  cannot  find  symbol  Hours	24	None	replace
22	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	21	None	replace
23	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	21	None	replace
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
25	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
26	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  cannot  find  symbol  Days	19	None	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
28	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
30	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
32	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
33	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	9	1	add
34	[BUG]  [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	9	1	add
35	[BUG]  [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY,  y);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY,  y);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days  +=  end.get(Calendar.HOUR_OF_DAY,  y);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	9	None	add
36	[BUG]  [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY,  M);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY,  M);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days  +=  end.get(Calendar.HOUR_OF_DAY,  M);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	9	None	add
37	[BUG]  [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,	  	non-compiled	[CE]  ')'  expected	9	None	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	9	2	add
39	[BUG]  [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	9	2	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
41	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
43	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
45	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
47	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
49	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
51	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
53	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  days;	  months    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	4	2	replace
55	[BUG]  [BUGGY]  months  +=  365  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  days;	  months    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	4	2	replace
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  years  +  1;	  months    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	4	2	replace
57	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  years  +  1;	  months    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	4	2	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
59	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
61	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
62	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	17	None	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
64	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
66	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
68	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
70	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    years;    months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	2	add
72	[BUG]  [BUGGY]  months  +=  365  *  years;  months  +=  365  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years;    months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	2	add
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    years;    years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	2	add
74	[BUG]  [BUGGY]  months  +=  365  *  years;  years  +=  365  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years;    years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	2	add
75	[BUG]  [BUGGY]  months  +=  365  *  years;  Months  +=  365  *  years;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  Months  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years;    Months  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	3	None	add
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    years;    days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	2	add
77	[BUG]  [BUGGY]  months  +=  365  *  years;  days  +=  365  *  years;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years;    days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	3	2	add
78	[BUG]  [BUGGY]  months  +=  365  *  years;  Years  +=  365  *  years;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  Years  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years;    Years  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	3	None	add
79	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY;	  months    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	8	None	replace
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  days;	  months    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	8	2	replace
81	[BUG]  [BUGGY]  months  +=  24  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  days;	  months    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	8	2	replace
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  365;	  months    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	8	2	replace
83	[BUG]  [BUGGY]  months  +=  24  *  365;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  365;	  months    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	8	2	replace
84	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;	  months    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	8	None	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
86	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	13	2	add
88	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	13	2	add
89	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	13	None	add
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
91	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
92	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	13	None	add
93	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	25	None	replace
94	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]                  ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	25	None	replace
95	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [CE]  cannot  find  symbol  Months  [FE]                    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	25	None	replace
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    years;    months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	7	2	add
97	[BUG]  [BUGGY]  months  +=  24  *  years;  months  +=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years;    months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	7	2	add
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    years;    years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	7	2	add
99	[BUG]  [BUGGY]  months  +=  24  *  years;  years  +=  24  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years;    years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	7	2	add
100	[BUG]  [BUGGY]  months  +=  24  *  years;  Months  +=  24  *  years;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  Months  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years;    Months  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	7	None	add
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    years;    days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	7	2	add
102	[BUG]  [BUGGY]  months  +=  24  *  years;  days  +=  24  *  years;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years;    days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	7	2	add
103	[BUG]  [BUGGY]  months  +=  24  *  years;  Years  +=  24  *  years;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  Years  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years;    Years  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	7	None	add
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
105	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
107	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
109	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days;    months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
111	[BUG]  [BUGGY]  months  +=  12  *  days;  months  +=  12  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days;    months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days;    years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
113	[BUG]  [BUGGY]  months  +=  12  *  days;  years  +=  12  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days;    years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
114	[BUG]  [BUGGY]  months  +=  12  *  days;  Months  +=  12  *  days;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  Months  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days;    Months  +=  12  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Months	1	None	add
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days;    days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
116	[BUG]  [BUGGY]  months  +=  12  *  days;  days  +=  12  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days;    days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	1	1	add
117	[BUG]  [BUGGY]  months  +=  12  *  days;  Month  months  +=  12  *  days;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  Month  months  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days;    Month  months  +=  12  *  days;	  	non-compiled	[CE]  ';'  expected	1	None	add
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  +  1;	  months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	27	2	replace
119	[BUG]  [BUGGY]  months  +=  12  *  days  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  1;	  months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	27	2	replace
120	[BUG]  [BUGGY]  y  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	28	None	replace
121	[BUG]  [BUGGY]  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  value  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	28	None	replace
122	[BUG]  [BUGGY]  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  value	31	None	replace
123	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ';'  expected	31	None	replace
124	[BUG]  [BUGGY]  y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                  ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	31	None	replace
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	26	2	add
126	[BUG]  [BUGGY]  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	26	2	add
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	26	2	add
128	[BUG]  [BUGGY]  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	26	2	add
129	[BUG]  [BUGGY]  months  +=  12  *  years  +  1;  Months  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  Months  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    +    1;    Months  +=  12  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Months	26	None	add
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	26	2	add
131	[BUG]  [BUGGY]  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	26	2	add
132	[BUG]  [BUGGY]  months  +=  12  *  years  +  1;  Years  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  Years  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    +    1;    Years  +=  12  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	26	None	add
133	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	22	None	replace
134	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	22	None	replace
135	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	22	None	replace
136	[BUG]  [BUGGY]  value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	      y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol  value	32	None	replace
137	[BUG]  [BUGGY]  month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  month  [FE]                  ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	      y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol  month	32	None	replace
138	[BUG]  [BUGGY]  y  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);	      y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	32	None	replace
139	[BUG]  [BUGGY]  y  +=  start.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  start.get(Calendar.YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.YEAR);	      y    +=    end.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	30	None	replace
140	[BUG]  [BUGGY]  value  +=  end.get(Calendar.YEAR);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  value  +=  end.get(Calendar.YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.YEAR);	      y    +=    end.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	30	None	replace
141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    365;    months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	5	2	add
142	[BUG]  [BUGGY]  months  +=  12  *  365;  months  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    365;    months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	5	2	add
143	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    365;    years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	5	2	add
144	[BUG]  [BUGGY]  months  +=  12  *  365;  years  +=  12  *  365;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    365;    years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	5	2	add
145	[BUG]  [BUGGY]  months  +=  12  *  365;  Months  +=  12  *  365;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  Months  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    365;    Months  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Months	5	None	add
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    365;    days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	5	2	add
147	[BUG]  [BUGGY]  months  +=  12  *  365;  days  +=  12  *  365;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    365;    days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	5	2	add
148	[BUG]  [BUGGY]  months  +=  12  *  365;  Month  months  +=  12  *  365;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  Month  months  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    365;    Month  months  +=  12  *  365;	  	non-compiled	[CE]  ';'  expected	5	None	add
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  24;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  24;	  months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	6	2	replace
150	[BUG]  [BUGGY]  months  +=  12  *  24;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  24;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  24;	  months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	6	2	replace
151	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	23	None	replace
152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  /  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  years  /  1;	  months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	27	1	replace
153	[BUG]  [BUGGY]  months  +=  12  *  years  /  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  /  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  years  /  1;	  months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	27	1	replace
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
155	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
157	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
158	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	11	None	add
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
160	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
161	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
162	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
163	[BUG]  [BUGGY]  months  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    +    1;    Month  months  +=  12  *  years  +  1;	  	non-compiled	[CE]  ';'  expected	26	None	add
164	[BUG]  [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  value  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  value	29	None	replace
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
166	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
167	[BUG]  [BUGGY]  months  +=  365  *  years;  Month  months  +=  365  *  years;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  years;  Month  months  +=  365  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years;    Month  months  +=  365  *  years;	  	non-compiled	[CE]  ';'  expected	3	None	add
168	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	23	None	replace
169	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	23	None	replace
170	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  cannot  find  symbol  Hours	24	None	replace
171	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	25	None	replace
172	[BUG]  [BUGGY]      Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,	  	non-compiled	[CE]  ')'  expected	9	None	add
173	[BUG]  [BUGGY]      Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,	  	non-compiled	[CE]  ')'  expected	9	None	add
174	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	17	None	add
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
176	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
177	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	17	None	add
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
179	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
180	[BUG]  [BUGGY]  y  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);	      y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	32	None	replace
181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
182	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
183	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  ';'  expected	13	None	add
184	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	21	None	replace
185	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	21	None	replace
186	[BUG]  [BUGGY]  y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.YEAR);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	28	None	replace
187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days  +  365  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  +  365  *  days;	  months    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	2	2	replace
188	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days  +  365  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  365  *  days;	  months    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	2	2	replace
189	[BUG]  [BUGGY]  months  +=  365  *  tokens;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  tokens;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  tokens;	  months    +=    365    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	4	None	replace
190	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  hours;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  hours;	  months    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	4	2	replace
191	[BUG]  [BUGGY]  months  +=  365  *  hours;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  hours;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  hours;	  months    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	4	2	replace
192	[BUG]  [BUGGY]  months  +=  365  *  M;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  M;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  M;	  months    +=    365    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	4	None	replace
193	[BUG]  [BUGGY]  months  +=  24  *  years;  Month  months  +=  24  *  years;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years;  Month  months  +=  24  *  years;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years;    Month  months  +=  24  *  years;	  	non-compiled	[CE]  ';'  expected	7	None	add
194	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	14	None	replace
195	[BUG]  [BUGGY]  months  +=  12  *  365;  Years  +=  12  *  365;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  365;  Years  +=  12  *  365;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    365;    Years  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Years	5	None	add
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
197	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  hours;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  hours;	  months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	6	2	replace
199	[BUG]  [BUGGY]  months  +=  12  *  hours;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  hours;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  hours;	  months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	6	2	replace
200	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	22	None	replace
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	18	2	replace
202	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	18	2	replace
203	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [CE]  cannot  find  symbol  Hours  [FE]            ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	23	None	replace
204	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	23	None	replace
205	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }	      	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
206	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  hours;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  hours;	  months    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	8	2	replace
207	[BUG]  [BUGGY]  months  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  hours;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  hours;	  months    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	8	2	replace
208	[BUG]  [BUGGY]  months  +=  24  *  M;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  M;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  M;	  months    +=    24    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	8	None	replace
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
210	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
211	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
212	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	20	2	replace
213	[BUG]  [BUGGY]  months  +=  12  *  YEAR;  [CE]  cannot  find  symbol  YEAR  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  YEAR;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  YEAR;	  months    +=    12    *    365;    	non-compiled	[CE]  cannot  find  symbol  YEAR	6	None	replace
214	[BUG]  [BUGGY]  months  +=  12  *  M;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  M;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  M;	  months    +=    12    *    365;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	6	None	replace
215	[BUG]  [BUGGY]  months  +=  12  *  days;  Years  +=  12  *  days;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  12  *  days;  Years  +=  12  *  days;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days;    Years  +=  12  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Years	1	None	add
216	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
217	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
218	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
219	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
221	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
222	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  years  +  1;	  months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	27	2	replace
223	[BUG]  [BUGGY]  months  +=  24  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  24  *  years  +  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  years  +  1;	  months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	27	2	replace
224	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	      y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
225	[BUG]  [BUGGY]  Month  value  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Month  value  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  value  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	      y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
226	[BUG]  [BUGGY]  Month  end  =  start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Month  end  =  start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);	      y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
227	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
228	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
229	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
230	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	14	2	replace
231	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,  [CE]  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,	  	non-compiled	[CE]  	9	None	add
232	[BUG]  [BUGGY]  year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  year  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  year	31	None	replace
233	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
234	[BUG]  [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tag  y  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
235	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	21	None	replace
236	[BUG]  [BUGGY]  Day  end  =  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Day  end  =  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Day  end  =  start.get(Calendar.HOUR_OF_DAY);	      y    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
237	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
238	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	11	1	add
239	[BUG]  [BUGGY]  year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  year  [FE]        ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  year	28	None	replace
240	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	      y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
241	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]              ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  cannot  find  symbol  Hours	24	None	replace
242	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]                ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  cannot  find  symbol  Hours	24	None	replace
243	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
244	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	12	2	replace
245	[BUG]  [BUGGY]  months  +=  365  *  YEARS;  [CE]  cannot  find  symbol  YEARS  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  +=  365  *  YEARS;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  YEARS;	  months    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  YEARS	4	None	replace
246	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	22	None	replace
247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
248	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
249	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
250	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
251	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
252	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	      days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	16	2	replace
253	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
254	[BUG]  [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {    [BUGGY]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
